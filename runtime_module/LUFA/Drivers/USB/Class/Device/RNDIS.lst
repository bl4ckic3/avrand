   1               		.file	"RNDIS.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.RNDIS_Device_ProcessControlRequest,"ax",@progbits
  12               	.global	RNDIS_Device_ProcessControlRequest
  14               	RNDIS_Device_ProcessControlRequest:
  15               	.LFB97:
  16               		.file 1 "../../LUFA/Drivers/USB/Class/Device/RNDIS.c"
   1:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** /*
   2:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****              LUFA Library
   3:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****      Copyright (C) Dean Camera, 2011.
   4:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
   5:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   dean [at] fourwalledcubicle [dot] com
   6:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****            www.lufa-lib.org
   7:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** */
   8:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
   9:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** /*
  10:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  12:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   Permission to use, copy, modify, distribute, and sell this
  13:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   software and its documentation for any purpose is hereby granted
  14:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   without fee, provided that the above copyright notice appear in
  15:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   all copies and that both that the copyright notice and this
  16:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   permission notice and warranty disclaimer appear in supporting
  17:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   documentation, and that the name of the author not be used in
  18:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   advertising or publicity pertaining to distribution of the
  19:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   software without specific, written prior permission.
  20:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  21:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   The author disclaim all warranties with regard to this
  22:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   software, including all implied warranties of merchantability
  23:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   and fitness.  In no event shall the author be liable for any
  24:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   special, indirect or consequential damages or any damages
  25:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   in an action of contract, negligence or other tortious action,
  27:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   arising out of or in connection with the use or performance of
  28:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   this software.
  29:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** */
  30:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  31:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #include "../../Core/USBMode.h"
  33:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  34:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #if defined(USB_CAN_BE_DEVICE)
  35:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  36:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #define  __INCLUDE_FROM_RNDIS_DRIVER
  37:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #define  __INCLUDE_FROM_RNDIS_DEVICE_C
  38:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #include "RNDIS.h"
  39:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  40:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** static const uint32_t PROGMEM AdapterSupportedOIDList[]  =
  41:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
  42:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_SUPPORTED_LIST),
  43:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_PHYSICAL_MEDIUM),
  44:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_HARDWARE_STATUS),
  45:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_SUPPORTED),
  46:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_IN_USE),
  47:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_FRAME_SIZE),
  48:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_TOTAL_SIZE),
  49:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_LINK_SPEED),
  50:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_TRANSMIT_BLOCK_SIZE),
  51:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_RECEIVE_BLOCK_SIZE),
  52:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_VENDOR_ID),
  53:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_VENDOR_DESCRIPTION),
  54:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_CURRENT_PACKET_FILTER),
  55:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_TOTAL_SIZE),
  56:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_CONNECT_STATUS),
  57:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_XMIT_OK),
  58:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_RCV_OK),
  59:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_XMIT_ERROR),
  60:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_RCV_ERROR),
  61:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_GEN_RCV_NO_BUFFER),
  62:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_802_3_PERMANENT_ADDRESS),
  63:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_802_3_CURRENT_ADDRESS),
  64:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_802_3_MULTICAST_LIST),
  65:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_802_3_MAXIMUM_LIST_SIZE),
  66:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_802_3_RCV_ERROR_ALIGNMENT),
  67:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_802_3_XMIT_ONE_COLLISION),
  68:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		CPU_TO_LE32(OID_802_3_XMIT_MORE_COLLISIONS),
  69:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	};
  70:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  71:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** void RNDIS_Device_ProcessControlRequest(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
  72:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
  17               		.loc 1 72 0
  18               		.cfi_startproc
  19               	.LVL0:
  20 0000 EF92      		push r14
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 14, -2
  24 0002 FF92      		push r15
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 15, -3
  28 0004 0F93      		push r16
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 16, -4
  32 0006 1F93      		push r17
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 17, -5
  36 0008 CF93      		push r28
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 28, -6
  40 000a DF93      		push r29
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 8
  43               		.cfi_offset 29, -7
  44 000c 00D0      		rcall .
  45               	.LCFI6:
  46               		.cfi_def_cfa_offset 10
  47 000e CDB7      		in r28,__SP_L__
  48 0010 DEB7      		in r29,__SP_H__
  49               	.LCFI7:
  50               		.cfi_def_cfa_register 28
  51               	/* prologue: function */
  52               	/* frame size = 2 */
  53               	/* stack size = 8 */
  54               	.L__stack_usage = 8
  55 0012 7C01      		movw r14,r24
  56               	.LBB62:
  57               	.LBB63:
  58               		.file 2 "../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaim all warranties with regard to this
  22:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
  93:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE(EPIndex)         _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## EPI
  94:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE2(EPDetails)      _ENDPOINT_GET_MAXSIZE3(EPDetails)
  95:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE3(MaxSize, Banks) (MaxSize)
  96:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  97:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS(EPIndex)           _ENDPOINT_GET_BANKS2(ENDPOINT_DETAILS_EP ## EPInd
  98:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS2(EPDetails)        _ENDPOINT_GET_BANKS3(EPDetails)
  99:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS3(MaxSize, Banks)   (Banks)
 100:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 101:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 102:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             7
 103:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 104:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 105:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               256, 2
 106:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  2
 107:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 108:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 109:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP5               64,  2
 110:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP6               64,  2
 111:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 112:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             5
 113:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 114:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 115:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               64,  1
 116:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  1
 117:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 118:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 119:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 120:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 121:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 122:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 123:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 124:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 125:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 126:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 127:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 128:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 129:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 130:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 131:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 132:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 133:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 134:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 135:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 136:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 137:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 138:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 139:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 140:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 141:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 142:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 143:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 144:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 145:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 146:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 147:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */			
 148:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** \name Endpoint Bank Mode Masks */
 149:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@{
 150:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 151:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 152:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 153:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank at the one time.
 154:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 155:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_SINGLE                    (0 << EPBK0)
 156:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 157:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 158:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 159:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 160:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  accesses the second bank.
 161:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 162:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_DOUBLE                    (1 << EPBK0)
 163:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@}
 164:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 165:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 166:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 167:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 168:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 169:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 170:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 171:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 172:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the maximum bank size in bytes of a given endpoint.
 173:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 174:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 175:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 176:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 177:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 178:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 179:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_MAX_SIZE(EPIndex)              _ENDPOINT_GET_MAXSIZE(EPIndex)
 180:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 181:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the total number of banks supported by the given endpoint.
 182:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 184:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 185:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 186:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 187:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 188:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANKS_SUPPORTED(EPIndex)       _ENDPOINT_GET_BANKS(EPIndex)
 189:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 190:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 191:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
 192:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 193:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 194:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 195:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            ENDPOINT_DETAILS_MAXEP
 196:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 197:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 198:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 199:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 200:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 201:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 202:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 203:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 204:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 205:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 206:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 207:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 208:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 209:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 210:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 211:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 212:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 213:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 214:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 215:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 216:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 217:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 218:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 219:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 220:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 221:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 222:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 223:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 224:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 225:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 226:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 227:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  on its direction.
 228:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 229:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Number     Endpoint number to configure. This must be more than 0 and less than
 230:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        \ref ENDPOINT_TOTAL_ENDPOINTS.
 231:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 232:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 233:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 234:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Direction  Endpoint data direction, either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT
 236:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        All endpoints (except Control type) are unidirectional - data may only
 237:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        from or written to the endpoint bank based on its direction, not both.
 238:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 239:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 240:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 241:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 242:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 243:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 244:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured, an \c ENDPOI
 245:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        More banks uses more USB DPRAM, but offers better performance. Isochro
 246:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        endpoints <b>must</b> have at least two banks.
 247:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 248:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> be co
 249:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        ascending order, or bank corruption will occur.
 250:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 251:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 252:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 253:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        the chosen microcontroller model's datasheet to determine the maximum bank size for ea
 254:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 255:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 256:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 257:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 258:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 259:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 260:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 261:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 262:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 263:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 264:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 265:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 266:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 267:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 268:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 269:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 270:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 271:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 272:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 273:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 274:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 275:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 276:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 277:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 278:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 279:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 280:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 281:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 282:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 283:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        of the selected AVR model.
 284:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 285:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 286:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 287:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 288:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 289:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 290:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 291:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 292:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 293:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 294:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 295:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 296:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 297:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 298:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 299:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 300:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 301:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 302:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 303:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  been manipulated.
 304:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 305:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 306:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 307:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 308:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 309:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 310:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 311:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 312:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 313:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 314:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 315:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 316:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 317:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 318:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 319:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  number (and discarding the endpoint direction bit).
 320:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 321:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 322:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 323:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 324:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 325:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 326:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 327:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 328:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 329:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 330:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 331:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 332:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 333:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 334:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 335:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 336:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 337:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 338:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 339:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 340:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber)
 341:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 342:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << EndpointNumber);
 343:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 344:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 347:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 348:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 349:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 350:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 351:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 352:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 353:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 354:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 355:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 356:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 357:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 358:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 359:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 360:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 361:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 362:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 363:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 364:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 365:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 366:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 367:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 368:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 369:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 370:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 371:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 372:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 373:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 374:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 375:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 376:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 377:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgement via th
 378:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 379:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 380:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 381:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 382:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 383:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 384:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 385:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 386:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 387:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 388:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 389:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 390:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 391:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 392:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 393:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 394:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 395:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 396:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 397:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 398:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 399:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 400:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 401:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 402:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 403:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 404:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 405:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 406:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 407:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 408:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 409:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 410:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 411:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 415:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 416:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 417:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 418:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 419:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 420:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 421:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 422:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 423:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 424:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 425:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 426:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 427:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 428:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 429:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 430:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 431:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 432:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 433:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 434:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 435:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 436:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 438:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 439:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 440:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 441:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 442:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 443:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 444:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 445:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 446:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 447:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 448:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 449:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 451:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 453:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 454:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << EndpointNumber)) ? true : false);
 456:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 457:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 458:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 459:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 460:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 461:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 462:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 463:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 464:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 465:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 466:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 467:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 468:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 469:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 470:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 471:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 472:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 473:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 474:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 475:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 476:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 477:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 478:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 479:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 480:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 481:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 482:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 483:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 484:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 485:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 487:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 489:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 490:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
  59               		.loc 2 491 0
  60 0014 8091 E800 		lds r24,232
  61               	.LVL1:
  62               	.LBE63:
  63               	.LBE62:
  73:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_IsSETUPReceived()))
  64               		.loc 1 73 0
  65 0018 83FF      		sbrs r24,3
  66 001a 00C0      		rjmp .L1
  74:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return;
  75:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  76:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (USB_ControlRequest.wIndex != RNDISInterfaceInfo->Config.ControlInterfaceNumber)
  67               		.loc 1 76 0
  68 001c F701      		movw r30,r14
  69 001e 8081      		ld r24,Z
  70 0020 90E0      		ldi r25,0
  71 0022 2091 0000 		lds r18,USB_ControlRequest+4
  72 0026 3091 0000 		lds r19,USB_ControlRequest+4+1
  73 002a 2817      		cp r18,r24
  74 002c 3907      		cpc r19,r25
  75 002e 01F0      		breq .+2
  76 0030 00C0      		rjmp .L1
  77:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return;
  78:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  79:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (USB_ControlRequest.bRequest)
  77               		.loc 1 79 0
  78 0032 8091 0000 		lds r24,USB_ControlRequest+1
  79 0036 8823      		tst r24
  80 0038 01F0      		breq .L3
  81 003a 8130      		cpi r24,lo8(1)
  82 003c 01F4      		brne .+2
  83 003e 00C0      		rjmp .L4
  84 0040 00C0      		rjmp .L1
  85               	.L3:
  80:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
  81:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case RNDIS_REQ_SendEncapsulatedCommand:
  82:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
  86               		.loc 1 82 0
  87 0042 8091 0000 		lds r24,USB_ControlRequest
  88 0046 8132      		cpi r24,lo8(33)
  89 0048 01F0      		breq .+2
  90 004a 00C0      		rjmp .L1
  91               	.LBB64:
  92               	.LBB65:
 492:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 495:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 496:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 497:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 498:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 499:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 500:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 501:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 502:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 503:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 504:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
  93               		.loc 2 504 0
  94 004c 8091 E800 		lds r24,232
  95 0050 877F      		andi r24,lo8(-9)
  96 0052 8093 E800 		sts 232,r24
  97               	.LBE65:
  98               	.LBE64:
  83:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
  84:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearSETUP();
  85:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_Read_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, USB_ControlReques
  99               		.loc 1 85 0
 100 0056 6091 0000 		lds r22,USB_ControlRequest+6
 101 005a 7091 0000 		lds r23,USB_ControlRequest+6+1
 102 005e C701      		movw r24,r14
 103 0060 4596      		adiw r24,21
 104 0062 0E94 0000 		call Endpoint_Read_Control_Stream_LE
 105               	.LVL2:
 106               	.LBB66:
 107               	.LBB67:
 505:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 506:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 507:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 508:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 509:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 510:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 511:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 512:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 513:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 514:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 515:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 516:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 108               		.loc 2 516 0
 109 0066 8091 E800 		lds r24,232
 110 006a 8E77      		andi r24,lo8(126)
 111 006c 8093 E800 		sts 232,r24
 112               	.LVL3:
 113               	.LBE67:
 114               	.LBE66:
 115               	.LBB68:
 116               	.LBB69:
  86:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearIN();
  87:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  88:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				RNDIS_Device_ProcessRNDISControlMessage(RNDISInterfaceInfo);
  89:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
  90:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  91:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
  92:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case RNDIS_REQ_GetEncapsulatedResponse:
  93:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
  94:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
  95:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RND
  96:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  97:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				if (!(MessageHeader->MessageLength))
  98:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				{
  99:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					RNDISInterfaceInfo->State.RNDISMessageBuffer[0] = 0;
 100:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					MessageHeader->MessageLength                    = CPU_TO_LE32(1);
 101:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				}
 102:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 103:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearSETUP();
 104:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_Write_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, le32_to_cpu(Mess
 105:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearOUT();
 106:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 107:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				MessageHeader->MessageLength = CPU_TO_LE32(0);
 108:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 109:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 110:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 111:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 112:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 113:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 114:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** bool RNDIS_Device_ConfigureEndpoints(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 115:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 116:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 117:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 118:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
 119:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 120:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		uint16_t Size;
 121:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		uint8_t  Type;
 122:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		uint8_t  Direction;
 123:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		bool     DoubleBanked;
 124:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 125:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (EndpointNum == RNDISInterfaceInfo->Config.DataINEndpointNumber)
 126:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 127:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Size         = RNDISInterfaceInfo->Config.DataINEndpointSize;
 128:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_IN;
 129:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_BULK;
 130:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataINEndpointDoubleBank;
 131:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 132:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.DataOUTEndpointNumber)
 133:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 134:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Size         = RNDISInterfaceInfo->Config.DataOUTEndpointSize;
 135:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_OUT;
 136:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_BULK;
 137:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataOUTEndpointDoubleBank;
 138:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 139:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.NotificationEndpointNumber)
 140:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 141:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Size         = RNDISInterfaceInfo->Config.NotificationEndpointSize;
 142:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_IN;
 143:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_INTERRUPT;
 144:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.NotificationEndpointDoubleBank;
 145:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 146:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		else
 147:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 148:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			continue;
 149:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 150:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 151:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 152:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		                                 DoubleBanked ? ENDPOINT_BANK_DOUBLE : ENDPOINT_BANK_SINGLE)))
 153:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 154:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return false;
 155:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 156:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 157:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 158:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	return true;
 159:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 160:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 161:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** void RNDIS_Device_USBTask(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 162:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 163:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 164:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return;
 165:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 166:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber);
 167:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 168:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 169:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 170:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 171:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 172:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE),
 173:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.bRequest      = RNDIS_NOTIF_ResponseAvailable,
 174:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.wValue        = CPU_TO_LE16(0),
 175:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.wIndex        = CPU_TO_LE16(0),
 176:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.wLength       = CPU_TO_LE16(0),
 177:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			};
 178:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 179:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NULL);
 180:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 181:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_ClearIN();
 182:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 183:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		RNDISInterfaceInfo->State.ResponseReady = false;
 184:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 185:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 186:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 187:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** void RNDIS_Device_ProcessRNDISControlMessage(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo
 188:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 189:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	/* Note: Only a single buffer is used for both the received message and its response to save SRAM.
 190:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	         this, response bytes should be filled in order so that they do not clobber unread data in
 191:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 192:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RNDISM
 193:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 194:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (le32_to_cpu(MessageHeader->MessageType))
 117               		.loc 1 194 0
 118 0070 F701      		movw r30,r14
 119 0072 4589      		ldd r20,Z+21
 120 0074 5689      		ldd r21,Z+22
 121 0076 6789      		ldd r22,Z+23
 122 0078 708D      		ldd r23,Z+24
 123 007a 4430      		cpi r20,4
 124 007c 5105      		cpc r21,__zero_reg__
 125 007e 6105      		cpc r22,__zero_reg__
 126 0080 7105      		cpc r23,__zero_reg__
 127 0082 01F4      		brne .+2
 128 0084 00C0      		rjmp .L5
 129 0086 00F4      		brsh .L6
 130 0088 4230      		cpi r20,2
 131 008a 5105      		cpc r21,__zero_reg__
 132 008c 6105      		cpc r22,__zero_reg__
 133 008e 7105      		cpc r23,__zero_reg__
 134 0090 01F0      		breq .L7
 135 0092 4330      		cpi r20,3
 136 0094 5105      		cpc r21,__zero_reg__
 137 0096 6105      		cpc r22,__zero_reg__
 138 0098 7105      		cpc r23,__zero_reg__
 139 009a 01F0      		breq .+2
 140 009c 00C0      		rjmp .L1
 141               	.LBB70:
 195:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 196:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_INITIALIZE_MSG:
 197:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 198:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 199:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Initialize_Message_t*  INITIALIZE_Message  =
 200:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			               (RNDIS_Initialize_Message_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 201:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Initialize_Complete_t* INITIALIZE_Response =
 202:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			               (RNDIS_Initialize_Complete_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 203:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 204:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MessageType            = CPU_TO_LE32(REMOTE_NDIS_INITIALIZE_CMPLT);
 205:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MessageLength          = CPU_TO_LE32(sizeof(RNDIS_Initialize_Complete_t));
 206:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->RequestId              = INITIALIZE_Message->RequestId;
 207:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->Status                 = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 208:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 209:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MajorVersion           = CPU_TO_LE32(REMOTE_NDIS_VERSION_MAJOR);
 210:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MinorVersion           = CPU_TO_LE32(REMOTE_NDIS_VERSION_MINOR);
 211:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->DeviceFlags            = CPU_TO_LE32(REMOTE_NDIS_DF_CONNECTIONLESS);
 212:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->Medium                 = CPU_TO_LE32(REMOTE_NDIS_MEDIUM_802_3);
 213:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MaxPacketsPerTransfer  = CPU_TO_LE32(1);
 214:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MaxTransferSize        = CPU_TO_LE32(sizeof(RNDIS_Packet_Message_t) + ETHER
 215:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->PacketAlignmentFactor  = CPU_TO_LE32(0);
 216:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->AFListOffset           = CPU_TO_LE32(0);
 217:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->AFListSize             = CPU_TO_LE32(0);
 218:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 219:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrRNDISState    = RNDIS_Initialized;
 220:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 221:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_HALT_MSG:
 222:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady     = false;
 142               		.loc 1 222 0
 143 009e F701      		movw r30,r14
 144 00a0 EB56      		subi r30,107
 145 00a2 FF4F      		sbci r31,-1
 146 00a4 1082      		st Z,__zero_reg__
 223:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 224:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			MessageHeader->MessageLength                = CPU_TO_LE32(0);
 147               		.loc 1 224 0
 148 00a6 F701      		movw r30,r14
 149 00a8 118E      		std Z+25,__zero_reg__
 150 00aa 128E      		std Z+26,__zero_reg__
 151 00ac 138E      		std Z+27,__zero_reg__
 152 00ae 148E      		std Z+28,__zero_reg__
 225:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 226:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrRNDISState    = RNDIS_Uninitialized;
 153               		.loc 1 226 0
 154 00b0 EA56      		subi r30,106
 155 00b2 FF4F      		sbci r31,-1
 156 00b4 1082      		st Z,__zero_reg__
 157 00b6 00C0      		rjmp .L1
 158               	.L6:
 159               	.LBE70:
 194:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 160               		.loc 1 194 0
 161 00b8 4630      		cpi r20,6
 162 00ba 5105      		cpc r21,__zero_reg__
 163 00bc 6105      		cpc r22,__zero_reg__
 164 00be 7105      		cpc r23,__zero_reg__
 165 00c0 01F4      		brne .+2
 166 00c2 00C0      		rjmp .L9
 167 00c4 00F4      		brsh .+2
 168 00c6 00C0      		rjmp .L10
 169 00c8 4830      		cpi r20,8
 170 00ca 5105      		cpc r21,__zero_reg__
 171 00cc 6105      		cpc r22,__zero_reg__
 172 00ce 7105      		cpc r23,__zero_reg__
 173 00d0 01F0      		breq .+2
 174 00d2 00C0      		rjmp .L1
 175               	.LBB77:
 227:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 228:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_QUERY_MSG:
 229:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 230:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 231:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Query_Message_t*  QUERY_Message       = (RNDIS_Query_Message_t*)&RNDISInterfaceInfo->State
 232:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Query_Complete_t* QUERY_Response      = (RNDIS_Query_Complete_t*)&RNDISInterfaceInfo->Stat
 233:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint32_t                Query_Oid           = CPU_TO_LE32(QUERY_Message->Oid);
 234:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 235:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void*    QueryData    = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Heade
 236:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                                      le32_to_cpu(QUERY_Message-
 237:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void*    ResponseData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Query_Complet
 238:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint16_t ResponseSize;
 239:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 240:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			QUERY_Response->MessageType                 = CPU_TO_LE32(REMOTE_NDIS_QUERY_CMPLT);
 241:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 242:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (RNDIS_Device_ProcessNDISQuery(RNDISInterfaceInfo, Query_Oid, QueryData, le32_to_cpu(QUERY_Me
 243:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                  ResponseData, &ResponseSize))
 244:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 245:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 246:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->MessageLength           = cpu_to_le32(sizeof(RNDIS_Query_Complete_t) + Response
 247:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 248:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(ResponseSize);
 249:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t) - sizeof(R
 250:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 251:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			else
 252:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 253:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_NOT_SUPPORTED);
 254:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t));
 255:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 256:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(0);
 257:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(0);
 258:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 259:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 260:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 261:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_SET_MSG:
 262:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 263:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 264:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Set_Message_t*  SET_Message           = (RNDIS_Set_Message_t*)&RNDISInterfaceInfo->State.R
 265:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Set_Complete_t* SET_Response          = (RNDIS_Set_Complete_t*)&RNDISInterfaceInfo->State.
 266:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint32_t              SET_Oid               = le32_to_cpu(SET_Message->Oid);
 267:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 268:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageType                   = CPU_TO_LE32(REMOTE_NDIS_SET_CMPLT);
 269:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageLength                 = CPU_TO_LE32(sizeof(RNDIS_Set_Complete_t));
 270:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->RequestId                     = SET_Message->RequestId;
 271:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 272:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void* SetData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 273:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                              le32_to_cpu(SET_Message->Informati
 274:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 275:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->Status = RNDIS_Device_ProcessNDISSet(RNDISInterfaceInfo, SET_Oid, SetData,
 276:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                   le32_to_cpu(SET_Message->InformationBufferLen
 277:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 278:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 279:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_RESET_MSG:
 280:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 281:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 282:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Reset_Complete_t* RESET_Response      = (RNDIS_Reset_Complete_t*)&RNDISInterfaceInfo->Stat
 283:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 284:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageType                 = CPU_TO_LE32(REMOTE_NDIS_RESET_CMPLT);
 285:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageLength               = CPU_TO_LE32(sizeof(RNDIS_Reset_Complete_t));
 286:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->Status                      = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 287:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->AddressingReset             = CPU_TO_LE32(0);
 288:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 289:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 290:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_KEEPALIVE_MSG:
 291:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 176               		.loc 1 291 0
 177 00d4 F701      		movw r30,r14
 178 00d6 EB56      		subi r30,107
 179 00d8 FF4F      		sbci r31,-1
 180 00da 81E0      		ldi r24,lo8(1)
 181 00dc 8083      		st Z,r24
 182               	.LVL4:
 292:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 293:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_KeepAlive_Message_t*  KEEPALIVE_Message  =
 294:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                (RNDIS_KeepAlive_Message_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 295:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_KeepAlive_Complete_t* KEEPALIVE_Response =
 296:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                (RNDIS_KeepAlive_Complete_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 297:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 298:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->MessageType             = CPU_TO_LE32(REMOTE_NDIS_KEEPALIVE_CMPLT);
 183               		.loc 1 298 0
 184 00de 48E0      		ldi r20,lo8(8)
 185 00e0 50E0      		ldi r21,0
 186 00e2 60E0      		ldi r22,0
 187 00e4 70E8      		ldi r23,lo8(-128)
 188 00e6 F701      		movw r30,r14
 189 00e8 458B      		std Z+21,r20
 190 00ea 568B      		std Z+22,r21
 191 00ec 678B      		std Z+23,r22
 192 00ee 708F      		std Z+24,r23
 299:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_KeepAlive_Complete_t));
 193               		.loc 1 299 0
 194 00f0 40E1      		ldi r20,lo8(16)
 195 00f2 50E0      		ldi r21,0
 196 00f4 60E0      		ldi r22,0
 197 00f6 70E0      		ldi r23,0
 198 00f8 418F      		std Z+25,r20
 199 00fa 528F      		std Z+26,r21
 200 00fc 638F      		std Z+27,r22
 201 00fe 748F      		std Z+28,r23
 202 0100 00C0      		rjmp .L53
 203               	.LVL5:
 204               	.L7:
 197:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 205               		.loc 1 197 0
 206 0102 F701      		movw r30,r14
 207 0104 EB56      		subi r30,107
 208 0106 FF4F      		sbci r31,-1
 209 0108 21E0      		ldi r18,lo8(1)
 210 010a 2083      		st Z,r18
 211               	.LVL6:
 204:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MessageLength          = CPU_TO_LE32(sizeof(RNDIS_Initialize_Complete_t));
 212               		.loc 1 204 0
 213 010c 82E0      		ldi r24,lo8(2)
 214 010e 90E0      		ldi r25,0
 215 0110 A0E0      		ldi r26,0
 216 0112 B0E8      		ldi r27,lo8(-128)
 217 0114 F701      		movw r30,r14
 218 0116 858B      		std Z+21,r24
 219 0118 968B      		std Z+22,r25
 220 011a A78B      		std Z+23,r26
 221 011c B08F      		std Z+24,r27
 205:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->RequestId              = INITIALIZE_Message->RequestId;
 222               		.loc 1 205 0
 223 011e 84E3      		ldi r24,lo8(52)
 224 0120 90E0      		ldi r25,0
 225 0122 A0E0      		ldi r26,0
 226 0124 B0E0      		ldi r27,0
 227 0126 818F      		std Z+25,r24
 228 0128 928F      		std Z+26,r25
 229 012a A38F      		std Z+27,r26
 230 012c B48F      		std Z+28,r27
 207:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 231               		.loc 1 207 0
 232 012e 11A2      		std Z+33,__zero_reg__
 233 0130 12A2      		std Z+34,__zero_reg__
 234 0132 13A2      		std Z+35,__zero_reg__
 235 0134 14A2      		std Z+36,__zero_reg__
 209:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MinorVersion           = CPU_TO_LE32(REMOTE_NDIS_VERSION_MINOR);
 236               		.loc 1 209 0
 237 0136 41E0      		ldi r20,lo8(1)
 238 0138 50E0      		ldi r21,0
 239 013a 60E0      		ldi r22,0
 240 013c 70E0      		ldi r23,0
 241 013e 45A3      		std Z+37,r20
 242 0140 56A3      		std Z+38,r21
 243 0142 67A3      		std Z+39,r22
 244 0144 70A7      		std Z+40,r23
 210:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->DeviceFlags            = CPU_TO_LE32(REMOTE_NDIS_DF_CONNECTIONLESS);
 245               		.loc 1 210 0
 246 0146 11A6      		std Z+41,__zero_reg__
 247 0148 12A6      		std Z+42,__zero_reg__
 248 014a 13A6      		std Z+43,__zero_reg__
 249 014c 14A6      		std Z+44,__zero_reg__
 211:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->Medium                 = CPU_TO_LE32(REMOTE_NDIS_MEDIUM_802_3);
 250               		.loc 1 211 0
 251 014e 45A7      		std Z+45,r20
 252 0150 56A7      		std Z+46,r21
 253 0152 67A7      		std Z+47,r22
 254 0154 70AB      		std Z+48,r23
 212:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MaxPacketsPerTransfer  = CPU_TO_LE32(1);
 255               		.loc 1 212 0
 256 0156 11AA      		std Z+49,__zero_reg__
 257 0158 12AA      		std Z+50,__zero_reg__
 258 015a 13AA      		std Z+51,__zero_reg__
 259 015c 14AA      		std Z+52,__zero_reg__
 213:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MaxTransferSize        = CPU_TO_LE32(sizeof(RNDIS_Packet_Message_t) + ETHER
 260               		.loc 1 213 0
 261 015e 45AB      		std Z+53,r20
 262 0160 56AB      		std Z+54,r21
 263 0162 67AB      		std Z+55,r22
 264 0164 70AF      		std Z+56,r23
 214:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->PacketAlignmentFactor  = CPU_TO_LE32(0);
 265               		.loc 1 214 0
 266 0166 88E0      		ldi r24,lo8(8)
 267 0168 96E0      		ldi r25,lo8(6)
 268 016a A0E0      		ldi r26,0
 269 016c B0E0      		ldi r27,0
 270 016e 81AF      		std Z+57,r24
 271 0170 92AF      		std Z+58,r25
 272 0172 A3AF      		std Z+59,r26
 273 0174 B4AF      		std Z+60,r27
 215:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->AFListOffset           = CPU_TO_LE32(0);
 274               		.loc 1 215 0
 275 0176 FD96      		adiw r30,61
 276 0178 1082      		st Z,__zero_reg__
 277 017a 1182      		std Z+1,__zero_reg__
 278 017c 1282      		std Z+2,__zero_reg__
 279 017e 1382      		std Z+3,__zero_reg__
 216:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->AFListSize             = CPU_TO_LE32(0);
 280               		.loc 1 216 0
 281 0180 3496      		adiw r30,4
 282 0182 1082      		st Z,__zero_reg__
 283 0184 1182      		std Z+1,__zero_reg__
 284 0186 1282      		std Z+2,__zero_reg__
 285 0188 1382      		std Z+3,__zero_reg__
 217:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 286               		.loc 1 217 0
 287 018a 3496      		adiw r30,4
 288 018c 1082      		st Z,__zero_reg__
 289 018e 1182      		std Z+1,__zero_reg__
 290 0190 1282      		std Z+2,__zero_reg__
 291 0192 1382      		std Z+3,__zero_reg__
 219:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 292               		.loc 1 219 0
 293 0194 EF5A      		subi r30,-81
 294 0196 FF4F      		sbci r31,-1
 295 0198 2083      		st Z,r18
 296 019a 00C0      		rjmp .L1
 297               	.LVL7:
 298               	.L5:
 229:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 299               		.loc 1 229 0
 300 019c 81E0      		ldi r24,lo8(1)
 301 019e F701      		movw r30,r14
 302 01a0 EB56      		subi r30,107
 303 01a2 FF4F      		sbci r31,-1
 304 01a4 8083      		st Z,r24
 305               	.LVL8:
 233:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 306               		.loc 1 233 0
 307 01a6 F701      		movw r30,r14
 308 01a8 41A1      		ldd r20,Z+33
 309 01aa 52A1      		ldd r21,Z+34
 310 01ac 63A1      		ldd r22,Z+35
 311 01ae 74A1      		ldd r23,Z+36
 312               	.LVL9:
 237:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint16_t ResponseSize;
 313               		.loc 1 237 0
 314 01b0 C701      		movw r24,r14
 315 01b2 8D96      		adiw r24,45
 316               	.LVL10:
 240:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			
 317               		.loc 1 240 0
 318 01b4 04E0      		ldi r16,lo8(4)
 319 01b6 10E0      		ldi r17,0
 320 01b8 20E0      		ldi r18,0
 321 01ba 30E8      		ldi r19,lo8(-128)
 322 01bc 058B      		std Z+21,r16
 323 01be 168B      		std Z+22,r17
 324 01c0 278B      		std Z+23,r18
 325 01c2 308F      		std Z+24,r19
 326               	.LVL11:
 327               	.LBB71:
 328               	.LBB72:
 300:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->RequestId               = KEEPALIVE_Message->RequestId;
 301:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 302:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 303:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 304:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 305:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 306:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 307:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** static bool RNDIS_Device_ProcessNDISQuery(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 308:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           const uint32_t OId,
 309:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           void* const QueryData,
 310:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           const uint16_t QuerySize,
 311:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           void* ResponseData,
 312:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           uint16_t* const ResponseSize)
 313:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 314:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	(void)QueryData;
 315:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	(void)QuerySize;
 316:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 317:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 329               		.loc 1 317 0
 330 01c4 4E30      		cpi r20,14
 331 01c6 F1E0      		ldi r31,1
 332 01c8 5F07      		cpc r21,r31
 333 01ca 6F07      		cpc r22,r31
 334 01cc 7105      		cpc r23,__zero_reg__
 335 01ce 01F4      		brne .+2
 336 01d0 00C0      		rjmp .L13
 337 01d2 00F0      		brlo .+2
 338 01d4 00C0      		rjmp .L14
 339 01d6 4630      		cpi r20,6
 340 01d8 E1E0      		ldi r30,1
 341 01da 5E07      		cpc r21,r30
 342 01dc 6E07      		cpc r22,r30
 343 01de 7105      		cpc r23,__zero_reg__
 344 01e0 01F4      		brne .+2
 345 01e2 00C0      		rjmp .L15
 346 01e4 00F4      		brsh .L16
 347 01e6 4230      		cpi r20,2
 348 01e8 21E0      		ldi r18,1
 349 01ea 5207      		cpc r21,r18
 350 01ec 6207      		cpc r22,r18
 351 01ee 7105      		cpc r23,__zero_reg__
 352 01f0 01F4      		brne .+2
 353 01f2 00C0      		rjmp .L26
 354 01f4 00F4      		brsh .L18
 355 01f6 4130      		cpi r20,1
 356 01f8 5140      		sbci r21,1
 357 01fa 6140      		sbci r22,1
 358 01fc 7105      		cpc r23,__zero_reg__
 359 01fe 01F0      		breq .+2
 360 0200 00C0      		rjmp .L12
 361               	.LVL12:
 318:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 319:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_SUPPORTED_LIST:
 320:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 321:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 322:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy_P(ResponseData, AdapterSupportedOIDList, sizeof(AdapterSupportedOIDList));
 362               		.loc 1 322 0
 363 0202 4CE6      		ldi r20,lo8(108)
 364 0204 50E0      		ldi r21,0
 365               	.LVL13:
 366 0206 60E0      		ldi r22,lo8(AdapterSupportedOIDList)
 367 0208 70E0      		ldi r23,hi8(AdapterSupportedOIDList)
 368 020a 0E94 0000 		call memcpy_P
 369               	.LVL14:
 320:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 370               		.loc 1 320 0
 371 020e 2CE6      		ldi r18,lo8(108)
 372 0210 30E0      		ldi r19,0
 373 0212 00C0      		rjmp .L33
 374               	.LVL15:
 375               	.L18:
 317:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 376               		.loc 1 317 0
 377 0214 4530      		cpi r20,5
 378 0216 5140      		sbci r21,1
 379 0218 6140      		sbci r22,1
 380 021a 7105      		cpc r23,__zero_reg__
 381 021c 00F4      		brsh .+2
 382 021e 00C0      		rjmp .L26
 383 0220 00C0      		rjmp .L12
 384               	.L16:
 385 0222 4C30      		cpi r20,12
 386 0224 E1E0      		ldi r30,1
 387 0226 5E07      		cpc r21,r30
 388 0228 6E07      		cpc r22,r30
 389 022a 7105      		cpc r23,__zero_reg__
 390 022c 00F4      		brsh .L21
 391 022e 4A30      		cpi r20,10
 392 0230 F1E0      		ldi r31,1
 393 0232 5F07      		cpc r21,r31
 394 0234 6F07      		cpc r22,r31
 395 0236 7105      		cpc r23,__zero_reg__
 396 0238 00F0      		brlo .+2
 397 023a 00C0      		rjmp .L15
 398 023c 4730      		cpi r20,7
 399 023e 5140      		sbci r21,1
 400 0240 6140      		sbci r22,1
 401 0242 7105      		cpc r23,__zero_reg__
 402 0244 01F0      		breq .+2
 403 0246 00C0      		rjmp .L12
 404               	.LVL16:
 323:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 324:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 325:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_PHYSICAL_MEDIUM:
 326:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 327:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 328:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate that the device is a true ethernet link */
 329:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0);
 330:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 331:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 332:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_HARDWARE_STATUS:
 333:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 334:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 335:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(NDIS_HardwareStatus_Ready);
 336:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 337:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 338:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MEDIA_SUPPORTED:
 339:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MEDIA_IN_USE:
 340:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 341:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 342:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(REMOTE_NDIS_MEDIUM_802_3);
 343:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 344:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 345:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_VENDOR_ID:
 346:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 347:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 348:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Vendor ID 0x0xFFFFFF is reserved for vendors who have not purchased a NDIS VID */
 349:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0x00FFFFFF);
 350:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 351:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 352:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MAXIMUM_FRAME_SIZE:
 353:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_TRANSMIT_BLOCK_SIZE:
 354:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RECEIVE_BLOCK_SIZE:
 355:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 356:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 357:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(ETHERNET_FRAME_SIZE_MAX);
 358:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 359:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 360:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_VENDOR_DESCRIPTION:
 361:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = (strlen(RNDISInterfaceInfo->Config.AdapterVendorDescription) + 1);
 362:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 363:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy(ResponseData, RNDISInterfaceInfo->Config.AdapterVendorDescription, *ResponseSize);
 364:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 365:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 366:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MEDIA_CONNECT_STATUS:
 367:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 368:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 369:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(REMOTE_NDIS_MEDIA_STATE_CONNECTED);
 370:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 371:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 372:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_LINK_SPEED:
 373:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 374:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 375:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate 10Mb/s link speed */
 376:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(100000);
 405               		.loc 1 376 0
 406 0248 40EA      		ldi r20,lo8(-96)
 407 024a 56E8      		ldi r21,lo8(-122)
 408 024c 61E0      		ldi r22,lo8(1)
 409 024e 70E0      		ldi r23,0
 410               	.LVL17:
 411 0250 00C0      		rjmp .L52
 412               	.LVL18:
 413               	.L21:
 317:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 414               		.loc 1 317 0
 415 0252 4C30      		cpi r20,12
 416 0254 E1E0      		ldi r30,1
 417 0256 5E07      		cpc r21,r30
 418 0258 6E07      		cpc r22,r30
 419 025a 7105      		cpc r23,__zero_reg__
 420 025c 01F4      		brne .+2
 421 025e 00C0      		rjmp .L23
 422 0260 4D30      		cpi r20,13
 423 0262 5140      		sbci r21,1
 424 0264 6140      		sbci r22,1
 425 0266 7105      		cpc r23,__zero_reg__
 426 0268 01F0      		breq .+2
 427 026a 00C0      		rjmp .L12
 361:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 428               		.loc 1 361 0
 429 026c F701      		movw r30,r14
 430 026e 6585      		ldd r22,Z+13
 431 0270 7685      		ldd r23,Z+14
 432 0272 FB01      		movw r30,r22
 433               		0:
 434 0274 0190      		ld __tmp_reg__,Z+
 435 0276 0020      		tst __tmp_reg__
 436 0278 01F4      		brne 0b
 437 027a 9F01      		movw r18,r30
 438 027c 261B      		sub r18,r22
 439 027e 370B      		sbc r19,r23
 440               	.LVL19:
 363:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 441               		.loc 1 363 0
 442 0280 A901      		movw r20,r18
 443               	.LVL20:
 444 0282 2983      		std Y+1,r18
 445               	.LVL21:
 446 0284 3A83      		std Y+2,r19
 447 0286 0E94 0000 		call memcpy
 448               	.LVL22:
 449 028a 2981      		ldd r18,Y+1
 450 028c 3A81      		ldd r19,Y+2
 451 028e 00C0      		rjmp .L33
 452               	.LVL23:
 453               	.L14:
 317:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 454               		.loc 1 317 0
 455 0290 4630      		cpi r20,6
 456 0292 21E0      		ldi r18,1
 457 0294 5207      		cpc r21,r18
 458 0296 22E0      		ldi r18,2
 459 0298 6207      		cpc r22,r18
 460 029a 7105      		cpc r23,__zero_reg__
 461 029c 00F4      		brsh .L25
 462 029e 4130      		cpi r20,1
 463 02a0 81E0      		ldi r24,1
 464 02a2 5807      		cpc r21,r24
 465 02a4 82E0      		ldi r24,2
 466 02a6 6807      		cpc r22,r24
 467 02a8 7105      		cpc r23,__zero_reg__
 468               	.LVL24:
 469 02aa 00F0      		brlo .+2
 470 02ac 00C0      		rjmp .L26
 471 02ae 4431      		cpi r20,20
 472 02b0 E1E0      		ldi r30,1
 473 02b2 5E07      		cpc r21,r30
 474 02b4 6E07      		cpc r22,r30
 475 02b6 7105      		cpc r23,__zero_reg__
 476 02b8 01F4      		brne .+2
 477 02ba 00C0      		rjmp .L26
 478 02bc 4230      		cpi r20,2
 479 02be F2E0      		ldi r31,2
 480 02c0 5F07      		cpc r21,r31
 481 02c2 F1E0      		ldi r31,1
 482 02c4 6F07      		cpc r22,r31
 483 02c6 7105      		cpc r23,__zero_reg__
 484 02c8 01F4      		brne .+2
 485 02ca 00C0      		rjmp .L26
 486 02cc 4131      		cpi r20,17
 487 02ce 5140      		sbci r21,1
 488 02d0 6140      		sbci r22,1
 489 02d2 7105      		cpc r23,__zero_reg__
 490 02d4 01F0      		breq .+2
 491 02d6 00C0      		rjmp .L12
 492               	.LVL25:
 377:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 378:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 379:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_PERMANENT_ADDRESS:
 380:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_CURRENT_ADDRESS:
 381:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(MAC_Address_t);
 382:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 383:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy(ResponseData, &RNDISInterfaceInfo->Config.AdapterMACAddress, sizeof(MAC_Address_t));
 384:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 385:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 386:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_MAXIMUM_LIST_SIZE:
 387:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 388:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 389:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate only one multicast address supported */
 390:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(1);
 391:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 392:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 393:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 394:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 395:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 396:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = cpu_to_le32(RNDISInterfaceInfo->State.CurrPacketFilter);
 397:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 398:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 399:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_XMIT_OK:
 400:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RCV_OK:
 401:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_XMIT_ERROR:
 402:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RCV_ERROR:
 403:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RCV_NO_BUFFER:
 404:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_RCV_ERROR_ALIGNMENT:
 405:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_XMIT_ONE_COLLISION:
 406:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_XMIT_MORE_COLLISIONS:
 407:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 408:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 409:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Unused statistic OIDs - always return 0 for each */
 410:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0);
 411:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 412:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 413:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MAXIMUM_TOTAL_SIZE:
 414:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 415:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 416:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate maximum overall buffer (Ethernet frame and RNDIS header) the adapter can handle */
 417:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(RNDIS_MESSAGE_BUFFER_SIZE + ETHERNET_FRAME_SIZE_MAX);
 493               		.loc 1 417 0
 494 02d8 4CE5      		ldi r20,lo8(92)
 495 02da 56E0      		ldi r21,lo8(6)
 496 02dc 60E0      		ldi r22,0
 497 02de 70E0      		ldi r23,0
 498               	.LVL26:
 499 02e0 00C0      		rjmp .L52
 500               	.LVL27:
 501               	.L25:
 317:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 502               		.loc 1 317 0
 503 02e2 4430      		cpi r20,4
 504 02e4 E1E0      		ldi r30,1
 505 02e6 5E07      		cpc r21,r30
 506 02e8 6E07      		cpc r22,r30
 507 02ea 7E07      		cpc r23,r30
 508 02ec 01F0      		breq .L30
 509 02ee 00F4      		brsh .L31
 510 02f0 4150      		subi r20,1
 511 02f2 5140      		sbci r21,1
 512 02f4 6140      		sbci r22,1
 513 02f6 7140      		sbci r23,1
 514               	.LVL28:
 515 02f8 4230      		cpi r20,2
 516 02fa 5105      		cpc r21,__zero_reg__
 517 02fc 6105      		cpc r22,__zero_reg__
 518 02fe 7105      		cpc r23,__zero_reg__
 519 0300 00F0      		brlo .+2
 520 0302 00C0      		rjmp .L12
 521               	.LVL29:
 383:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 522               		.loc 1 383 0
 523 0304 26E0      		ldi r18,lo8(6)
 524 0306 F701      		movw r30,r14
 525 0308 3F96      		adiw r30,15
 526 030a DC01      		movw r26,r24
 527               		0:
 528 030c 0190      		ld r0,Z+
 529 030e 0D92      		st X+,r0
 530 0310 2A95      		dec r18
 531 0312 01F4      		brne 0b
 381:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 532               		.loc 1 381 0
 533 0314 26E0      		ldi r18,lo8(6)
 534 0316 30E0      		ldi r19,0
 535 0318 00C0      		rjmp .L33
 536               	.LVL30:
 537               	.L31:
 317:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 538               		.loc 1 317 0
 539 031a 4150      		subi r20,1
 540 031c 5140      		sbci r21,1
 541 031e 6240      		sbci r22,2
 542 0320 7140      		sbci r23,1
 543               	.LVL31:
 544 0322 4330      		cpi r20,3
 545 0324 5105      		cpc r21,__zero_reg__
 546 0326 6105      		cpc r22,__zero_reg__
 547 0328 7105      		cpc r23,__zero_reg__
 548 032a 00F0      		brlo .L26
 549 032c 00C0      		rjmp .L12
 550               	.LVL32:
 551               	.L23:
 349:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 552               		.loc 1 349 0
 553 032e 4FEF      		ldi r20,lo8(-1)
 554 0330 5FEF      		ldi r21,lo8(-1)
 555 0332 6FEF      		ldi r22,lo8(-1)
 556 0334 70E0      		ldi r23,0
 557               	.LVL33:
 558 0336 00C0      		rjmp .L52
 559               	.LVL34:
 560               	.L15:
 357:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 561               		.loc 1 357 0
 562 0338 4CED      		ldi r20,lo8(-36)
 563 033a 55E0      		ldi r21,lo8(5)
 564 033c 60E0      		ldi r22,0
 565 033e 70E0      		ldi r23,0
 566               	.LVL35:
 567 0340 00C0      		rjmp .L52
 568               	.LVL36:
 569               	.L30:
 390:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 570               		.loc 1 390 0
 571 0342 41E0      		ldi r20,lo8(1)
 572 0344 50E0      		ldi r21,0
 573 0346 60E0      		ldi r22,0
 574 0348 70E0      		ldi r23,0
 575               	.LVL37:
 576 034a 00C0      		rjmp .L52
 577               	.LVL38:
 578               	.L13:
 396:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 579               		.loc 1 396 0
 580 034c F701      		movw r30,r14
 581 034e E956      		subi r30,105
 582 0350 FF4F      		sbci r31,-1
 583 0352 4081      		ld r20,Z
 584 0354 5181      		ldd r21,Z+1
 585 0356 6281      		ldd r22,Z+2
 586 0358 7381      		ldd r23,Z+3
 587               	.LVL39:
 588 035a 00C0      		rjmp .L52
 589               	.LVL40:
 590               	.L26:
 410:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 591               		.loc 1 410 0
 592 035c F701      		movw r30,r14
 593 035e 15A6      		std Z+45,__zero_reg__
 594 0360 16A6      		std Z+46,__zero_reg__
 595 0362 17A6      		std Z+47,__zero_reg__
 596 0364 10AA      		std Z+48,__zero_reg__
 597 0366 00C0      		rjmp .L51
 598               	.L52:
 599               		.loc 1 417 0
 600 0368 F701      		movw r30,r14
 601 036a 45A7      		std Z+45,r20
 602 036c 56A7      		std Z+46,r21
 603 036e 67A7      		std Z+47,r22
 604 0370 70AB      		std Z+48,r23
 605               	.L51:
 414:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 606               		.loc 1 414 0
 607 0372 24E0      		ldi r18,lo8(4)
 608 0374 30E0      		ldi r19,0
 609 0376 00C0      		rjmp .L33
 610               	.LVL41:
 611               	.L10:
 612               	.LBE72:
 613               	.LBE71:
 262:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 614               		.loc 1 262 0
 615 0378 81E0      		ldi r24,lo8(1)
 616 037a F701      		movw r30,r14
 617 037c EB56      		subi r30,107
 618 037e FF4F      		sbci r31,-1
 619 0380 8083      		st Z,r24
 620               	.LVL42:
 266:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 621               		.loc 1 266 0
 622 0382 F701      		movw r30,r14
 623 0384 41A1      		ldd r20,Z+33
 624 0386 52A1      		ldd r21,Z+34
 625 0388 63A1      		ldd r22,Z+35
 626 038a 74A1      		ldd r23,Z+36
 627               	.LVL43:
 268:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageLength                 = CPU_TO_LE32(sizeof(RNDIS_Set_Complete_t));
 628               		.loc 1 268 0
 629 038c 05E0      		ldi r16,lo8(5)
 630 038e 10E0      		ldi r17,0
 631 0390 20E0      		ldi r18,0
 632 0392 30E8      		ldi r19,lo8(-128)
 633 0394 058B      		std Z+21,r16
 634 0396 168B      		std Z+22,r17
 635 0398 278B      		std Z+23,r18
 636 039a 308F      		std Z+24,r19
 269:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->RequestId                     = SET_Message->RequestId;
 637               		.loc 1 269 0
 638 039c 00E1      		ldi r16,lo8(16)
 639 039e 10E0      		ldi r17,0
 640 03a0 20E0      		ldi r18,0
 641 03a2 30E0      		ldi r19,0
 642 03a4 018F      		std Z+25,r16
 643 03a6 128F      		std Z+26,r17
 644 03a8 238F      		std Z+27,r18
 645 03aa 348F      		std Z+28,r19
 273:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 646               		.loc 1 273 0
 647 03ac 01A5      		ldd r16,Z+41
 648 03ae 12A5      		ldd r17,Z+42
 649 03b0 23A5      		ldd r18,Z+43
 650 03b2 34A5      		ldd r19,Z+44
 651               	.LVL44:
 652               	.LBB73:
 653               	.LBB74:
 418:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 419:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 420:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		default:
 421:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return false;
 422:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 423:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 424:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 425:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** static bool RNDIS_Device_ProcessNDISSet(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 426:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                         const uint32_t OId,
 427:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                         const void* SetData,
 428:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                         const uint16_t SetSize)
 429:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 430:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	(void)SetSize;
 431:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 432:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 654               		.loc 1 432 0
 655 03b4 4E30      		cpi r20,14
 656 03b6 F1E0      		ldi r31,1
 657 03b8 5F07      		cpc r21,r31
 658 03ba 6F07      		cpc r22,r31
 659 03bc 7105      		cpc r23,__zero_reg__
 660 03be 01F0      		breq .L35
 661 03c0 4330      		cpi r20,3
 662 03c2 5140      		sbci r21,1
 663 03c4 6140      		sbci r22,1
 664 03c6 7140      		sbci r23,1
 665 03c8 01F0      		breq .L36
 666               	.LBE74:
 667               	.LBE73:
 277:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 668               		.loc 1 277 0
 669 03ca 4BEB      		ldi r20,lo8(-69)
 670 03cc 50E0      		ldi r21,0
 671 03ce 60E0      		ldi r22,0
 672 03d0 70EC      		ldi r23,lo8(-64)
 673               	.LVL45:
 674 03d2 00C0      		rjmp .L34
 675               	.LVL46:
 676               	.L35:
 272:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                              le32_to_cpu(SET_Message->Informati
 677               		.loc 1 272 0
 678 03d4 B901      		movw r22,r18
 679 03d6 A801      		movw r20,r16
 680               	.LVL47:
 681 03d8 485F      		subi r20,-8
 682 03da 5F4F      		sbci r21,-1
 683 03dc 6F4F      		sbci r22,-1
 684 03de 7F4F      		sbci r23,-1
 685               	.LBB76:
 686               	.LBB75:
 433:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 434:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 435:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrPacketFilter = le32_to_cpu(*((uint32_t*)SetData));
 687               		.loc 1 435 0
 688 03e0 F701      		movw r30,r14
 689 03e2 E40F      		add r30,r20
 690 03e4 F51F      		adc r31,r21
 691 03e6 4589      		ldd r20,Z+21
 692 03e8 5689      		ldd r21,Z+22
 693 03ea 6789      		ldd r22,Z+23
 694 03ec 708D      		ldd r23,Z+24
 695 03ee F701      		movw r30,r14
 696 03f0 E956      		subi r30,105
 697 03f2 FF4F      		sbci r31,-1
 698 03f4 4083      		st Z,r20
 699 03f6 5183      		std Z+1,r21
 700 03f8 6283      		std Z+2,r22
 701 03fa 7383      		std Z+3,r23
 436:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrRNDISState   = le32_to_cpu((RNDISInterfaceInfo->State.CurrPacketFi
 702               		.loc 1 436 0
 703 03fc 82E0      		ldi r24,lo8(2)
 704 03fe 3197      		sbiw r30,1
 705 0400 8083      		st Z,r24
 706               	.L36:
 707               	.LBE75:
 708               	.LBE76:
 277:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 709               		.loc 1 277 0
 710 0402 40E0      		ldi r20,0
 711 0404 50E0      		ldi r21,0
 712 0406 BA01      		movw r22,r20
 713               	.L34:
 275:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                   le32_to_cpu(SET_Message->InformationBufferLen
 714               		.loc 1 275 0
 715 0408 F701      		movw r30,r14
 716 040a 41A3      		std Z+33,r20
 717 040c 52A3      		std Z+34,r21
 718 040e 63A3      		std Z+35,r22
 719 0410 74A3      		std Z+36,r23
 720               	.LVL48:
 721 0412 00C0      		rjmp .L1
 722               	.LVL49:
 723               	.L9:
 280:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 724               		.loc 1 280 0
 725 0414 F701      		movw r30,r14
 726 0416 EB56      		subi r30,107
 727 0418 FF4F      		sbci r31,-1
 728 041a 81E0      		ldi r24,lo8(1)
 729 041c 8083      		st Z,r24
 730               	.LVL50:
 284:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageLength               = CPU_TO_LE32(sizeof(RNDIS_Reset_Complete_t));
 731               		.loc 1 284 0
 732 041e 46E0      		ldi r20,lo8(6)
 733 0420 50E0      		ldi r21,0
 734 0422 60E0      		ldi r22,0
 735 0424 70E8      		ldi r23,lo8(-128)
 736 0426 F701      		movw r30,r14
 737 0428 458B      		std Z+21,r20
 738 042a 568B      		std Z+22,r21
 739 042c 678B      		std Z+23,r22
 740 042e 708F      		std Z+24,r23
 285:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->Status                      = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 741               		.loc 1 285 0
 742 0430 40E1      		ldi r20,lo8(16)
 743 0432 50E0      		ldi r21,0
 744 0434 60E0      		ldi r22,0
 745 0436 70E0      		ldi r23,0
 746 0438 418F      		std Z+25,r20
 747 043a 528F      		std Z+26,r21
 748 043c 638F      		std Z+27,r22
 749 043e 748F      		std Z+28,r23
 286:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->AddressingReset             = CPU_TO_LE32(0);
 750               		.loc 1 286 0
 751 0440 158E      		std Z+29,__zero_reg__
 752 0442 168E      		std Z+30,__zero_reg__
 753 0444 178E      		std Z+31,__zero_reg__
 754 0446 10A2      		std Z+32,__zero_reg__
 755               	.LVL51:
 756               	.L53:
 301:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 757               		.loc 1 301 0
 758 0448 11A2      		std Z+33,__zero_reg__
 759 044a 12A2      		std Z+34,__zero_reg__
 760 044c 13A2      		std Z+35,__zero_reg__
 761 044e 14A2      		std Z+36,__zero_reg__
 762 0450 00C0      		rjmp .L1
 763               	.LVL52:
 764               	.L4:
 765               	.LBE77:
 766               	.LBE69:
 767               	.LBE68:
  93:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 768               		.loc 1 93 0
 769 0452 8091 0000 		lds r24,USB_ControlRequest
 770 0456 813A      		cpi r24,lo8(-95)
 771 0458 01F0      		breq .+2
 772 045a 00C0      		rjmp .L1
 773               	.LVL53:
 774               	.LBB80:
  97:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				{
 775               		.loc 1 97 0
 776 045c F701      		movw r30,r14
 777 045e 418D      		ldd r20,Z+25
 778 0460 528D      		ldd r21,Z+26
 779 0462 638D      		ldd r22,Z+27
 780 0464 748D      		ldd r23,Z+28
 781 0466 452B      		or r20,r21
 782 0468 462B      		or r20,r22
 783 046a 472B      		or r20,r23
 784 046c 01F4      		brne .L37
  99:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					MessageHeader->MessageLength                    = CPU_TO_LE32(1);
 785               		.loc 1 99 0
 786 046e 158A      		std Z+21,__zero_reg__
 100:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				}
 787               		.loc 1 100 0
 788 0470 41E0      		ldi r20,lo8(1)
 789 0472 50E0      		ldi r21,0
 790 0474 60E0      		ldi r22,0
 791 0476 70E0      		ldi r23,0
 792 0478 418F      		std Z+25,r20
 793 047a 528F      		std Z+26,r21
 794 047c 638F      		std Z+27,r22
 795 047e 748F      		std Z+28,r23
 796               	.L37:
 797               	.LBB81:
 798               	.LBB82:
 504:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 799               		.loc 2 504 0
 800 0480 8091 E800 		lds r24,232
 801 0484 877F      		andi r24,lo8(-9)
 802 0486 8093 E800 		sts 232,r24
 803               	.LBE82:
 804               	.LBE81:
 104:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearOUT();
 805               		.loc 1 104 0
 806 048a F701      		movw r30,r14
 807 048c 618D      		ldd r22,Z+25
 808 048e 728D      		ldd r23,Z+26
 809 0490 C701      		movw r24,r14
 810 0492 4596      		adiw r24,21
 811 0494 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 812               	.LVL54:
 813               	.LBB83:
 814               	.LBB84:
 517:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 518:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 519:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 520:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 521:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 522:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 523:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 524:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 526:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 528:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 529:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 531:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 815               		.loc 2 531 0
 816 0498 8091 E800 		lds r24,232
 817 049c 8B77      		andi r24,lo8(123)
 818 049e 8093 E800 		sts 232,r24
 819               	.LBE84:
 820               	.LBE83:
 107:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 821               		.loc 1 107 0
 822 04a2 F701      		movw r30,r14
 823 04a4 118E      		std Z+25,__zero_reg__
 824 04a6 128E      		std Z+26,__zero_reg__
 825 04a8 138E      		std Z+27,__zero_reg__
 826 04aa 148E      		std Z+28,__zero_reg__
 827 04ac 00C0      		rjmp .L1
 828               	.LVL55:
 829               	.L33:
 830               	.LBE80:
 831               	.LBB85:
 832               	.LBB79:
 833               	.LBB78:
 245:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->MessageLength           = cpu_to_le32(sizeof(RNDIS_Query_Complete_t) + Response
 834               		.loc 1 245 0
 835 04ae F701      		movw r30,r14
 836 04b0 11A2      		std Z+33,__zero_reg__
 837 04b2 12A2      		std Z+34,__zero_reg__
 838 04b4 13A2      		std Z+35,__zero_reg__
 839 04b6 14A2      		std Z+36,__zero_reg__
 246:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 840               		.loc 1 246 0
 841 04b8 8901      		movw r16,r18
 842 04ba 085E      		subi r16,-24
 843 04bc 1F4F      		sbci r17,-1
 844 04be C801      		movw r24,r16
 845 04c0 A0E0      		ldi r26,0
 846 04c2 B0E0      		ldi r27,0
 847 04c4 818F      		std Z+25,r24
 848 04c6 928F      		std Z+26,r25
 849 04c8 A38F      		std Z+27,r26
 850 04ca B48F      		std Z+28,r27
 248:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t) - sizeof(R
 851               		.loc 1 248 0
 852 04cc A901      		movw r20,r18
 853 04ce 60E0      		ldi r22,0
 854 04d0 70E0      		ldi r23,0
 855 04d2 45A3      		std Z+37,r20
 856 04d4 56A3      		std Z+38,r21
 857 04d6 67A3      		std Z+39,r22
 858 04d8 70A7      		std Z+40,r23
 249:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 859               		.loc 1 249 0
 860 04da 40E1      		ldi r20,lo8(16)
 861 04dc 50E0      		ldi r21,0
 862 04de 60E0      		ldi r22,0
 863 04e0 70E0      		ldi r23,0
 864 04e2 41A7      		std Z+41,r20
 865 04e4 52A7      		std Z+42,r21
 866 04e6 63A7      		std Z+43,r22
 867 04e8 74A7      		std Z+44,r23
 868 04ea 00C0      		rjmp .L1
 869               	.LVL56:
 870               	.L12:
 253:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t));
 871               		.loc 1 253 0
 872 04ec 4BEB      		ldi r20,lo8(-69)
 873 04ee 50E0      		ldi r21,0
 874 04f0 60E0      		ldi r22,0
 875 04f2 70EC      		ldi r23,lo8(-64)
 876 04f4 F701      		movw r30,r14
 877 04f6 41A3      		std Z+33,r20
 878 04f8 52A3      		std Z+34,r21
 879 04fa 63A3      		std Z+35,r22
 880 04fc 74A3      		std Z+36,r23
 881               	.LVL57:
 254:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 882               		.loc 1 254 0
 883 04fe 48E1      		ldi r20,lo8(24)
 884 0500 50E0      		ldi r21,0
 885 0502 60E0      		ldi r22,0
 886 0504 70E0      		ldi r23,0
 887 0506 418F      		std Z+25,r20
 888 0508 528F      		std Z+26,r21
 889 050a 638F      		std Z+27,r22
 890 050c 748F      		std Z+28,r23
 256:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(0);
 891               		.loc 1 256 0
 892 050e 15A2      		std Z+37,__zero_reg__
 893 0510 16A2      		std Z+38,__zero_reg__
 894 0512 17A2      		std Z+39,__zero_reg__
 895 0514 10A6      		std Z+40,__zero_reg__
 896               	.LVL58:
 257:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 897               		.loc 1 257 0
 898 0516 11A6      		std Z+41,__zero_reg__
 899 0518 12A6      		std Z+42,__zero_reg__
 900 051a 13A6      		std Z+43,__zero_reg__
 901 051c 14A6      		std Z+44,__zero_reg__
 902               	.LVL59:
 903               	.L1:
 904               	/* epilogue start */
 905               	.LBE78:
 906               	.LBE79:
 907               	.LBE85:
 112:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 908               		.loc 1 112 0
 909 051e 0F90      		pop __tmp_reg__
 910 0520 0F90      		pop __tmp_reg__
 911 0522 DF91      		pop r29
 912 0524 CF91      		pop r28
 913 0526 1F91      		pop r17
 914 0528 0F91      		pop r16
 915 052a FF90      		pop r15
 916 052c EF90      		pop r14
 917               	.LVL60:
 918 052e 0895      		ret
 919               		.cfi_endproc
 920               	.LFE97:
 922               		.section	.text.RNDIS_Device_ConfigureEndpoints,"ax",@progbits
 923               	.global	RNDIS_Device_ConfigureEndpoints
 925               	RNDIS_Device_ConfigureEndpoints:
 926               	.LFB98:
 115:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 927               		.loc 1 115 0
 928               		.cfi_startproc
 929               	.LVL61:
 930 0000 1F93      		push r17
 931               	.LCFI8:
 932               		.cfi_def_cfa_offset 3
 933               		.cfi_offset 17, -2
 934 0002 CF93      		push r28
 935               	.LCFI9:
 936               		.cfi_def_cfa_offset 4
 937               		.cfi_offset 28, -3
 938 0004 DF93      		push r29
 939               	.LCFI10:
 940               		.cfi_def_cfa_offset 5
 941               		.cfi_offset 29, -4
 942               	/* prologue: function */
 943               	/* frame size = 0 */
 944               	/* stack size = 3 */
 945               	.L__stack_usage = 3
 946 0006 EC01      		movw r28,r24
 116:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 947               		.loc 1 116 0
 948 0008 FC01      		movw r30,r24
 949 000a 7596      		adiw r30,21
 950 000c 86E8      		ldi r24,lo8(-122)
 951               	.LVL62:
 952 000e DF01      		movw r26,r30
 953               		0:
 954 0010 1D92      		st X+,__zero_reg__
 955 0012 8A95      		dec r24
 956 0014 01F4      		brne 0b
 957               	.LVL63:
 958               	.LBB86:
 118:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 959               		.loc 1 118 0
 960 0016 11E0      		ldi r17,lo8(1)
 961               	.LVL64:
 962               	.L67:
 963               	.LBB87:
 125:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 964               		.loc 1 125 0
 965 0018 8981      		ldd r24,Y+1
 966 001a 1813      		cpse r17,r24
 967 001c 00C0      		rjmp .L56
 127:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_IN;
 968               		.loc 1 127 0
 969 001e 2A81      		ldd r18,Y+2
 970 0020 3B81      		ldd r19,Y+3
 971               	.LVL65:
 130:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 972               		.loc 1 130 0
 973 0022 4C81      		ldd r20,Y+4
 974               	.LVL66:
 128:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_BULK;
 975               		.loc 1 128 0
 976 0024 80E8      		ldi r24,lo8(-128)
 977 0026 00C0      		rjmp .L69
 978               	.LVL67:
 979               	.L56:
 132:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 980               		.loc 1 132 0
 981 0028 8D81      		ldd r24,Y+5
 982 002a 1813      		cpse r17,r24
 983 002c 00C0      		rjmp .L58
 134:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_OUT;
 984               		.loc 1 134 0
 985 002e 2E81      		ldd r18,Y+6
 986 0030 3F81      		ldd r19,Y+7
 987               	.LVL68:
 137:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 988               		.loc 1 137 0
 989 0032 4885      		ldd r20,Y+8
 990               	.LVL69:
 135:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_BULK;
 991               		.loc 1 135 0
 992 0034 80E0      		ldi r24,0
 993               	.LVL70:
 994               	.L69:
 136:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataOUTEndpointDoubleBank;
 995               		.loc 1 136 0
 996 0036 92E0      		ldi r25,lo8(2)
 997 0038 00C0      		rjmp .L57
 998               	.LVL71:
 999               	.L58:
 139:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 1000               		.loc 1 139 0
 1001 003a 8985      		ldd r24,Y+9
 1002 003c 1817      		cp r17,r24
 1003 003e 01F0      		breq .L59
 1004               	.L66:
 1005               	.LBE87:
 118:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 1006               		.loc 1 118 0
 1007 0040 1F5F      		subi r17,lo8(-(1))
 1008               	.LVL72:
 1009 0042 1730      		cpi r17,lo8(7)
 1010 0044 01F4      		brne .L67
 1011               	.LBE86:
 158:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 1012               		.loc 1 158 0
 1013 0046 81E0      		ldi r24,lo8(1)
 1014 0048 00C0      		rjmp .L61
 1015               	.L59:
 1016               	.LBB95:
 1017               	.LBB94:
 141:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_IN;
 1018               		.loc 1 141 0
 1019 004a 2A85      		ldd r18,Y+10
 1020 004c 3B85      		ldd r19,Y+11
 1021               	.LVL73:
 144:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 1022               		.loc 1 144 0
 1023 004e 4C85      		ldd r20,Y+12
 1024               	.LVL74:
 142:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_INTERRUPT;
 1025               		.loc 1 142 0
 1026 0050 80E8      		ldi r24,lo8(-128)
 143:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.NotificationEndpointDoubleBank;
 1027               		.loc 1 143 0
 1028 0052 93E0      		ldi r25,lo8(3)
 1029               	.LVL75:
 1030               	.L57:
 151:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		                                 DoubleBanked ? ENDPOINT_BANK_DOUBLE : ENDPOINT_BANK_SINGLE)))
 1031               		.loc 1 151 0
 1032 0054 4423      		tst r20
 1033 0056 01F0      		breq .L68
 1034 0058 44E0      		ldi r20,lo8(4)
 1035               	.LVL76:
 1036 005a 00C0      		rjmp .L62
 1037               	.LVL77:
 1038               	.L68:
 1039 005c 40E0      		ldi r20,0
 1040               	.LVL78:
 1041               	.L62:
 1042               	.LBB88:
 1043               	.LBB89:
 1044               	.LBB90:
 1045               	.LBB91:
 127:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 1046               		.loc 2 127 0 discriminator 3
 1047 005e E8E0      		ldi r30,lo8(8)
 1048 0060 F0E0      		ldi r31,0
 126:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 1049               		.loc 2 126 0 discriminator 3
 1050 0062 50E0      		ldi r21,0
 1051               	.LVL79:
 1052               	.L63:
 129:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1053               		.loc 2 129 0
 1054 0064 E217      		cp r30,r18
 1055 0066 F307      		cpc r31,r19
 1056 0068 00F4      		brsh .L70
 131:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1057               		.loc 2 131 0
 1058 006a 5F5F      		subi r21,lo8(-(1))
 1059               	.LVL80:
 132:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1060               		.loc 2 132 0
 1061 006c EE0F      		lsl r30
 1062 006e FF1F      		rol r31
 1063               	.LVL81:
 1064 0070 00C0      		rjmp .L63
 1065               	.L70:
 1066               	.LBE91:
 1067               	.LBE90:
 276:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 1068               		.loc 2 276 0
 1069 0072 4260      		ori r20,lo8(2)
 1070               	.LVL82:
 1071               	.LBB93:
 1072               	.LBB92:
 135:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1073               		.loc 2 135 0
 1074 0074 5295      		swap r21
 1075               	.LVL83:
 1076 0076 507F      		andi r21,lo8(-16)
 1077               	.LBE92:
 1078               	.LBE93:
 276:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 1079               		.loc 2 276 0
 1080 0078 452B      		or r20,r21
 1081 007a B0E4      		ldi r27,lo8(64)
 1082 007c 9B9F      		mul r25,r27
 1083 007e 9001      		movw r18,r0
 1084 0080 1124      		clr __zero_reg__
 1085               	.LVL84:
 1086 0082 61E0      		ldi r22,lo8(1)
 1087 0084 8111      		cpse r24,__zero_reg__
 1088 0086 00C0      		rjmp .L65
 1089 0088 60E0      		ldi r22,0
 1090               	.L65:
 1091 008a 622B      		or r22,r18
 1092 008c 812F      		mov r24,r17
 1093               	.LVL85:
 1094 008e 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 1095               	.LVL86:
 1096               	.LBE89:
 1097               	.LBE88:
 151:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		                                 DoubleBanked ? ENDPOINT_BANK_DOUBLE : ENDPOINT_BANK_SINGLE)))
 1098               		.loc 1 151 0
 1099 0092 8111      		cpse r24,__zero_reg__
 1100 0094 00C0      		rjmp .L66
 1101               	.LVL87:
 1102               	.L61:
 1103               	/* epilogue start */
 1104               	.LBE94:
 1105               	.LBE95:
 159:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 1106               		.loc 1 159 0
 1107 0096 DF91      		pop r29
 1108 0098 CF91      		pop r28
 1109               	.LVL88:
 1110 009a 1F91      		pop r17
 1111               	.LVL89:
 1112 009c 0895      		ret
 1113               		.cfi_endproc
 1114               	.LFE98:
 1116               		.section	.rodata
 1117               	.LC0:
 1118 0000 A1        		.byte	-95
 1119 0001 01        		.byte	1
 1120 0002 0000      		.word	0
 1121 0004 0000      		.word	0
 1122 0006 0000      		.word	0
 1123               		.section	.text.RNDIS_Device_USBTask,"ax",@progbits
 1124               	.global	RNDIS_Device_USBTask
 1126               	RNDIS_Device_USBTask:
 1127               	.LFB99:
 162:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 1128               		.loc 1 162 0
 1129               		.cfi_startproc
 1130               	.LVL90:
 1131 0000 0F93      		push r16
 1132               	.LCFI11:
 1133               		.cfi_def_cfa_offset 3
 1134               		.cfi_offset 16, -2
 1135 0002 1F93      		push r17
 1136               	.LCFI12:
 1137               		.cfi_def_cfa_offset 4
 1138               		.cfi_offset 17, -3
 1139 0004 CF93      		push r28
 1140               	.LCFI13:
 1141               		.cfi_def_cfa_offset 5
 1142               		.cfi_offset 28, -4
 1143 0006 DF93      		push r29
 1144               	.LCFI14:
 1145               		.cfi_def_cfa_offset 6
 1146               		.cfi_offset 29, -5
 1147 0008 CDB7      		in r28,__SP_L__
 1148 000a DEB7      		in r29,__SP_H__
 1149               	.LCFI15:
 1150               		.cfi_def_cfa_register 28
 1151 000c 2897      		sbiw r28,8
 1152               	.LCFI16:
 1153               		.cfi_def_cfa_offset 14
 1154 000e 0FB6      		in __tmp_reg__,__SREG__
 1155 0010 F894      		cli
 1156 0012 DEBF      		out __SP_H__,r29
 1157 0014 0FBE      		out __SREG__,__tmp_reg__
 1158 0016 CDBF      		out __SP_L__,r28
 1159               	/* prologue: function */
 1160               	/* frame size = 8 */
 1161               	/* stack size = 12 */
 1162               	.L__stack_usage = 12
 163:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return;
 1163               		.loc 1 163 0
 1164 0018 2EB3      		in r18,0x1e
 1165 001a 2430      		cpi r18,lo8(4)
 1166 001c 01F4      		brne .L71
 166:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 1167               		.loc 1 166 0
 1168 001e FC01      		movw r30,r24
 1169 0020 2185      		ldd r18,Z+9
 1170               	.LVL91:
 1171               	.LBB96:
 1172               	.LBB97:
 330:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1173               		.loc 2 330 0
 1174 0022 2093 E900 		sts 233,r18
 1175               	.LBE97:
 1176               	.LBE96:
 1177               	.LBB98:
 1178               	.LBB99:
 467:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1179               		.loc 2 467 0
 1180 0026 2091 E800 		lds r18,232
 1181               	.LVL92:
 1182               	.LBE99:
 1183               	.LBE98:
 168:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 1184               		.loc 1 168 0
 1185 002a 20FF      		sbrs r18,0
 1186 002c 00C0      		rjmp .L71
 168:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 1187               		.loc 1 168 0 is_stmt 0 discriminator 1
 1188 002e 8C01      		movw r16,r24
 1189 0030 0B56      		subi r16,107
 1190 0032 1F4F      		sbci r17,-1
 1191 0034 F801      		movw r30,r16
 1192 0036 8081      		ld r24,Z
 1193               	.LVL93:
 1194 0038 8823      		tst r24
 1195 003a 01F0      		breq .L71
 1196               	.LBB100:
 170:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 1197               		.loc 1 170 0 is_stmt 1
 1198 003c 88E0      		ldi r24,lo8(8)
 1199 003e E0E0      		ldi r30,lo8(.LC0)
 1200 0040 F0E0      		ldi r31,hi8(.LC0)
 1201 0042 DE01      		movw r26,r28
 1202 0044 1196      		adiw r26,1
 1203               		0:
 1204 0046 0190      		ld r0,Z+
 1205 0048 0D92      		st X+,r0
 1206 004a 8A95      		dec r24
 1207 004c 01F4      		brne 0b
 179:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 1208               		.loc 1 179 0
 1209 004e 40E0      		ldi r20,0
 1210 0050 50E0      		ldi r21,0
 1211 0052 68E0      		ldi r22,lo8(8)
 1212 0054 70E0      		ldi r23,0
 1213 0056 CE01      		movw r24,r28
 1214 0058 0196      		adiw r24,1
 1215 005a 0E94 0000 		call Endpoint_Write_Stream_LE
 1216               	.LVL94:
 1217               	.LBB101:
 1218               	.LBB102:
 516:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1219               		.loc 2 516 0
 1220 005e 8091 E800 		lds r24,232
 1221 0062 8E77      		andi r24,lo8(126)
 1222 0064 8093 E800 		sts 232,r24
 1223               	.LBE102:
 1224               	.LBE101:
 183:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 1225               		.loc 1 183 0
 1226 0068 F801      		movw r30,r16
 1227 006a 1082      		st Z,__zero_reg__
 1228               	.LVL95:
 1229               	.L71:
 1230               	/* epilogue start */
 1231               	.LBE100:
 185:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 1232               		.loc 1 185 0
 1233 006c 2896      		adiw r28,8
 1234 006e 0FB6      		in __tmp_reg__,__SREG__
 1235 0070 F894      		cli
 1236 0072 DEBF      		out __SP_H__,r29
 1237 0074 0FBE      		out __SREG__,__tmp_reg__
 1238 0076 CDBF      		out __SP_L__,r28
 1239 0078 DF91      		pop r29
 1240 007a CF91      		pop r28
 1241 007c 1F91      		pop r17
 1242 007e 0F91      		pop r16
 1243 0080 0895      		ret
 1244               		.cfi_endproc
 1245               	.LFE99:
 1247               		.section	.text.RNDIS_Device_IsPacketReceived,"ax",@progbits
 1248               	.global	RNDIS_Device_IsPacketReceived
 1250               	RNDIS_Device_IsPacketReceived:
 1251               	.LFB103:
 437:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                         RNDIS_Data_Initialized : RNDIS_Data_Ini
 438:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 439:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 440:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_MULTICAST_LIST:
 441:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Do nothing - throw away the value from the host as it is unused */
 442:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 443:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 444:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		default:
 445:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return false;
 446:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 447:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 448:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 449:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** bool RNDIS_Device_IsPacketReceived(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 450:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 1252               		.loc 1 450 0
 1253               		.cfi_startproc
 1254               	.LVL96:
 1255               	/* prologue: function */
 1256               	/* frame size = 0 */
 1257               	/* stack size = 0 */
 1258               	.L__stack_usage = 0
 451:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1259               		.loc 1 451 0
 1260 0000 2EB3      		in r18,0x1e
 1261 0002 2430      		cpi r18,lo8(4)
 1262 0004 01F4      		brne .L84
 452:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 1263               		.loc 1 452 0 discriminator 1
 1264 0006 FC01      		movw r30,r24
 1265 0008 EA56      		subi r30,106
 1266 000a FF4F      		sbci r31,-1
 451:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1267               		.loc 1 451 0 discriminator 1
 1268 000c 2081      		ld r18,Z
 1269 000e 2230      		cpi r18,lo8(2)
 1270 0010 01F4      		brne .L84
 453:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 454:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		return false;
 455:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 456:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	
 457:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber);
 1271               		.loc 1 457 0
 1272 0012 FC01      		movw r30,r24
 1273 0014 8581      		ldd r24,Z+5
 1274               	.LVL97:
 1275               	.LBB103:
 1276               	.LBB104:
 330:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1277               		.loc 2 330 0
 1278 0016 8093 E900 		sts 233,r24
 1279               	.LBE104:
 1280               	.LBE103:
 1281               	.LBB105:
 1282               	.LBB106:
 479:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1283               		.loc 2 479 0
 1284 001a 8091 E800 		lds r24,232
 1285               	.LVL98:
 1286 001e 82FB      		bst r24,2
 1287 0020 8827      		clr r24
 1288 0022 80F9      		bld r24,0
 1289               	.LBE106:
 1290               	.LBE105:
 458:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	return Endpoint_IsOUTReceived();
 1291               		.loc 1 458 0
 1292 0024 0895      		ret
 1293               	.LVL99:
 1294               	.L84:
 454:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 1295               		.loc 1 454 0
 1296 0026 80E0      		ldi r24,0
 1297               	.LVL100:
 459:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 1298               		.loc 1 459 0
 1299 0028 0895      		ret
 1300               		.cfi_endproc
 1301               	.LFE103:
 1303               		.section	.text.RNDIS_Device_ReadPacket,"ax",@progbits
 1304               	.global	RNDIS_Device_ReadPacket
 1306               	RNDIS_Device_ReadPacket:
 1307               	.LFB104:
 460:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 461:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** uint8_t RNDIS_Device_ReadPacket(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 462:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                 void* Buffer,
 463:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                 uint16_t* const PacketLength)
 464:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 1308               		.loc 1 464 0
 1309               		.cfi_startproc
 1310               	.LVL101:
 1311 0000 EF92      		push r14
 1312               	.LCFI17:
 1313               		.cfi_def_cfa_offset 3
 1314               		.cfi_offset 14, -2
 1315 0002 FF92      		push r15
 1316               	.LCFI18:
 1317               		.cfi_def_cfa_offset 4
 1318               		.cfi_offset 15, -3
 1319 0004 0F93      		push r16
 1320               	.LCFI19:
 1321               		.cfi_def_cfa_offset 5
 1322               		.cfi_offset 16, -4
 1323 0006 1F93      		push r17
 1324               	.LCFI20:
 1325               		.cfi_def_cfa_offset 6
 1326               		.cfi_offset 17, -5
 1327 0008 CF93      		push r28
 1328               	.LCFI21:
 1329               		.cfi_def_cfa_offset 7
 1330               		.cfi_offset 28, -6
 1331 000a DF93      		push r29
 1332               	.LCFI22:
 1333               		.cfi_def_cfa_offset 8
 1334               		.cfi_offset 29, -7
 1335 000c CDB7      		in r28,__SP_L__
 1336 000e DEB7      		in r29,__SP_H__
 1337               	.LCFI23:
 1338               		.cfi_def_cfa_register 28
 1339 0010 AC97      		sbiw r28,44
 1340               	.LCFI24:
 1341               		.cfi_def_cfa_offset 52
 1342 0012 0FB6      		in __tmp_reg__,__SREG__
 1343 0014 F894      		cli
 1344 0016 DEBF      		out __SP_H__,r29
 1345 0018 0FBE      		out __SREG__,__tmp_reg__
 1346 001a CDBF      		out __SP_L__,r28
 1347               	/* prologue: function */
 1348               	/* frame size = 44 */
 1349               	/* stack size = 50 */
 1350               	.L__stack_usage = 50
 1351 001c FC01      		movw r30,r24
 1352 001e 7B01      		movw r14,r22
 1353 0020 8A01      		movw r16,r20
 465:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1354               		.loc 1 465 0
 1355 0022 8EB3      		in r24,0x1e
 1356               	.LVL102:
 1357 0024 8430      		cpi r24,lo8(4)
 1358 0026 01F4      		brne .L89
 466:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 1359               		.loc 1 466 0 discriminator 1
 1360 0028 DF01      		movw r26,r30
 1361 002a AA56      		subi r26,106
 1362 002c BF4F      		sbci r27,-1
 465:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1363               		.loc 1 465 0 discriminator 1
 1364 002e 8C91      		ld r24,X
 1365 0030 8230      		cpi r24,lo8(2)
 1366 0032 01F4      		brne .L89
 467:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 468:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 469:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 470:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	
 471:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber);
 1367               		.loc 1 471 0
 1368 0034 8581      		ldd r24,Z+5
 1369               	.LVL103:
 1370               	.LBB107:
 1371               	.LBB108:
 330:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1372               		.loc 2 330 0
 1373 0036 8093 E900 		sts 233,r24
 1374               	.LBE108:
 1375               	.LBE107:
 472:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	
 473:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	*PacketLength = 0;
 1376               		.loc 1 473 0
 1377 003a FA01      		movw r30,r20
 1378               	.LVL104:
 1379 003c 1182      		std Z+1,__zero_reg__
 1380 003e 1082      		st Z,__zero_reg__
 1381               	.LBB109:
 1382               	.LBB110:
 479:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1383               		.loc 2 479 0
 1384 0040 8091 E800 		lds r24,232
 1385               	.LVL105:
 1386               	.LBE110:
 1387               	.LBE109:
 474:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 475:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_IsOUTReceived()))
 1388               		.loc 1 475 0
 1389 0044 82FF      		sbrs r24,2
 1390 0046 00C0      		rjmp .L90
 476:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		return ENDPOINT_RWSTREAM_NoError;
 477:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 478:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDIS_Packet_Message_t RNDISPacketHeader;	
 479:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_Read_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 1391               		.loc 1 479 0
 1392 0048 40E0      		ldi r20,0
 1393 004a 50E0      		ldi r21,0
 1394               	.LVL106:
 1395 004c 6CE2      		ldi r22,lo8(44)
 1396 004e 70E0      		ldi r23,0
 1397               	.LVL107:
 1398 0050 CE01      		movw r24,r28
 1399 0052 0196      		adiw r24,1
 1400 0054 0E94 0000 		call Endpoint_Read_Stream_LE
 1401               	.LVL108:
 480:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 481:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (le32_to_cpu(RNDISPacketHeader.DataLength) > ETHERNET_FRAME_SIZE_MAX)
 1402               		.loc 1 481 0
 1403 0058 6D85      		ldd r22,Y+13
 1404 005a 7E85      		ldd r23,Y+14
 1405 005c 8F85      		ldd r24,Y+15
 1406 005e 9889      		ldd r25,Y+16
 1407 0060 6D3D      		cpi r22,-35
 1408 0062 F5E0      		ldi r31,5
 1409 0064 7F07      		cpc r23,r31
 1410 0066 8105      		cpc r24,__zero_reg__
 1411 0068 9105      		cpc r25,__zero_reg__
 1412 006a 00F0      		brlo .L87
 1413               	.LBB111:
 1414               	.LBB112:
 532:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 533:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 534:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 535:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 536:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 537:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 538:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 539:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 540:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 541:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 542:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 543:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 544:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 545:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 546:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 547:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 548:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 549:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 550:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 551:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 1415               		.loc 2 551 0
 1416 006c 8091 EB00 		lds r24,235
 1417 0070 8062      		ori r24,lo8(32)
 1418 0072 8093 EB00 		sts 235,r24
 1419               	.LBE112:
 1420               	.LBE111:
 482:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 483:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_StallTransaction();
 484:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 485:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		return RNDIS_ERROR_LOGICAL_CMD_FAILED;
 1421               		.loc 1 485 0
 1422 0076 80E8      		ldi r24,lo8(-128)
 1423 0078 00C0      		rjmp .L86
 1424               	.L87:
 486:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 487:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	
 488:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	*PacketLength = (uint16_t)le32_to_cpu(RNDISPacketHeader.DataLength);
 1425               		.loc 1 488 0
 1426 007a F801      		movw r30,r16
 1427 007c 7183      		std Z+1,r23
 1428 007e 6083      		st Z,r22
 489:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 490:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_Read_Stream_LE(Buffer, *PacketLength, NULL);
 1429               		.loc 1 490 0
 1430 0080 40E0      		ldi r20,0
 1431 0082 50E0      		ldi r21,0
 1432 0084 C701      		movw r24,r14
 1433 0086 0E94 0000 		call Endpoint_Read_Stream_LE
 1434               	.LVL109:
 1435               	.LBB113:
 1436               	.LBB114:
 531:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1437               		.loc 2 531 0
 1438 008a 8091 E800 		lds r24,232
 1439 008e 8B77      		andi r24,lo8(123)
 1440 0090 8093 E800 		sts 232,r24
 1441 0094 00C0      		rjmp .L90
 1442               	.LVL110:
 1443               	.L89:
 1444               	.LBE114:
 1445               	.LBE113:
 468:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 1446               		.loc 1 468 0
 1447 0096 82E0      		ldi r24,lo8(2)
 1448 0098 00C0      		rjmp .L86
 1449               	.LVL111:
 1450               	.L90:
 476:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 1451               		.loc 1 476 0
 1452 009a 80E0      		ldi r24,0
 1453               	.L86:
 1454               	/* epilogue start */
 491:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_ClearOUT();
 492:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	
 493:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	return ENDPOINT_RWSTREAM_NoError;
 494:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 1455               		.loc 1 494 0
 1456 009c AC96      		adiw r28,44
 1457 009e 0FB6      		in __tmp_reg__,__SREG__
 1458 00a0 F894      		cli
 1459 00a2 DEBF      		out __SP_H__,r29
 1460 00a4 0FBE      		out __SREG__,__tmp_reg__
 1461 00a6 CDBF      		out __SP_L__,r28
 1462 00a8 DF91      		pop r29
 1463 00aa CF91      		pop r28
 1464 00ac 1F91      		pop r17
 1465 00ae 0F91      		pop r16
 1466               	.LVL112:
 1467 00b0 FF90      		pop r15
 1468 00b2 EF90      		pop r14
 1469               	.LVL113:
 1470 00b4 0895      		ret
 1471               		.cfi_endproc
 1472               	.LFE104:
 1474               		.section	.text.RNDIS_Device_SendPacket,"ax",@progbits
 1475               	.global	RNDIS_Device_SendPacket
 1477               	RNDIS_Device_SendPacket:
 1478               	.LFB105:
 495:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 496:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** uint8_t RNDIS_Device_SendPacket(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 497:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                 void* Buffer,
 498:../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                 const uint16_t PacketLength)
 499:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 1479               		.loc 1 499 0
 1480               		.cfi_startproc
 1481               	.LVL114:
 1482 0000 CF92      		push r12
 1483               	.LCFI25:
 1484               		.cfi_def_cfa_offset 3
 1485               		.cfi_offset 12, -2
 1486 0002 DF92      		push r13
 1487               	.LCFI26:
 1488               		.cfi_def_cfa_offset 4
 1489               		.cfi_offset 13, -3
 1490 0004 EF92      		push r14
 1491               	.LCFI27:
 1492               		.cfi_def_cfa_offset 5
 1493               		.cfi_offset 14, -4
 1494 0006 FF92      		push r15
 1495               	.LCFI28:
 1496               		.cfi_def_cfa_offset 6
 1497               		.cfi_offset 15, -5
 1498 0008 0F93      		push r16
 1499               	.LCFI29:
 1500               		.cfi_def_cfa_offset 7
 1501               		.cfi_offset 16, -6
 1502 000a 1F93      		push r17
 1503               	.LCFI30:
 1504               		.cfi_def_cfa_offset 8
 1505               		.cfi_offset 17, -7
 1506 000c CF93      		push r28
 1507               	.LCFI31:
 1508               		.cfi_def_cfa_offset 9
 1509               		.cfi_offset 28, -8
 1510 000e DF93      		push r29
 1511               	.LCFI32:
 1512               		.cfi_def_cfa_offset 10
 1513               		.cfi_offset 29, -9
 1514 0010 CDB7      		in r28,__SP_L__
 1515 0012 DEB7      		in r29,__SP_H__
 1516               	.LCFI33:
 1517               		.cfi_def_cfa_register 28
 1518 0014 AC97      		sbiw r28,44
 1519               	.LCFI34:
 1520               		.cfi_def_cfa_offset 54
 1521 0016 0FB6      		in __tmp_reg__,__SREG__
 1522 0018 F894      		cli
 1523 001a DEBF      		out __SP_H__,r29
 1524 001c 0FBE      		out __SREG__,__tmp_reg__
 1525 001e CDBF      		out __SP_L__,r28
 1526               	/* prologue: function */
 1527               	/* frame size = 44 */
 1528               	/* stack size = 52 */
 1529               	.L__stack_usage = 52
 1530 0020 6B01      		movw r12,r22
 1531 0022 7A01      		movw r14,r20
 500:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	uint8_t ErrorCode;
 501:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 502:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1532               		.loc 1 502 0
 1533 0024 2EB3      		in r18,0x1e
 1534 0026 2430      		cpi r18,lo8(4)
 1535 0028 01F0      		breq .+2
 1536 002a 00C0      		rjmp .L94
 503:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 1537               		.loc 1 503 0 discriminator 1
 1538 002c FC01      		movw r30,r24
 1539 002e EA56      		subi r30,106
 1540 0030 FF4F      		sbci r31,-1
 502:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 1541               		.loc 1 502 0 discriminator 1
 1542 0032 2081      		ld r18,Z
 1543 0034 2230      		cpi r18,lo8(2)
 1544 0036 01F0      		breq .+2
 1545 0038 00C0      		rjmp .L94
 504:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 505:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 506:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 507:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	
 508:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber);
 1546               		.loc 1 508 0
 1547 003a FC01      		movw r30,r24
 1548 003c 8181      		ldd r24,Z+1
 1549               	.LVL115:
 1550               	.LBB115:
 1551               	.LBB116:
 330:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1552               		.loc 2 330 0
 1553 003e 8093 E900 		sts 233,r24
 1554               	.LBE116:
 1555               	.LBE115:
 509:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 510:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()) != ENDPOINT_READYWAIT_NoError)
 1556               		.loc 1 510 0
 1557 0042 0E94 0000 		call Endpoint_WaitUntilReady
 1558               	.LVL116:
 1559 0046 8111      		cpse r24,__zero_reg__
 1560 0048 00C0      		rjmp .L92
 511:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return ErrorCode;
 512:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 513:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDIS_Packet_Message_t RNDISPacketHeader;
 514:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 515:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	memset(&RNDISPacketHeader, 0, sizeof(RNDIS_Packet_Message_t));
 1561               		.loc 1 515 0
 1562 004a CE01      		movw r24,r28
 1563               	.LVL117:
 1564 004c 0196      		adiw r24,1
 1565 004e 2CE2      		ldi r18,lo8(44)
 1566 0050 FC01      		movw r30,r24
 1567               		0:
 1568 0052 1192      		st Z+,__zero_reg__
 1569 0054 2A95      		dec r18
 1570 0056 01F4      		brne 0b
 516:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 517:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDISPacketHeader.MessageType   = CPU_TO_LE32(REMOTE_NDIS_PACKET_MSG);
 1571               		.loc 1 517 0
 1572 0058 41E0      		ldi r20,lo8(1)
 1573 005a 50E0      		ldi r21,0
 1574 005c 60E0      		ldi r22,0
 1575 005e 70E0      		ldi r23,0
 1576 0060 4983      		std Y+1,r20
 1577 0062 5A83      		std Y+2,r21
 1578 0064 6B83      		std Y+3,r22
 1579 0066 7C83      		std Y+4,r23
 518:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDISPacketHeader.MessageLength = cpu_to_le32(sizeof(RNDIS_Packet_Message_t) + PacketLength);
 1580               		.loc 1 518 0
 1581 0068 A701      		movw r20,r14
 1582 006a 445D      		subi r20,-44
 1583 006c 5F4F      		sbci r21,-1
 1584 006e 60E0      		ldi r22,0
 1585 0070 70E0      		ldi r23,0
 1586 0072 4D83      		std Y+5,r20
 1587 0074 5E83      		std Y+6,r21
 1588 0076 6F83      		std Y+7,r22
 1589 0078 7887      		std Y+8,r23
 519:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDISPacketHeader.DataOffset    = CPU_TO_LE32(sizeof(RNDIS_Packet_Message_t) - sizeof(RNDIS_Messag
 1590               		.loc 1 519 0
 1591 007a 44E2      		ldi r20,lo8(36)
 1592 007c 50E0      		ldi r21,0
 1593 007e 60E0      		ldi r22,0
 1594 0080 70E0      		ldi r23,0
 1595 0082 4987      		std Y+9,r20
 1596 0084 5A87      		std Y+10,r21
 1597 0086 6B87      		std Y+11,r22
 1598 0088 7C87      		std Y+12,r23
 520:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDISPacketHeader.DataLength    = cpu_to_le32(PacketLength);
 1599               		.loc 1 520 0
 1600 008a 8701      		movw r16,r14
 1601 008c 20E0      		ldi r18,0
 1602 008e 30E0      		ldi r19,0
 1603 0090 0D87      		std Y+13,r16
 1604 0092 1E87      		std Y+14,r17
 1605 0094 2F87      		std Y+15,r18
 1606 0096 388B      		std Y+16,r19
 521:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 522:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_Write_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 1607               		.loc 1 522 0
 1608 0098 40E0      		ldi r20,0
 1609 009a 50E0      		ldi r21,0
 1610 009c 6CE2      		ldi r22,lo8(44)
 1611 009e 70E0      		ldi r23,0
 1612 00a0 0E94 0000 		call Endpoint_Write_Stream_LE
 1613               	.LVL118:
 523:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_Write_Stream_LE(Buffer, PacketLength, NULL);
 1614               		.loc 1 523 0
 1615 00a4 40E0      		ldi r20,0
 1616 00a6 50E0      		ldi r21,0
 1617 00a8 B701      		movw r22,r14
 1618 00aa C601      		movw r24,r12
 1619 00ac 0E94 0000 		call Endpoint_Write_Stream_LE
 1620               	.LVL119:
 1621               	.LBB117:
 1622               	.LBB118:
 516:../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1623               		.loc 2 516 0
 1624 00b0 8091 E800 		lds r24,232
 1625 00b4 8E77      		andi r24,lo8(126)
 1626 00b6 8093 E800 		sts 232,r24
 1627               	.LBE118:
 1628               	.LBE117:
 524:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_ClearIN();
 525:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 526:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	return ENDPOINT_RWSTREAM_NoError;
 1629               		.loc 1 526 0
 1630 00ba 80E0      		ldi r24,0
 1631 00bc 00C0      		rjmp .L92
 1632               	.LVL120:
 1633               	.L94:
 505:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 1634               		.loc 1 505 0
 1635 00be 82E0      		ldi r24,lo8(2)
 1636               	.LVL121:
 1637               	.L92:
 1638               	/* epilogue start */
 527:../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 1639               		.loc 1 527 0
 1640 00c0 AC96      		adiw r28,44
 1641 00c2 0FB6      		in __tmp_reg__,__SREG__
 1642 00c4 F894      		cli
 1643 00c6 DEBF      		out __SP_H__,r29
 1644 00c8 0FBE      		out __SREG__,__tmp_reg__
 1645 00ca CDBF      		out __SP_L__,r28
 1646 00cc DF91      		pop r29
 1647 00ce CF91      		pop r28
 1648 00d0 1F91      		pop r17
 1649 00d2 0F91      		pop r16
 1650 00d4 FF90      		pop r15
 1651 00d6 EF90      		pop r14
 1652               	.LVL122:
 1653 00d8 DF90      		pop r13
 1654 00da CF90      		pop r12
 1655               	.LVL123:
 1656 00dc 0895      		ret
 1657               		.cfi_endproc
 1658               	.LFE105:
 1660               		.section	.progmem.data,"a",@progbits
 1663               	AdapterSupportedOIDList:
 1664 0000 01        		.byte	1
 1665 0001 01        		.byte	1
 1666 0002 01        		.byte	1
 1667 0003 00        		.byte	0
 1668 0004 02        		.byte	2
 1669 0005 02        		.byte	2
 1670 0006 01        		.byte	1
 1671 0007 00        		.byte	0
 1672 0008 02        		.byte	2
 1673 0009 01        		.byte	1
 1674 000a 01        		.byte	1
 1675 000b 00        		.byte	0
 1676 000c 03        		.byte	3
 1677 000d 01        		.byte	1
 1678 000e 01        		.byte	1
 1679 000f 00        		.byte	0
 1680 0010 04        		.byte	4
 1681 0011 01        		.byte	1
 1682 0012 01        		.byte	1
 1683 0013 00        		.byte	0
 1684 0014 06        		.byte	6
 1685 0015 01        		.byte	1
 1686 0016 01        		.byte	1
 1687 0017 00        		.byte	0
 1688 0018 11        		.byte	17
 1689 0019 01        		.byte	1
 1690 001a 01        		.byte	1
 1691 001b 00        		.byte	0
 1692 001c 07        		.byte	7
 1693 001d 01        		.byte	1
 1694 001e 01        		.byte	1
 1695 001f 00        		.byte	0
 1696 0020 0A        		.byte	10
 1697 0021 01        		.byte	1
 1698 0022 01        		.byte	1
 1699 0023 00        		.byte	0
 1700 0024 0B        		.byte	11
 1701 0025 01        		.byte	1
 1702 0026 01        		.byte	1
 1703 0027 00        		.byte	0
 1704 0028 0C        		.byte	12
 1705 0029 01        		.byte	1
 1706 002a 01        		.byte	1
 1707 002b 00        		.byte	0
 1708 002c 0D        		.byte	13
 1709 002d 01        		.byte	1
 1710 002e 01        		.byte	1
 1711 002f 00        		.byte	0
 1712 0030 0E        		.byte	14
 1713 0031 01        		.byte	1
 1714 0032 01        		.byte	1
 1715 0033 00        		.byte	0
 1716 0034 11        		.byte	17
 1717 0035 01        		.byte	1
 1718 0036 01        		.byte	1
 1719 0037 00        		.byte	0
 1720 0038 14        		.byte	20
 1721 0039 01        		.byte	1
 1722 003a 01        		.byte	1
 1723 003b 00        		.byte	0
 1724 003c 01        		.byte	1
 1725 003d 01        		.byte	1
 1726 003e 02        		.byte	2
 1727 003f 00        		.byte	0
 1728 0040 02        		.byte	2
 1729 0041 01        		.byte	1
 1730 0042 02        		.byte	2
 1731 0043 00        		.byte	0
 1732 0044 03        		.byte	3
 1733 0045 01        		.byte	1
 1734 0046 02        		.byte	2
 1735 0047 00        		.byte	0
 1736 0048 04        		.byte	4
 1737 0049 01        		.byte	1
 1738 004a 02        		.byte	2
 1739 004b 00        		.byte	0
 1740 004c 05        		.byte	5
 1741 004d 01        		.byte	1
 1742 004e 02        		.byte	2
 1743 004f 00        		.byte	0
 1744 0050 01        		.byte	1
 1745 0051 01        		.byte	1
 1746 0052 01        		.byte	1
 1747 0053 01        		.byte	1
 1748 0054 02        		.byte	2
 1749 0055 01        		.byte	1
 1750 0056 01        		.byte	1
 1751 0057 01        		.byte	1
 1752 0058 03        		.byte	3
 1753 0059 01        		.byte	1
 1754 005a 01        		.byte	1
 1755 005b 01        		.byte	1
 1756 005c 04        		.byte	4
 1757 005d 01        		.byte	1
 1758 005e 01        		.byte	1
 1759 005f 01        		.byte	1
 1760 0060 01        		.byte	1
 1761 0061 01        		.byte	1
 1762 0062 02        		.byte	2
 1763 0063 01        		.byte	1
 1764 0064 02        		.byte	2
 1765 0065 01        		.byte	1
 1766 0066 02        		.byte	2
 1767 0067 01        		.byte	1
 1768 0068 03        		.byte	3
 1769 0069 01        		.byte	1
 1770 006a 02        		.byte	2
 1771 006b 01        		.byte	1
 1772               		.text
 1773               	.Letext0:
 1774               		.file 3 "/Users/sergio/Downloads/Arduino.app/Contents/Java/hardware/tools/avr/avr/include/stdint.h
 1775               		.file 4 "/Users/sergio/Downloads/Arduino.app/Contents/Java/hardware/tools/avr/lib/gcc/avr/4.8.1/in
 1776               		.file 5 "../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../Device.h"
 1777               		.file 6 "../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../StdRequestType.h"
 1778               		.file 7 "../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../EndpointStream.h"
 1779               		.file 8 "../../LUFA/Drivers/USB/Class/Device/../Common/RNDIS.h"
 1780               		.file 9 "../../LUFA/Drivers/USB/Class/Device/RNDIS.h"
 1781               		.file 10 "/Users/sergio/Downloads/Arduino.app/Contents/Java/hardware/tools/avr/avr/include/avr/pgm
 1782               		.file 11 "../../LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/EndpointStream_AVR8.h"
 1783               		.file 12 "../../LUFA/Drivers/USB/Class/Device/../../Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RNDIS.c
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:2      *ABS*:0000003e __SP_H__
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:3      *ABS*:0000003d __SP_L__
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:4      *ABS*:0000003f __SREG__
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:5      *ABS*:0000003b __RAMPZ__
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:7      *ABS*:00000001 __zero_reg__
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:14     .text.RNDIS_Device_ProcessControlRequest:00000000 RNDIS_Device_ProcessControlRequest
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:1663   .progmem.data:00000000 AdapterSupportedOIDList
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:925    .text.RNDIS_Device_ConfigureEndpoints:00000000 RNDIS_Device_ConfigureEndpoints
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:1126   .text.RNDIS_Device_USBTask:00000000 RNDIS_Device_USBTask
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:1250   .text.RNDIS_Device_IsPacketReceived:00000000 RNDIS_Device_IsPacketReceived
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:1306   .text.RNDIS_Device_ReadPacket:00000000 RNDIS_Device_ReadPacket
/var/folders/gx/kn5blx6n78333p7442q7pm940000gn/T//ccN8oaaf.s:1477   .text.RNDIS_Device_SendPacket:00000000 RNDIS_Device_SendPacket

UNDEFINED SYMBOLS
USB_ControlRequest
Endpoint_Read_Control_Stream_LE
memcpy_P
memcpy
Endpoint_Write_Control_Stream_LE
Endpoint_ConfigureEndpoint_Prv
Endpoint_Write_Stream_LE
Endpoint_Read_Stream_LE
Endpoint_WaitUntilReady
__do_copy_data
