
../../bin/sample/yun/sample.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .data         000001c8  00800100  00003910  000039a4  2**0  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003910  00000000  00000000  00000094  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000170  008002c8  008002c8  00003b6c  2**0  ALLOC
  3 .comment      00000011  00000000  00000000  00003b6c  2**0  CONTENTS, READONLY
  4 .debug_aranges 00000870  00000000  00000000  00003b7d  2**0  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00017993  00000000  00000000  000043ed  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000032e5  00000000  00000000  0001bd80  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00003430  00000000  00000000  0001f065  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00001e48  00000000  00000000  00022498  2**2  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000031f8  00000000  00000000  000242e0  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000af64  00000000  00000000  000274d8  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000009e0  00000000  00000000  0003243c  2**0  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 27 01 	jmp	0x24e	; 0x24e <__dtors_end>
       4:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
       8:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
       c:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      10:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      14:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      18:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      1c:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      20:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      24:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      28:	0c 94 eb 0d 	jmp	0x1bd6	; 0x1bd6 <__vector_10>
      2c:	0c 94 b7 0c 	jmp	0x196e	; 0x196e <__vector_11>
      30:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      34:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      38:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      3c:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      40:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      44:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      48:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      4c:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      50:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      54:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      58:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      5c:	0c 94 92 14 	jmp	0x2924	; 0x2924 <__vector_23>
      60:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      64:	0c 94 cc 16 	jmp	0x2d98	; 0x2d98 <__vector_25>
      68:	0c 94 fe 16 	jmp	0x2dfc	; 0x2dfc <__vector_26>
      6c:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      70:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      74:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      78:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      7c:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      80:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      84:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      88:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      8c:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      90:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      94:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      98:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      9c:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      a0:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      a4:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>
      a8:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__bad_interrupt>

000000ac <__trampolines_end>:
      ac:	08 0b       	sbc	r16, r24
      ae:	00 02       	muls	r16, r16
      b0:	02 02       	muls	r16, r18
      b2:	01 00       	.word	0x0001	; ????
      b4:	09 04       	cpc	r0, r9
      b6:	00 00       	nop
      b8:	01 02       	muls	r16, r17
      ba:	02 00       	.word	0x0002	; ????
      bc:	00 05       	cpc	r16, r0
      be:	24 00       	.word	0x0024	; ????
      c0:	10 01       	movw	r2, r0
      c2:	05 24       	eor	r0, r5
      c4:	01 01       	movw	r0, r2
      c6:	01 04       	cpc	r0, r1
      c8:	24 02       	muls	r18, r20
      ca:	06 05       	cpc	r16, r6
      cc:	24 06       	cpc	r2, r20
      ce:	00 01       	movw	r0, r0
      d0:	07 05       	cpc	r16, r7
      d2:	81 03       	fmuls	r16, r17
      d4:	10 00       	.word	0x0010	; ????
      d6:	40 09       	sbc	r20, r0
      d8:	04 01       	movw	r0, r8
      da:	00 02       	muls	r16, r16
      dc:	0a 00       	.word	0x000a	; ????
      de:	00 00       	nop
      e0:	07 05       	cpc	r16, r7
      e2:	02 02       	muls	r16, r18
      e4:	40 00       	.word	0x0040	; ????
      e6:	00 07       	cpc	r16, r16
      e8:	05 83       	std	Z+5, r16	; 0x05
      ea:	02 40       	sbci	r16, 0x02	; 2
	...

000000ee <_initEndpoints>:
      ee:	00 c1 80 81 c1                                      .....

000000f3 <USB_DeviceDescriptorA>:
      f3:	12 01 00 02 02 00 00 40 41 23 41 80 00 01 01 02     .......@A#A.....
     103:	00 01                                               ..

00000105 <USB_DeviceDescriptor>:
     105:	12 01 00 02 00 00 00 40 41 23 41 80 00 01 01 02     .......@A#A.....
     115:	00 01                                               ..

00000117 <STRING_MANUFACTURER>:
     117:	41 72 64 75 69 6e 6f 20 4c 4c 43 00                 Arduino LLC.

00000123 <STRING_PRODUCT>:
     123:	55 53 42 20 49 4f 20 42 6f 61 72 64 00              USB IO Board.

00000130 <STRING_LANGUAGE>:
     130:	04 03 09 04                                         ....

00000134 <BridgeClass::begin()::__c>:
     134:	72 75 6e 2d 62 72 69 64 67 65 0a 00                 run-bridge..

00000140 <BridgeClass::begin()::__c>:
     140:	0a 00                                               ..

00000142 <BridgeClass::begin()::__c>:
     142:	0a 00                                               ..

00000144 <_asciimap>:
	...
     14c:	2a 2b 28 00 00 00 00 00 00 00 00 00 00 00 00 00     *+(.............
	...
     164:	2c 9e b4 a0 a1 a2 a4 34 a6 a7 a5 ae 36 2d 37 38     ,......4....6-78
     174:	27 1e 1f 20 21 22 23 24 25 26 b3 33 b6 2e b7 b8     '.. !"#$%&.3....
     184:	9f 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f 90 91 92     ................
     194:	93 94 95 96 97 98 99 9a 9b 9c 9d 2f 31 30 a3 ad     .........../10..
     1a4:	35 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12     5...............
     1b4:	13 14 15 16 17 18 19 1a 1b 1c 1d af b1 b0 b5 00     ................

000001c4 <_hidInterface>:
     1c4:	09 04 02 00 01 03 00 00 00 09 21 01 01 00 01 22     ..........!...."
     1d4:	65 00 07 05 84 03 40 00 01                          e.....@..

000001dd <_hidReportDescriptor>:
     1dd:	05 01 09 02 a1 01 09 01 a1 00 85 01 05 09 19 01     ................
     1ed:	29 03 15 00 25 01 95 03 75 01 81 02 95 01 75 05     )...%...u.....u.
     1fd:	81 03 05 01 09 30 09 31 09 38 15 81 25 7f 75 08     .....0.1.8..%.u.
     20d:	95 03 81 06 c0 c0 05 01 09 06 a1 01 85 02 05 07     ................
     21d:	19 e0 29 e7 15 00 25 01 75 01 95 08 81 02 95 01     ..)...%.u.......
     22d:	75 08 81 03 95 06 75 08 15 00 25 65 05 07 19 00     u.....u...%e....
     23d:	29 65 81 00 c0                                      )e...

00000242 <__ctors_start>:
     242:	c6 05       	cpc	r28, r6
     244:	d8 07       	cpc	r29, r24
     246:	61 12       	cpse	r6, r17
     248:	bf 16       	cp	r11, r31
     24a:	2e 17       	cp	r18, r30

0000024c <__ctors_end>:
     24c:	e9 05       	cpc	r30, r9

0000024e <__dtors_end>:
     24e:	11 24       	eor	r1, r1
     250:	1f be       	out	0x3f, r1	; 63
     252:	cf ef       	ldi	r28, 0xFF	; 255
     254:	da e0       	ldi	r29, 0x0A	; 10
     256:	de bf       	out	0x3e, r29	; 62
     258:	cd bf       	out	0x3d, r28	; 61

0000025a <__do_copy_data>:
     25a:	12 e0       	ldi	r17, 0x02	; 2
     25c:	a0 e0       	ldi	r26, 0x00	; 0
     25e:	b1 e0       	ldi	r27, 0x01	; 1
     260:	e0 e1       	ldi	r30, 0x10	; 16
     262:	f9 e3       	ldi	r31, 0x39	; 57
     264:	02 c0       	rjmp	.+4      	; 0x26a <__do_copy_data+0x10>
     266:	05 90       	lpm	r0, Z+
     268:	0d 92       	st	X+, r0
     26a:	a8 3c       	cpi	r26, 0xC8	; 200
     26c:	b1 07       	cpc	r27, r17
     26e:	d9 f7       	brne	.-10     	; 0x266 <__do_copy_data+0xc>

00000270 <__do_clear_bss>:
     270:	24 e0       	ldi	r18, 0x04	; 4
     272:	a8 ec       	ldi	r26, 0xC8	; 200
     274:	b2 e0       	ldi	r27, 0x02	; 2
     276:	01 c0       	rjmp	.+2      	; 0x27a <.do_clear_bss_start>

00000278 <.do_clear_bss_loop>:
     278:	1d 92       	st	X+, r1

0000027a <.do_clear_bss_start>:
     27a:	a8 33       	cpi	r26, 0x38	; 56
     27c:	b2 07       	cpc	r27, r18
     27e:	e1 f7       	brne	.-8      	; 0x278 <.do_clear_bss_loop>

00000280 <__do_global_ctors>:
     280:	12 e0       	ldi	r17, 0x02	; 2
     282:	cc e4       	ldi	r28, 0x4C	; 76
     284:	d2 e0       	ldi	r29, 0x02	; 2
     286:	04 c0       	rjmp	.+8      	; 0x290 <__do_global_ctors+0x10>
     288:	22 97       	sbiw	r28, 0x02	; 2
     28a:	fe 01       	movw	r30, r28
     28c:	0e 94 77 1c 	call	0x38ee	; 0x38ee <__tablejump__>
     290:	c2 34       	cpi	r28, 0x42	; 66
     292:	d1 07       	cpc	r29, r17
     294:	c9 f7       	brne	.-14     	; 0x288 <__do_global_ctors+0x8>
     296:	0e 94 47 0f 	call	0x1e8e	; 0x1e8e <main>
     29a:	0c 94 67 19 	jmp	0x32ce	; 0x32ce <exit>

0000029e <__bad_interrupt>:
     29e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002a2 <setup>:
     2a2:	40 e8       	ldi	r20, 0x80	; 128
     2a4:	55 e2       	ldi	r21, 0x25	; 37
     2a6:	60 e0       	ldi	r22, 0x00	; 0
     2a8:	70 e0       	ldi	r23, 0x00	; 0
     2aa:	8d e1       	ldi	r24, 0x1D	; 29
     2ac:	93 e0       	ldi	r25, 0x03	; 3
     2ae:	0e 94 c3 07 	call	0xf86	; 0xf86 <Serial_::begin(unsigned long)>
     2b2:	26 e0       	ldi	r18, 0x06	; 6
     2b4:	40 e9       	ldi	r20, 0x90	; 144
     2b6:	50 ed       	ldi	r21, 0xD0	; 208
     2b8:	63 e0       	ldi	r22, 0x03	; 3
     2ba:	70 e0       	ldi	r23, 0x00	; 0
     2bc:	80 91 7f 03 	lds	r24, 0x037F
     2c0:	90 91 80 03 	lds	r25, 0x0380
     2c4:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <HardwareSerial::begin(unsigned long, unsigned char)>
     2c8:	86 e7       	ldi	r24, 0x76	; 118
     2ca:	93 e0       	ldi	r25, 0x03	; 3
     2cc:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <BridgeClass::begin()>
     2d0:	8d e1       	ldi	r24, 0x1D	; 29
     2d2:	93 e0       	ldi	r25, 0x03	; 3
     2d4:	0e 94 c9 07 	call	0xf92	; 0xf92 <Serial_::operator bool()>
     2d8:	88 23       	and	r24, r24
     2da:	d1 f3       	breq	.-12     	; 0x2d0 <setup+0x2e>
     2dc:	08 95       	ret

000002de <printEEPROM()>:
     2de:	5f 92       	push	r5
     2e0:	6f 92       	push	r6
     2e2:	7f 92       	push	r7
     2e4:	8f 92       	push	r8
     2e6:	9f 92       	push	r9
     2e8:	af 92       	push	r10
     2ea:	bf 92       	push	r11
     2ec:	cf 92       	push	r12
     2ee:	df 92       	push	r13
     2f0:	ef 92       	push	r14
     2f2:	ff 92       	push	r15
     2f4:	0f 93       	push	r16
     2f6:	1f 93       	push	r17
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	cd b7       	in	r28, 0x3d	; 61
     2fe:	de b7       	in	r29, 0x3e	; 62
     300:	c0 59       	subi	r28, 0x90	; 144
     302:	d1 09       	sbc	r29, r1
     304:	0f b6       	in	r0, 0x3f	; 63
     306:	f8 94       	cli
     308:	de bf       	out	0x3e, r29	; 62
     30a:	0f be       	out	0x3f, r0	; 63
     30c:	cd bf       	out	0x3d, r28	; 61
     30e:	6d e2       	ldi	r22, 0x2D	; 45
     310:	71 e0       	ldi	r23, 0x01	; 1
     312:	8d e1       	ldi	r24, 0x1D	; 29
     314:	93 e0       	ldi	r25, 0x03	; 3
     316:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     31a:	40 e1       	ldi	r20, 0x10	; 16
     31c:	50 e0       	ldi	r21, 0x00	; 0
     31e:	60 e0       	ldi	r22, 0x00	; 0
     320:	70 e0       	ldi	r23, 0x00	; 0
     322:	8d e1       	ldi	r24, 0x1D	; 29
     324:	93 e0       	ldi	r25, 0x03	; 3
     326:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <Print::println(int, int)>
     32a:	1f 92       	push	r1
     32c:	84 e0       	ldi	r24, 0x04	; 4
     32e:	8f 93       	push	r24
     330:	81 e4       	ldi	r24, 0x41	; 65
     332:	91 e0       	ldi	r25, 0x01	; 1
     334:	9f 93       	push	r25
     336:	8f 93       	push	r24
     338:	ce 01       	movw	r24, r28
     33a:	01 96       	adiw	r24, 0x01	; 1
     33c:	7c 01       	movw	r14, r24
     33e:	ff 92       	push	r15
     340:	8f 93       	push	r24
     342:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     346:	1f 92       	push	r1
     348:	1f 92       	push	r1
     34a:	ff 92       	push	r15
     34c:	ef 92       	push	r14
     34e:	6e 01       	movw	r12, r28
     350:	91 e8       	ldi	r25, 0x81	; 129
     352:	c9 0e       	add	r12, r25
     354:	d1 1c       	adc	r13, r1
     356:	df 92       	push	r13
     358:	cf 92       	push	r12
     35a:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     35e:	b6 01       	movw	r22, r12
     360:	8d e1       	ldi	r24, 0x1D	; 29
     362:	93 e0       	ldi	r25, 0x03	; 3
     364:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     368:	6a e4       	ldi	r22, 0x4A	; 74
     36a:	71 e0       	ldi	r23, 0x01	; 1
     36c:	8d e1       	ldi	r24, 0x1D	; 29
     36e:	93 e0       	ldi	r25, 0x03	; 3
     370:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     374:	0f b6       	in	r0, 0x3f	; 63
     376:	f8 94       	cli
     378:	de bf       	out	0x3e, r29	; 62
     37a:	0f be       	out	0x3f, r0	; 63
     37c:	cd bf       	out	0x3d, r28	; 61
     37e:	00 e0       	ldi	r16, 0x00	; 0
     380:	10 e0       	ldi	r17, 0x00	; 0
     382:	84 e0       	ldi	r24, 0x04	; 4
     384:	58 2e       	mov	r5, r24
     386:	91 e4       	ldi	r25, 0x41	; 65
     388:	89 2e       	mov	r8, r25
     38a:	91 e0       	ldi	r25, 0x01	; 1
     38c:	99 2e       	mov	r9, r25
     38e:	23 e4       	ldi	r18, 0x43	; 67
     390:	62 2e       	mov	r6, r18
     392:	21 e0       	ldi	r18, 0x01	; 1
     394:	72 2e       	mov	r7, r18
     396:	c8 01       	movw	r24, r16
     398:	8f 70       	andi	r24, 0x0F	; 15
     39a:	99 27       	eor	r25, r25
     39c:	89 2b       	or	r24, r25
     39e:	09 f0       	breq	.+2      	; 0x3a2 <printEEPROM()+0xc4>
     3a0:	4d c0       	rjmp	.+154    	; 0x43c <printEEPROM()+0x15e>
     3a2:	01 15       	cp	r16, r1
     3a4:	11 05       	cpc	r17, r1
     3a6:	09 f4       	brne	.+2      	; 0x3aa <printEEPROM()+0xcc>
     3a8:	49 c0       	rjmp	.+146    	; 0x43c <printEEPROM()+0x15e>
     3aa:	6a e4       	ldi	r22, 0x4A	; 74
     3ac:	71 e0       	ldi	r23, 0x01	; 1
     3ae:	8d e1       	ldi	r24, 0x1D	; 29
     3b0:	93 e0       	ldi	r25, 0x03	; 3
     3b2:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     3b6:	58 01       	movw	r10, r16
     3b8:	f0 e1       	ldi	r31, 0x10	; 16
     3ba:	af 1a       	sub	r10, r31
     3bc:	b1 08       	sbc	r11, r1
     3be:	a0 16       	cp	r10, r16
     3c0:	b1 06       	cpc	r11, r17
     3c2:	b8 f4       	brcc	.+46     	; 0x3f2 <printEEPROM()+0x114>
     3c4:	c5 01       	movw	r24, r10
     3c6:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <__eerd_byte_m32u4>
     3ca:	90 ee       	ldi	r25, 0xE0	; 224
     3cc:	98 0f       	add	r25, r24
     3ce:	9f 35       	cpi	r25, 0x5F	; 95
     3d0:	38 f0       	brcs	.+14     	; 0x3e0 <printEEPROM()+0x102>
     3d2:	67 e2       	ldi	r22, 0x27	; 39
     3d4:	71 e0       	ldi	r23, 0x01	; 1
     3d6:	8d e1       	ldi	r24, 0x1D	; 29
     3d8:	93 e0       	ldi	r25, 0x03	; 3
     3da:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     3de:	05 c0       	rjmp	.+10     	; 0x3ea <printEEPROM()+0x10c>
     3e0:	68 2f       	mov	r22, r24
     3e2:	8d e1       	ldi	r24, 0x1D	; 29
     3e4:	93 e0       	ldi	r25, 0x03	; 3
     3e6:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     3ea:	8f ef       	ldi	r24, 0xFF	; 255
     3ec:	a8 1a       	sub	r10, r24
     3ee:	b8 0a       	sbc	r11, r24
     3f0:	e6 cf       	rjmp	.-52     	; 0x3be <printEEPROM()+0xe0>
     3f2:	8d e1       	ldi	r24, 0x1D	; 29
     3f4:	93 e0       	ldi	r25, 0x03	; 3
     3f6:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
     3fa:	1f 92       	push	r1
     3fc:	5f 92       	push	r5
     3fe:	9f 92       	push	r9
     400:	8f 92       	push	r8
     402:	ff 92       	push	r15
     404:	ef 92       	push	r14
     406:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     40a:	1f 93       	push	r17
     40c:	0f 93       	push	r16
     40e:	ff 92       	push	r15
     410:	ef 92       	push	r14
     412:	df 92       	push	r13
     414:	cf 92       	push	r12
     416:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     41a:	b6 01       	movw	r22, r12
     41c:	8d e1       	ldi	r24, 0x1D	; 29
     41e:	93 e0       	ldi	r25, 0x03	; 3
     420:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     424:	6a e4       	ldi	r22, 0x4A	; 74
     426:	71 e0       	ldi	r23, 0x01	; 1
     428:	8d e1       	ldi	r24, 0x1D	; 29
     42a:	93 e0       	ldi	r25, 0x03	; 3
     42c:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	f8 94       	cli
     434:	de bf       	out	0x3e, r29	; 62
     436:	0f be       	out	0x3f, r0	; 63
     438:	cd bf       	out	0x3d, r28	; 61
     43a:	0e c0       	rjmp	.+28     	; 0x458 <printEEPROM()+0x17a>
     43c:	c8 01       	movw	r24, r16
     43e:	87 70       	andi	r24, 0x07	; 7
     440:	99 27       	eor	r25, r25
     442:	89 2b       	or	r24, r25
     444:	49 f4       	brne	.+18     	; 0x458 <printEEPROM()+0x17a>
     446:	01 15       	cp	r16, r1
     448:	11 05       	cpc	r17, r1
     44a:	31 f0       	breq	.+12     	; 0x458 <printEEPROM()+0x17a>
     44c:	6d e4       	ldi	r22, 0x4D	; 77
     44e:	71 e0       	ldi	r23, 0x01	; 1
     450:	8d e1       	ldi	r24, 0x1D	; 29
     452:	93 e0       	ldi	r25, 0x03	; 3
     454:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     458:	c8 01       	movw	r24, r16
     45a:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <__eerd_byte_m32u4>
     45e:	b8 2e       	mov	r11, r24
     460:	1f 92       	push	r1
     462:	5f 92       	push	r5
     464:	7f 92       	push	r7
     466:	6f 92       	push	r6
     468:	ff 92       	push	r15
     46a:	ef 92       	push	r14
     46c:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     470:	2b 2d       	mov	r18, r11
     472:	33 27       	eor	r19, r19
     474:	27 fd       	sbrc	r18, 7
     476:	30 95       	com	r19
     478:	3f 93       	push	r19
     47a:	bf 92       	push	r11
     47c:	ff 92       	push	r15
     47e:	ef 92       	push	r14
     480:	df 92       	push	r13
     482:	cf 92       	push	r12
     484:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     488:	f6 01       	movw	r30, r12
     48a:	62 81       	ldd	r22, Z+2	; 0x02
     48c:	8d e1       	ldi	r24, 0x1D	; 29
     48e:	93 e0       	ldi	r25, 0x03	; 3
     490:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     494:	f6 01       	movw	r30, r12
     496:	63 81       	ldd	r22, Z+3	; 0x03
     498:	8d e1       	ldi	r24, 0x1D	; 29
     49a:	93 e0       	ldi	r25, 0x03	; 3
     49c:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     4a0:	6e e4       	ldi	r22, 0x4E	; 78
     4a2:	71 e0       	ldi	r23, 0x01	; 1
     4a4:	8d e1       	ldi	r24, 0x1D	; 29
     4a6:	93 e0       	ldi	r25, 0x03	; 3
     4a8:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     4ac:	0f 5f       	subi	r16, 0xFF	; 255
     4ae:	1f 4f       	sbci	r17, 0xFF	; 255
     4b0:	0f b6       	in	r0, 0x3f	; 63
     4b2:	f8 94       	cli
     4b4:	de bf       	out	0x3e, r29	; 62
     4b6:	0f be       	out	0x3f, r0	; 63
     4b8:	cd bf       	out	0x3d, r28	; 61
     4ba:	01 30       	cpi	r16, 0x01	; 1
     4bc:	94 e0       	ldi	r25, 0x04	; 4
     4be:	19 07       	cpc	r17, r25
     4c0:	09 f0       	breq	.+2      	; 0x4c4 <printEEPROM()+0x1e6>
     4c2:	69 cf       	rjmp	.-302    	; 0x396 <printEEPROM()+0xb8>
     4c4:	00 e0       	ldi	r16, 0x00	; 0
     4c6:	10 e0       	ldi	r17, 0x00	; 0
     4c8:	78 01       	movw	r14, r16
     4ca:	ff ef       	ldi	r31, 0xFF	; 255
     4cc:	ef 1a       	sub	r14, r31
     4ce:	fb ef       	ldi	r31, 0xFB	; 251
     4d0:	ff 0a       	sbc	r15, r31
     4d2:	0f 30       	cpi	r16, 0x0F	; 15
     4d4:	11 05       	cpc	r17, r1
     4d6:	a1 f0       	breq	.+40     	; 0x500 <printEEPROM()+0x222>
     4d8:	6c e4       	ldi	r22, 0x4C	; 76
     4da:	71 e0       	ldi	r23, 0x01	; 1
     4dc:	8d e1       	ldi	r24, 0x1D	; 29
     4de:	93 e0       	ldi	r25, 0x03	; 3
     4e0:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     4e4:	e7 e0       	ldi	r30, 0x07	; 7
     4e6:	ee 22       	and	r14, r30
     4e8:	ff 24       	eor	r15, r15
     4ea:	ef 28       	or	r14, r15
     4ec:	31 f4       	brne	.+12     	; 0x4fa <printEEPROM()+0x21c>
     4ee:	6d e4       	ldi	r22, 0x4D	; 77
     4f0:	71 e0       	ldi	r23, 0x01	; 1
     4f2:	8d e1       	ldi	r24, 0x1D	; 29
     4f4:	93 e0       	ldi	r25, 0x03	; 3
     4f6:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     4fa:	0f 5f       	subi	r16, 0xFF	; 255
     4fc:	1f 4f       	sbci	r17, 0xFF	; 255
     4fe:	e4 cf       	rjmp	.-56     	; 0x4c8 <printEEPROM()+0x1ea>
     500:	6a e4       	ldi	r22, 0x4A	; 74
     502:	71 e0       	ldi	r23, 0x01	; 1
     504:	8d e1       	ldi	r24, 0x1D	; 29
     506:	93 e0       	ldi	r25, 0x03	; 3
     508:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     50c:	8f ef       	ldi	r24, 0xFF	; 255
     50e:	93 e0       	ldi	r25, 0x03	; 3
     510:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <__eerd_byte_m32u4>
     514:	90 ee       	ldi	r25, 0xE0	; 224
     516:	98 0f       	add	r25, r24
     518:	9f 35       	cpi	r25, 0x5F	; 95
     51a:	38 f0       	brcs	.+14     	; 0x52a <printEEPROM()+0x24c>
     51c:	67 e2       	ldi	r22, 0x27	; 39
     51e:	71 e0       	ldi	r23, 0x01	; 1
     520:	8d e1       	ldi	r24, 0x1D	; 29
     522:	93 e0       	ldi	r25, 0x03	; 3
     524:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     528:	05 c0       	rjmp	.+10     	; 0x534 <printEEPROM()+0x256>
     52a:	68 2f       	mov	r22, r24
     52c:	8d e1       	ldi	r24, 0x1D	; 29
     52e:	93 e0       	ldi	r25, 0x03	; 3
     530:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     534:	8d e1       	ldi	r24, 0x1D	; 29
     536:	93 e0       	ldi	r25, 0x03	; 3
     538:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
     53c:	c0 57       	subi	r28, 0x70	; 112
     53e:	df 4f       	sbci	r29, 0xFF	; 255
     540:	0f b6       	in	r0, 0x3f	; 63
     542:	f8 94       	cli
     544:	de bf       	out	0x3e, r29	; 62
     546:	0f be       	out	0x3f, r0	; 63
     548:	cd bf       	out	0x3d, r28	; 61
     54a:	df 91       	pop	r29
     54c:	cf 91       	pop	r28
     54e:	1f 91       	pop	r17
     550:	0f 91       	pop	r16
     552:	ff 90       	pop	r15
     554:	ef 90       	pop	r14
     556:	df 90       	pop	r13
     558:	cf 90       	pop	r12
     55a:	bf 90       	pop	r11
     55c:	af 90       	pop	r10
     55e:	9f 90       	pop	r9
     560:	8f 90       	pop	r8
     562:	7f 90       	pop	r7
     564:	6f 90       	pop	r6
     566:	5f 90       	pop	r5
     568:	08 95       	ret

0000056a <printFlashMemory(unsigned char*, unsigned char*)>:
     56a:	2f 92       	push	r2
     56c:	3f 92       	push	r3
     56e:	4f 92       	push	r4
     570:	5f 92       	push	r5
     572:	6f 92       	push	r6
     574:	7f 92       	push	r7
     576:	8f 92       	push	r8
     578:	9f 92       	push	r9
     57a:	af 92       	push	r10
     57c:	bf 92       	push	r11
     57e:	cf 92       	push	r12
     580:	df 92       	push	r13
     582:	ef 92       	push	r14
     584:	ff 92       	push	r15
     586:	0f 93       	push	r16
     588:	1f 93       	push	r17
     58a:	cf 93       	push	r28
     58c:	df 93       	push	r29
     58e:	cd b7       	in	r28, 0x3d	; 61
     590:	de b7       	in	r29, 0x3e	; 62
     592:	c0 59       	subi	r28, 0x90	; 144
     594:	d1 09       	sbc	r29, r1
     596:	0f b6       	in	r0, 0x3f	; 63
     598:	f8 94       	cli
     59a:	de bf       	out	0x3e, r29	; 62
     59c:	0f be       	out	0x3f, r0	; 63
     59e:	cd bf       	out	0x3d, r28	; 61
     5a0:	5c 01       	movw	r10, r24
     5a2:	4b 01       	movw	r8, r22
     5a4:	61 15       	cp	r22, r1
     5a6:	71 05       	cpc	r23, r1
     5a8:	21 f4       	brne	.+8      	; 0x5b2 <printFlashMemory(unsigned char*, unsigned char*)+0x48>
     5aa:	4e ef       	ldi	r20, 0xFE	; 254
     5ac:	84 2e       	mov	r8, r20
     5ae:	4f e7       	ldi	r20, 0x7F	; 127
     5b0:	94 2e       	mov	r9, r20
     5b2:	60 e5       	ldi	r22, 0x50	; 80
     5b4:	71 e0       	ldi	r23, 0x01	; 1
     5b6:	8d e1       	ldi	r24, 0x1D	; 29
     5b8:	93 e0       	ldi	r25, 0x03	; 3
     5ba:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     5be:	35 01       	movw	r6, r10
     5c0:	40 e1       	ldi	r20, 0x10	; 16
     5c2:	50 e0       	ldi	r21, 0x00	; 0
     5c4:	b5 01       	movw	r22, r10
     5c6:	8d e1       	ldi	r24, 0x1D	; 29
     5c8:	93 e0       	ldi	r25, 0x03	; 3
     5ca:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <Print::println(int, int)>
     5ce:	1f 92       	push	r1
     5d0:	84 e0       	ldi	r24, 0x04	; 4
     5d2:	8f 93       	push	r24
     5d4:	81 e4       	ldi	r24, 0x41	; 65
     5d6:	91 e0       	ldi	r25, 0x01	; 1
     5d8:	9f 93       	push	r25
     5da:	8f 93       	push	r24
     5dc:	8e 01       	movw	r16, r28
     5de:	0f 5f       	subi	r16, 0xFF	; 255
     5e0:	1f 4f       	sbci	r17, 0xFF	; 255
     5e2:	1f 93       	push	r17
     5e4:	0f 93       	push	r16
     5e6:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     5ea:	bf 92       	push	r11
     5ec:	af 92       	push	r10
     5ee:	1f 93       	push	r17
     5f0:	0f 93       	push	r16
     5f2:	7e 01       	movw	r14, r28
     5f4:	81 e8       	ldi	r24, 0x81	; 129
     5f6:	e8 0e       	add	r14, r24
     5f8:	f1 1c       	adc	r15, r1
     5fa:	ff 92       	push	r15
     5fc:	ef 92       	push	r14
     5fe:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     602:	b7 01       	movw	r22, r14
     604:	8d e1       	ldi	r24, 0x1D	; 29
     606:	93 e0       	ldi	r25, 0x03	; 3
     608:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     60c:	6a e4       	ldi	r22, 0x4A	; 74
     60e:	71 e0       	ldi	r23, 0x01	; 1
     610:	8d e1       	ldi	r24, 0x1D	; 29
     612:	93 e0       	ldi	r25, 0x03	; 3
     614:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     618:	0f b6       	in	r0, 0x3f	; 63
     61a:	f8 94       	cli
     61c:	de bf       	out	0x3e, r29	; 62
     61e:	0f be       	out	0x3f, r0	; 63
     620:	cd bf       	out	0x3d, r28	; 61
     622:	c1 2c       	mov	r12, r1
     624:	d1 2c       	mov	r13, r1
     626:	86 14       	cp	r8, r6
     628:	97 04       	cpc	r9, r7
     62a:	0c f4       	brge	.+2      	; 0x62e <printFlashMemory(unsigned char*, unsigned char*)+0xc4>
     62c:	9c c0       	rjmp	.+312    	; 0x766 <printFlashMemory(unsigned char*, unsigned char*)+0x1fc>
     62e:	15 01       	movw	r2, r10
     630:	26 0c       	add	r2, r6
     632:	37 1c       	adc	r3, r7
     634:	c6 01       	movw	r24, r12
     636:	8f 70       	andi	r24, 0x0F	; 15
     638:	99 27       	eor	r25, r25
     63a:	89 2b       	or	r24, r25
     63c:	09 f0       	breq	.+2      	; 0x640 <printFlashMemory(unsigned char*, unsigned char*)+0xd6>
     63e:	4d c0       	rjmp	.+154    	; 0x6da <printFlashMemory(unsigned char*, unsigned char*)+0x170>
     640:	c1 14       	cp	r12, r1
     642:	d1 04       	cpc	r13, r1
     644:	09 f4       	brne	.+2      	; 0x648 <printFlashMemory(unsigned char*, unsigned char*)+0xde>
     646:	49 c0       	rjmp	.+146    	; 0x6da <printFlashMemory(unsigned char*, unsigned char*)+0x170>
     648:	6a e4       	ldi	r22, 0x4A	; 74
     64a:	71 e0       	ldi	r23, 0x01	; 1
     64c:	8d e1       	ldi	r24, 0x1D	; 29
     64e:	93 e0       	ldi	r25, 0x03	; 3
     650:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     654:	31 e1       	ldi	r19, 0x11	; 17
     656:	43 2e       	mov	r4, r19
     658:	51 2c       	mov	r5, r1
     65a:	b1 e0       	ldi	r27, 0x01	; 1
     65c:	4b 1a       	sub	r4, r27
     65e:	51 08       	sbc	r5, r1
     660:	a1 f0       	breq	.+40     	; 0x68a <printFlashMemory(unsigned char*, unsigned char*)+0x120>
     662:	f1 01       	movw	r30, r2
     664:	e4 19       	sub	r30, r4
     666:	f5 09       	sbc	r31, r5
     668:	64 91       	lpm	r22, Z
     66a:	80 ee       	ldi	r24, 0xE0	; 224
     66c:	86 0f       	add	r24, r22
     66e:	8f 35       	cpi	r24, 0x5F	; 95
     670:	38 f0       	brcs	.+14     	; 0x680 <printFlashMemory(unsigned char*, unsigned char*)+0x116>
     672:	67 e2       	ldi	r22, 0x27	; 39
     674:	71 e0       	ldi	r23, 0x01	; 1
     676:	8d e1       	ldi	r24, 0x1D	; 29
     678:	93 e0       	ldi	r25, 0x03	; 3
     67a:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     67e:	ed cf       	rjmp	.-38     	; 0x65a <printFlashMemory(unsigned char*, unsigned char*)+0xf0>
     680:	8d e1       	ldi	r24, 0x1D	; 29
     682:	93 e0       	ldi	r25, 0x03	; 3
     684:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     688:	e8 cf       	rjmp	.-48     	; 0x65a <printFlashMemory(unsigned char*, unsigned char*)+0xf0>
     68a:	8d e1       	ldi	r24, 0x1D	; 29
     68c:	93 e0       	ldi	r25, 0x03	; 3
     68e:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
     692:	1f 92       	push	r1
     694:	e4 e0       	ldi	r30, 0x04	; 4
     696:	ef 93       	push	r30
     698:	a1 e4       	ldi	r26, 0x41	; 65
     69a:	b1 e0       	ldi	r27, 0x01	; 1
     69c:	bf 93       	push	r27
     69e:	af 93       	push	r26
     6a0:	1f 93       	push	r17
     6a2:	0f 93       	push	r16
     6a4:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     6a8:	7f 92       	push	r7
     6aa:	6f 92       	push	r6
     6ac:	1f 93       	push	r17
     6ae:	0f 93       	push	r16
     6b0:	ff 92       	push	r15
     6b2:	ef 92       	push	r14
     6b4:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     6b8:	b7 01       	movw	r22, r14
     6ba:	8d e1       	ldi	r24, 0x1D	; 29
     6bc:	93 e0       	ldi	r25, 0x03	; 3
     6be:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     6c2:	6a e4       	ldi	r22, 0x4A	; 74
     6c4:	71 e0       	ldi	r23, 0x01	; 1
     6c6:	8d e1       	ldi	r24, 0x1D	; 29
     6c8:	93 e0       	ldi	r25, 0x03	; 3
     6ca:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     6ce:	0f b6       	in	r0, 0x3f	; 63
     6d0:	f8 94       	cli
     6d2:	de bf       	out	0x3e, r29	; 62
     6d4:	0f be       	out	0x3f, r0	; 63
     6d6:	cd bf       	out	0x3d, r28	; 61
     6d8:	0e c0       	rjmp	.+28     	; 0x6f6 <printFlashMemory(unsigned char*, unsigned char*)+0x18c>
     6da:	c6 01       	movw	r24, r12
     6dc:	87 70       	andi	r24, 0x07	; 7
     6de:	99 27       	eor	r25, r25
     6e0:	89 2b       	or	r24, r25
     6e2:	49 f4       	brne	.+18     	; 0x6f6 <printFlashMemory(unsigned char*, unsigned char*)+0x18c>
     6e4:	c1 14       	cp	r12, r1
     6e6:	d1 04       	cpc	r13, r1
     6e8:	31 f0       	breq	.+12     	; 0x6f6 <printFlashMemory(unsigned char*, unsigned char*)+0x18c>
     6ea:	6d e4       	ldi	r22, 0x4D	; 77
     6ec:	71 e0       	ldi	r23, 0x01	; 1
     6ee:	8d e1       	ldi	r24, 0x1D	; 29
     6f0:	93 e0       	ldi	r25, 0x03	; 3
     6f2:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     6f6:	f1 01       	movw	r30, r2
     6f8:	24 90       	lpm	r2, Z
     6fa:	1f 92       	push	r1
     6fc:	f4 e0       	ldi	r31, 0x04	; 4
     6fe:	ff 93       	push	r31
     700:	a3 e4       	ldi	r26, 0x43	; 67
     702:	b1 e0       	ldi	r27, 0x01	; 1
     704:	bf 93       	push	r27
     706:	af 93       	push	r26
     708:	1f 93       	push	r17
     70a:	0f 93       	push	r16
     70c:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     710:	82 2d       	mov	r24, r2
     712:	99 27       	eor	r25, r25
     714:	87 fd       	sbrc	r24, 7
     716:	90 95       	com	r25
     718:	9f 93       	push	r25
     71a:	2f 92       	push	r2
     71c:	1f 93       	push	r17
     71e:	0f 93       	push	r16
     720:	ff 92       	push	r15
     722:	ef 92       	push	r14
     724:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <sprintf>
     728:	d7 01       	movw	r26, r14
     72a:	12 96       	adiw	r26, 0x02	; 2
     72c:	6c 91       	ld	r22, X
     72e:	8d e1       	ldi	r24, 0x1D	; 29
     730:	93 e0       	ldi	r25, 0x03	; 3
     732:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     736:	f7 01       	movw	r30, r14
     738:	63 81       	ldd	r22, Z+3	; 0x03
     73a:	8d e1       	ldi	r24, 0x1D	; 29
     73c:	93 e0       	ldi	r25, 0x03	; 3
     73e:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     742:	6e e4       	ldi	r22, 0x4E	; 78
     744:	71 e0       	ldi	r23, 0x01	; 1
     746:	8d e1       	ldi	r24, 0x1D	; 29
     748:	93 e0       	ldi	r25, 0x03	; 3
     74a:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     74e:	ff ef       	ldi	r31, 0xFF	; 255
     750:	6f 1a       	sub	r6, r31
     752:	7f 0a       	sbc	r7, r31
     754:	8f ef       	ldi	r24, 0xFF	; 255
     756:	c8 1a       	sub	r12, r24
     758:	d8 0a       	sbc	r13, r24
     75a:	0f b6       	in	r0, 0x3f	; 63
     75c:	f8 94       	cli
     75e:	de bf       	out	0x3e, r29	; 62
     760:	0f be       	out	0x3f, r0	; 63
     762:	cd bf       	out	0x3d, r28	; 61
     764:	60 cf       	rjmp	.-320    	; 0x626 <printFlashMemory(unsigned char*, unsigned char*)+0xbc>
     766:	e1 2c       	mov	r14, r1
     768:	f1 2c       	mov	r15, r1
     76a:	87 01       	movw	r16, r14
     76c:	0c 0d       	add	r16, r12
     76e:	1d 1d       	adc	r17, r13
     770:	c8 01       	movw	r24, r16
     772:	8f 70       	andi	r24, 0x0F	; 15
     774:	99 27       	eor	r25, r25
     776:	89 2b       	or	r24, r25
     778:	a1 f0       	breq	.+40     	; 0x7a2 <printFlashMemory(unsigned char*, unsigned char*)+0x238>
     77a:	6c e4       	ldi	r22, 0x4C	; 76
     77c:	71 e0       	ldi	r23, 0x01	; 1
     77e:	8d e1       	ldi	r24, 0x1D	; 29
     780:	93 e0       	ldi	r25, 0x03	; 3
     782:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     786:	07 70       	andi	r16, 0x07	; 7
     788:	11 27       	eor	r17, r17
     78a:	01 2b       	or	r16, r17
     78c:	31 f4       	brne	.+12     	; 0x79a <printFlashMemory(unsigned char*, unsigned char*)+0x230>
     78e:	6d e4       	ldi	r22, 0x4D	; 77
     790:	71 e0       	ldi	r23, 0x01	; 1
     792:	8d e1       	ldi	r24, 0x1D	; 29
     794:	93 e0       	ldi	r25, 0x03	; 3
     796:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     79a:	bf ef       	ldi	r27, 0xFF	; 255
     79c:	eb 1a       	sub	r14, r27
     79e:	fb 0a       	sbc	r15, r27
     7a0:	e4 cf       	rjmp	.-56     	; 0x76a <printFlashMemory(unsigned char*, unsigned char*)+0x200>
     7a2:	6a e4       	ldi	r22, 0x4A	; 74
     7a4:	71 e0       	ldi	r23, 0x01	; 1
     7a6:	8d e1       	ldi	r24, 0x1D	; 29
     7a8:	93 e0       	ldi	r25, 0x03	; 3
     7aa:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     7ae:	84 01       	movw	r16, r8
     7b0:	00 51       	subi	r16, 0x10	; 16
     7b2:	11 09       	sbc	r17, r1
     7b4:	0e 0d       	add	r16, r14
     7b6:	1f 1d       	adc	r17, r15
     7b8:	08 15       	cp	r16, r8
     7ba:	19 05       	cpc	r17, r9
     7bc:	b4 f4       	brge	.+44     	; 0x7ea <printFlashMemory(unsigned char*, unsigned char*)+0x280>
     7be:	f5 01       	movw	r30, r10
     7c0:	e0 0f       	add	r30, r16
     7c2:	f1 1f       	adc	r31, r17
     7c4:	64 91       	lpm	r22, Z
     7c6:	80 ee       	ldi	r24, 0xE0	; 224
     7c8:	86 0f       	add	r24, r22
     7ca:	8f 35       	cpi	r24, 0x5F	; 95
     7cc:	38 f0       	brcs	.+14     	; 0x7dc <printFlashMemory(unsigned char*, unsigned char*)+0x272>
     7ce:	67 e2       	ldi	r22, 0x27	; 39
     7d0:	71 e0       	ldi	r23, 0x01	; 1
     7d2:	8d e1       	ldi	r24, 0x1D	; 29
     7d4:	93 e0       	ldi	r25, 0x03	; 3
     7d6:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     7da:	04 c0       	rjmp	.+8      	; 0x7e4 <printFlashMemory(unsigned char*, unsigned char*)+0x27a>
     7dc:	8d e1       	ldi	r24, 0x1D	; 29
     7de:	93 e0       	ldi	r25, 0x03	; 3
     7e0:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     7e4:	0f 5f       	subi	r16, 0xFF	; 255
     7e6:	1f 4f       	sbci	r17, 0xFF	; 255
     7e8:	e7 cf       	rjmp	.-50     	; 0x7b8 <printFlashMemory(unsigned char*, unsigned char*)+0x24e>
     7ea:	8d e1       	ldi	r24, 0x1D	; 29
     7ec:	93 e0       	ldi	r25, 0x03	; 3
     7ee:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
     7f2:	c0 57       	subi	r28, 0x70	; 112
     7f4:	df 4f       	sbci	r29, 0xFF	; 255
     7f6:	0f b6       	in	r0, 0x3f	; 63
     7f8:	f8 94       	cli
     7fa:	de bf       	out	0x3e, r29	; 62
     7fc:	0f be       	out	0x3f, r0	; 63
     7fe:	cd bf       	out	0x3d, r28	; 61
     800:	df 91       	pop	r29
     802:	cf 91       	pop	r28
     804:	1f 91       	pop	r17
     806:	0f 91       	pop	r16
     808:	ff 90       	pop	r15
     80a:	ef 90       	pop	r14
     80c:	df 90       	pop	r13
     80e:	cf 90       	pop	r12
     810:	bf 90       	pop	r11
     812:	af 90       	pop	r10
     814:	9f 90       	pop	r9
     816:	8f 90       	pop	r8
     818:	7f 90       	pop	r7
     81a:	6f 90       	pop	r6
     81c:	5f 90       	pop	r5
     81e:	4f 90       	pop	r4
     820:	3f 90       	pop	r3
     822:	2f 90       	pop	r2
     824:	08 95       	ret

00000826 <printSRAM(unsigned char*, unsigned char*)>:
     826:	cf 92       	push	r12
     828:	df 92       	push	r13
     82a:	ef 92       	push	r14
     82c:	ff 92       	push	r15
     82e:	0f 93       	push	r16
     830:	1f 93       	push	r17
     832:	cf 93       	push	r28
     834:	df 93       	push	r29
     836:	8c 01       	movw	r16, r24
     838:	7b 01       	movw	r14, r22
     83a:	61 15       	cp	r22, r1
     83c:	71 05       	cpc	r23, r1
     83e:	21 f4       	brne	.+8      	; 0x848 <printSRAM(unsigned char*, unsigned char*)+0x22>
     840:	ee 24       	eor	r14, r14
     842:	ea 94       	dec	r14
     844:	5a e0       	ldi	r21, 0x0A	; 10
     846:	f5 2e       	mov	r15, r21
     848:	63 e6       	ldi	r22, 0x63	; 99
     84a:	71 e0       	ldi	r23, 0x01	; 1
     84c:	8d e1       	ldi	r24, 0x1D	; 29
     84e:	93 e0       	ldi	r25, 0x03	; 3
     850:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     854:	6d b7       	in	r22, 0x3d	; 61
     856:	7e b7       	in	r23, 0x3e	; 62
     858:	40 e1       	ldi	r20, 0x10	; 16
     85a:	50 e0       	ldi	r21, 0x00	; 0
     85c:	8d e1       	ldi	r24, 0x1D	; 29
     85e:	93 e0       	ldi	r25, 0x03	; 3
     860:	0e 94 a5 0a 	call	0x154a	; 0x154a <Print::println(unsigned int, int)>
     864:	62 e7       	ldi	r22, 0x72	; 114
     866:	71 e0       	ldi	r23, 0x01	; 1
     868:	8d e1       	ldi	r24, 0x1D	; 29
     86a:	93 e0       	ldi	r25, 0x03	; 3
     86c:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     870:	e8 01       	movw	r28, r16
     872:	40 e1       	ldi	r20, 0x10	; 16
     874:	50 e0       	ldi	r21, 0x00	; 0
     876:	b8 01       	movw	r22, r16
     878:	8d e1       	ldi	r24, 0x1D	; 29
     87a:	93 e0       	ldi	r25, 0x03	; 3
     87c:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <Print::println(int, int)>
     880:	40 e1       	ldi	r20, 0x10	; 16
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	b8 01       	movw	r22, r16
     886:	8d e1       	ldi	r24, 0x1D	; 29
     888:	93 e0       	ldi	r25, 0x03	; 3
     88a:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <Print::print(int, int)>
     88e:	6a e4       	ldi	r22, 0x4A	; 74
     890:	71 e0       	ldi	r23, 0x01	; 1
     892:	8d e1       	ldi	r24, 0x1D	; 29
     894:	93 e0       	ldi	r25, 0x03	; 3
     896:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     89a:	00 e0       	ldi	r16, 0x00	; 0
     89c:	10 e0       	ldi	r17, 0x00	; 0
     89e:	ec 16       	cp	r14, r28
     8a0:	fd 06       	cpc	r15, r29
     8a2:	0c f4       	brge	.+2      	; 0x8a6 <printSRAM(unsigned char*, unsigned char*)+0x80>
     8a4:	5d c0       	rjmp	.+186    	; 0x960 <printSRAM(unsigned char*, unsigned char*)+0x13a>
     8a6:	c8 01       	movw	r24, r16
     8a8:	8f 70       	andi	r24, 0x0F	; 15
     8aa:	99 27       	eor	r25, r25
     8ac:	89 2b       	or	r24, r25
     8ae:	89 f5       	brne	.+98     	; 0x912 <printSRAM(unsigned char*, unsigned char*)+0xec>
     8b0:	01 15       	cp	r16, r1
     8b2:	11 05       	cpc	r17, r1
     8b4:	71 f1       	breq	.+92     	; 0x912 <printSRAM(unsigned char*, unsigned char*)+0xec>
     8b6:	6a e4       	ldi	r22, 0x4A	; 74
     8b8:	71 e0       	ldi	r23, 0x01	; 1
     8ba:	8d e1       	ldi	r24, 0x1D	; 29
     8bc:	93 e0       	ldi	r25, 0x03	; 3
     8be:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     8c2:	6e 01       	movw	r12, r28
     8c4:	80 e1       	ldi	r24, 0x10	; 16
     8c6:	c8 1a       	sub	r12, r24
     8c8:	d1 08       	sbc	r13, r1
     8ca:	cc 16       	cp	r12, r28
     8cc:	dd 06       	cpc	r13, r29
     8ce:	99 f0       	breq	.+38     	; 0x8f6 <printSRAM(unsigned char*, unsigned char*)+0xd0>
     8d0:	f6 01       	movw	r30, r12
     8d2:	61 91       	ld	r22, Z+
     8d4:	6f 01       	movw	r12, r30
     8d6:	80 ee       	ldi	r24, 0xE0	; 224
     8d8:	86 0f       	add	r24, r22
     8da:	8f 35       	cpi	r24, 0x5F	; 95
     8dc:	38 f0       	brcs	.+14     	; 0x8ec <printSRAM(unsigned char*, unsigned char*)+0xc6>
     8de:	67 e2       	ldi	r22, 0x27	; 39
     8e0:	71 e0       	ldi	r23, 0x01	; 1
     8e2:	8d e1       	ldi	r24, 0x1D	; 29
     8e4:	93 e0       	ldi	r25, 0x03	; 3
     8e6:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     8ea:	ef cf       	rjmp	.-34     	; 0x8ca <printSRAM(unsigned char*, unsigned char*)+0xa4>
     8ec:	8d e1       	ldi	r24, 0x1D	; 29
     8ee:	93 e0       	ldi	r25, 0x03	; 3
     8f0:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     8f4:	ea cf       	rjmp	.-44     	; 0x8ca <printSRAM(unsigned char*, unsigned char*)+0xa4>
     8f6:	8d e1       	ldi	r24, 0x1D	; 29
     8f8:	93 e0       	ldi	r25, 0x03	; 3
     8fa:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
     8fe:	40 e1       	ldi	r20, 0x10	; 16
     900:	50 e0       	ldi	r21, 0x00	; 0
     902:	be 01       	movw	r22, r28
     904:	8d e1       	ldi	r24, 0x1D	; 29
     906:	93 e0       	ldi	r25, 0x03	; 3
     908:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <Print::print(int, int)>
     90c:	6a e4       	ldi	r22, 0x4A	; 74
     90e:	71 e0       	ldi	r23, 0x01	; 1
     910:	0a c0       	rjmp	.+20     	; 0x926 <printSRAM(unsigned char*, unsigned char*)+0x100>
     912:	c8 01       	movw	r24, r16
     914:	87 70       	andi	r24, 0x07	; 7
     916:	99 27       	eor	r25, r25
     918:	89 2b       	or	r24, r25
     91a:	49 f4       	brne	.+18     	; 0x92e <printSRAM(unsigned char*, unsigned char*)+0x108>
     91c:	01 15       	cp	r16, r1
     91e:	11 05       	cpc	r17, r1
     920:	31 f0       	breq	.+12     	; 0x92e <printSRAM(unsigned char*, unsigned char*)+0x108>
     922:	6d e4       	ldi	r22, 0x4D	; 77
     924:	71 e0       	ldi	r23, 0x01	; 1
     926:	8d e1       	ldi	r24, 0x1D	; 29
     928:	93 e0       	ldi	r25, 0x03	; 3
     92a:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     92e:	88 81       	ld	r24, Y
     930:	80 31       	cpi	r24, 0x10	; 16
     932:	30 f4       	brcc	.+12     	; 0x940 <printSRAM(unsigned char*, unsigned char*)+0x11a>
     934:	6d e7       	ldi	r22, 0x7D	; 125
     936:	71 e0       	ldi	r23, 0x01	; 1
     938:	8d e1       	ldi	r24, 0x1D	; 29
     93a:	93 e0       	ldi	r25, 0x03	; 3
     93c:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     940:	40 e1       	ldi	r20, 0x10	; 16
     942:	50 e0       	ldi	r21, 0x00	; 0
     944:	69 91       	ld	r22, Y+
     946:	8d e1       	ldi	r24, 0x1D	; 29
     948:	93 e0       	ldi	r25, 0x03	; 3
     94a:	0e 94 9e 0a 	call	0x153c	; 0x153c <Print::print(unsigned char, int)>
     94e:	6e e4       	ldi	r22, 0x4E	; 78
     950:	71 e0       	ldi	r23, 0x01	; 1
     952:	8d e1       	ldi	r24, 0x1D	; 29
     954:	93 e0       	ldi	r25, 0x03	; 3
     956:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     95a:	0f 5f       	subi	r16, 0xFF	; 255
     95c:	1f 4f       	sbci	r17, 0xFF	; 255
     95e:	9f cf       	rjmp	.-194    	; 0x89e <printSRAM(unsigned char*, unsigned char*)+0x78>
     960:	c1 2c       	mov	r12, r1
     962:	d1 2c       	mov	r13, r1
     964:	e6 01       	movw	r28, r12
     966:	c0 0f       	add	r28, r16
     968:	d1 1f       	adc	r29, r17
     96a:	ce 01       	movw	r24, r28
     96c:	8f 70       	andi	r24, 0x0F	; 15
     96e:	99 27       	eor	r25, r25
     970:	89 2b       	or	r24, r25
     972:	a1 f0       	breq	.+40     	; 0x99c <printSRAM(unsigned char*, unsigned char*)+0x176>
     974:	6c e4       	ldi	r22, 0x4C	; 76
     976:	71 e0       	ldi	r23, 0x01	; 1
     978:	8d e1       	ldi	r24, 0x1D	; 29
     97a:	93 e0       	ldi	r25, 0x03	; 3
     97c:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     980:	c7 70       	andi	r28, 0x07	; 7
     982:	dd 27       	eor	r29, r29
     984:	cd 2b       	or	r28, r29
     986:	31 f4       	brne	.+12     	; 0x994 <printSRAM(unsigned char*, unsigned char*)+0x16e>
     988:	6d e4       	ldi	r22, 0x4D	; 77
     98a:	71 e0       	ldi	r23, 0x01	; 1
     98c:	8d e1       	ldi	r24, 0x1D	; 29
     98e:	93 e0       	ldi	r25, 0x03	; 3
     990:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     994:	ff ef       	ldi	r31, 0xFF	; 255
     996:	cf 1a       	sub	r12, r31
     998:	df 0a       	sbc	r13, r31
     99a:	e4 cf       	rjmp	.-56     	; 0x964 <printSRAM(unsigned char*, unsigned char*)+0x13e>
     99c:	6a e4       	ldi	r22, 0x4A	; 74
     99e:	71 e0       	ldi	r23, 0x01	; 1
     9a0:	8d e1       	ldi	r24, 0x1D	; 29
     9a2:	93 e0       	ldi	r25, 0x03	; 3
     9a4:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     9a8:	e7 01       	movw	r28, r14
     9aa:	60 97       	sbiw	r28, 0x10	; 16
     9ac:	cc 0d       	add	r28, r12
     9ae:	dd 1d       	adc	r29, r13
     9b0:	ce 15       	cp	r28, r14
     9b2:	df 05       	cpc	r29, r15
     9b4:	8c f4       	brge	.+34     	; 0x9d8 <printSRAM(unsigned char*, unsigned char*)+0x1b2>
     9b6:	69 91       	ld	r22, Y+
     9b8:	80 ee       	ldi	r24, 0xE0	; 224
     9ba:	86 0f       	add	r24, r22
     9bc:	8f 35       	cpi	r24, 0x5F	; 95
     9be:	38 f0       	brcs	.+14     	; 0x9ce <printSRAM(unsigned char*, unsigned char*)+0x1a8>
     9c0:	67 e2       	ldi	r22, 0x27	; 39
     9c2:	71 e0       	ldi	r23, 0x01	; 1
     9c4:	8d e1       	ldi	r24, 0x1D	; 29
     9c6:	93 e0       	ldi	r25, 0x03	; 3
     9c8:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     9cc:	f1 cf       	rjmp	.-30     	; 0x9b0 <printSRAM(unsigned char*, unsigned char*)+0x18a>
     9ce:	8d e1       	ldi	r24, 0x1D	; 29
     9d0:	93 e0       	ldi	r25, 0x03	; 3
     9d2:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     9d6:	ec cf       	rjmp	.-40     	; 0x9b0 <printSRAM(unsigned char*, unsigned char*)+0x18a>
     9d8:	8d e1       	ldi	r24, 0x1D	; 29
     9da:	93 e0       	ldi	r25, 0x03	; 3
     9dc:	df 91       	pop	r29
     9de:	cf 91       	pop	r28
     9e0:	1f 91       	pop	r17
     9e2:	0f 91       	pop	r16
     9e4:	ff 90       	pop	r15
     9e6:	ef 90       	pop	r14
     9e8:	df 90       	pop	r13
     9ea:	cf 90       	pop	r12
     9ec:	0c 94 a6 09 	jmp	0x134c	; 0x134c <Print::println()>

000009f0 <printStack(int)>:
     9f0:	ef 92       	push	r14
     9f2:	ff 92       	push	r15
     9f4:	0f 93       	push	r16
     9f6:	1f 93       	push	r17
     9f8:	cf 93       	push	r28
     9fa:	df 93       	push	r29
     9fc:	ec 01       	movw	r28, r24
     9fe:	6f e7       	ldi	r22, 0x7F	; 127
     a00:	71 e0       	ldi	r23, 0x01	; 1
     a02:	8d e1       	ldi	r24, 0x1D	; 29
     a04:	93 e0       	ldi	r25, 0x03	; 3
     a06:	0e 94 aa 09 	call	0x1354	; 0x1354 <Print::println(char const*)>
     a0a:	66 e8       	ldi	r22, 0x86	; 134
     a0c:	71 e0       	ldi	r23, 0x01	; 1
     a0e:	8d e1       	ldi	r24, 0x1D	; 29
     a10:	93 e0       	ldi	r25, 0x03	; 3
     a12:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     a16:	40 e1       	ldi	r20, 0x10	; 16
     a18:	50 e0       	ldi	r21, 0x00	; 0
     a1a:	be 01       	movw	r22, r28
     a1c:	8d e1       	ldi	r24, 0x1D	; 29
     a1e:	93 e0       	ldi	r25, 0x03	; 3
     a20:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <Print::print(int, int)>
     a24:	6a e4       	ldi	r22, 0x4A	; 74
     a26:	71 e0       	ldi	r23, 0x01	; 1
     a28:	8d e1       	ldi	r24, 0x1D	; 29
     a2a:	93 e0       	ldi	r25, 0x03	; 3
     a2c:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     a30:	00 e0       	ldi	r16, 0x00	; 0
     a32:	10 e0       	ldi	r17, 0x00	; 0
     a34:	c1 15       	cp	r28, r1
     a36:	fb e0       	ldi	r31, 0x0B	; 11
     a38:	df 07       	cpc	r29, r31
     a3a:	0c f0       	brlt	.+2      	; 0xa3e <printStack(int)+0x4e>
     a3c:	63 c0       	rjmp	.+198    	; 0xb04 <__stack+0x5>
     a3e:	c8 01       	movw	r24, r16
     a40:	8f 70       	andi	r24, 0x0F	; 15
     a42:	99 27       	eor	r25, r25
     a44:	89 2b       	or	r24, r25
     a46:	b9 f5       	brne	.+110    	; 0xab6 <printStack(int)+0xc6>
     a48:	01 15       	cp	r16, r1
     a4a:	11 05       	cpc	r17, r1
     a4c:	a1 f1       	breq	.+104    	; 0xab6 <printStack(int)+0xc6>
     a4e:	6a e4       	ldi	r22, 0x4A	; 74
     a50:	71 e0       	ldi	r23, 0x01	; 1
     a52:	8d e1       	ldi	r24, 0x1D	; 29
     a54:	93 e0       	ldi	r25, 0x03	; 3
     a56:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     a5a:	7e 01       	movw	r14, r28
     a5c:	80 e1       	ldi	r24, 0x10	; 16
     a5e:	e8 1a       	sub	r14, r24
     a60:	f1 08       	sbc	r15, r1
     a62:	ec 16       	cp	r14, r28
     a64:	fd 06       	cpc	r15, r29
     a66:	99 f0       	breq	.+38     	; 0xa8e <printStack(int)+0x9e>
     a68:	f7 01       	movw	r30, r14
     a6a:	61 91       	ld	r22, Z+
     a6c:	7f 01       	movw	r14, r30
     a6e:	80 ee       	ldi	r24, 0xE0	; 224
     a70:	86 0f       	add	r24, r22
     a72:	8f 35       	cpi	r24, 0x5F	; 95
     a74:	38 f0       	brcs	.+14     	; 0xa84 <printStack(int)+0x94>
     a76:	67 e2       	ldi	r22, 0x27	; 39
     a78:	71 e0       	ldi	r23, 0x01	; 1
     a7a:	8d e1       	ldi	r24, 0x1D	; 29
     a7c:	93 e0       	ldi	r25, 0x03	; 3
     a7e:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     a82:	ef cf       	rjmp	.-34     	; 0xa62 <printStack(int)+0x72>
     a84:	8d e1       	ldi	r24, 0x1D	; 29
     a86:	93 e0       	ldi	r25, 0x03	; 3
     a88:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     a8c:	ea cf       	rjmp	.-44     	; 0xa62 <printStack(int)+0x72>
     a8e:	8d e1       	ldi	r24, 0x1D	; 29
     a90:	93 e0       	ldi	r25, 0x03	; 3
     a92:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
     a96:	66 e8       	ldi	r22, 0x86	; 134
     a98:	71 e0       	ldi	r23, 0x01	; 1
     a9a:	8d e1       	ldi	r24, 0x1D	; 29
     a9c:	93 e0       	ldi	r25, 0x03	; 3
     a9e:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     aa2:	40 e1       	ldi	r20, 0x10	; 16
     aa4:	50 e0       	ldi	r21, 0x00	; 0
     aa6:	be 01       	movw	r22, r28
     aa8:	8d e1       	ldi	r24, 0x1D	; 29
     aaa:	93 e0       	ldi	r25, 0x03	; 3
     aac:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <Print::print(int, int)>
     ab0:	6a e4       	ldi	r22, 0x4A	; 74
     ab2:	71 e0       	ldi	r23, 0x01	; 1
     ab4:	0a c0       	rjmp	.+20     	; 0xaca <printStack(int)+0xda>
     ab6:	c8 01       	movw	r24, r16
     ab8:	87 70       	andi	r24, 0x07	; 7
     aba:	99 27       	eor	r25, r25
     abc:	89 2b       	or	r24, r25
     abe:	49 f4       	brne	.+18     	; 0xad2 <printStack(int)+0xe2>
     ac0:	01 15       	cp	r16, r1
     ac2:	11 05       	cpc	r17, r1
     ac4:	31 f0       	breq	.+12     	; 0xad2 <printStack(int)+0xe2>
     ac6:	6d e4       	ldi	r22, 0x4D	; 77
     ac8:	71 e0       	ldi	r23, 0x01	; 1
     aca:	8d e1       	ldi	r24, 0x1D	; 29
     acc:	93 e0       	ldi	r25, 0x03	; 3
     ace:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     ad2:	88 81       	ld	r24, Y
     ad4:	80 31       	cpi	r24, 0x10	; 16
     ad6:	30 f4       	brcc	.+12     	; 0xae4 <printStack(int)+0xf4>
     ad8:	6d e7       	ldi	r22, 0x7D	; 125
     ada:	71 e0       	ldi	r23, 0x01	; 1
     adc:	8d e1       	ldi	r24, 0x1D	; 29
     ade:	93 e0       	ldi	r25, 0x03	; 3
     ae0:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     ae4:	40 e1       	ldi	r20, 0x10	; 16
     ae6:	50 e0       	ldi	r21, 0x00	; 0
     ae8:	69 91       	ld	r22, Y+
     aea:	8d e1       	ldi	r24, 0x1D	; 29
     aec:	93 e0       	ldi	r25, 0x03	; 3
     aee:	0e 94 9e 0a 	call	0x153c	; 0x153c <Print::print(unsigned char, int)>
     af2:	6e e4       	ldi	r22, 0x4E	; 78
     af4:	71 e0       	ldi	r23, 0x01	; 1
     af6:	8d e1       	ldi	r24, 0x1D	; 29
     af8:	93 e0       	ldi	r25, 0x03	; 3
     afa:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     afe:	0f 5f       	subi	r16, 0xFF	; 255
     b00:	1f 4f       	sbci	r17, 0xFF	; 255
     b02:	98 cf       	rjmp	.-208    	; 0xa34 <printStack(int)+0x44>
     b04:	c0 e0       	ldi	r28, 0x00	; 0
     b06:	d0 e0       	ldi	r29, 0x00	; 0
     b08:	7e 01       	movw	r14, r28
     b0a:	e0 0e       	add	r14, r16
     b0c:	f1 1e       	adc	r15, r17
     b0e:	c7 01       	movw	r24, r14
     b10:	8f 70       	andi	r24, 0x0F	; 15
     b12:	99 27       	eor	r25, r25
     b14:	89 2b       	or	r24, r25
     b16:	99 f0       	breq	.+38     	; 0xb3e <__stack+0x3f>
     b18:	6c e4       	ldi	r22, 0x4C	; 76
     b1a:	71 e0       	ldi	r23, 0x01	; 1
     b1c:	8d e1       	ldi	r24, 0x1D	; 29
     b1e:	93 e0       	ldi	r25, 0x03	; 3
     b20:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     b24:	87 e0       	ldi	r24, 0x07	; 7
     b26:	e8 22       	and	r14, r24
     b28:	ff 24       	eor	r15, r15
     b2a:	ef 28       	or	r14, r15
     b2c:	31 f4       	brne	.+12     	; 0xb3a <__stack+0x3b>
     b2e:	6d e4       	ldi	r22, 0x4D	; 77
     b30:	71 e0       	ldi	r23, 0x01	; 1
     b32:	8d e1       	ldi	r24, 0x1D	; 29
     b34:	93 e0       	ldi	r25, 0x03	; 3
     b36:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     b3a:	21 96       	adiw	r28, 0x01	; 1
     b3c:	e5 cf       	rjmp	.-54     	; 0xb08 <__stack+0x9>
     b3e:	6a e4       	ldi	r22, 0x4A	; 74
     b40:	71 e0       	ldi	r23, 0x01	; 1
     b42:	8d e1       	ldi	r24, 0x1D	; 29
     b44:	93 e0       	ldi	r25, 0x03	; 3
     b46:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     b4a:	c1 51       	subi	r28, 0x11	; 17
     b4c:	d5 4f       	sbci	r29, 0xF5	; 245
     b4e:	cf 3f       	cpi	r28, 0xFF	; 255
     b50:	ea e0       	ldi	r30, 0x0A	; 10
     b52:	de 07       	cpc	r29, r30
     b54:	8c f4       	brge	.+34     	; 0xb78 <__stack+0x79>
     b56:	69 91       	ld	r22, Y+
     b58:	80 ee       	ldi	r24, 0xE0	; 224
     b5a:	86 0f       	add	r24, r22
     b5c:	8f 35       	cpi	r24, 0x5F	; 95
     b5e:	38 f0       	brcs	.+14     	; 0xb6e <__stack+0x6f>
     b60:	67 e2       	ldi	r22, 0x27	; 39
     b62:	71 e0       	ldi	r23, 0x01	; 1
     b64:	8d e1       	ldi	r24, 0x1D	; 29
     b66:	93 e0       	ldi	r25, 0x03	; 3
     b68:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     b6c:	f0 cf       	rjmp	.-32     	; 0xb4e <__stack+0x4f>
     b6e:	8d e1       	ldi	r24, 0x1D	; 29
     b70:	93 e0       	ldi	r25, 0x03	; 3
     b72:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     b76:	eb cf       	rjmp	.-42     	; 0xb4e <__stack+0x4f>
     b78:	8d e1       	ldi	r24, 0x1D	; 29
     b7a:	93 e0       	ldi	r25, 0x03	; 3
     b7c:	df 91       	pop	r29
     b7e:	cf 91       	pop	r28
     b80:	1f 91       	pop	r17
     b82:	0f 91       	pop	r16
     b84:	ff 90       	pop	r15
     b86:	ef 90       	pop	r14
     b88:	0c 94 a6 09 	jmp	0x134c	; 0x134c <Print::println()>

00000b8c <_GLOBAL__sub_I_p>:
     b8c:	10 92 cb 02 	sts	0x02CB, r1
     b90:	10 92 ca 02 	sts	0x02CA, r1
     b94:	88 ee       	ldi	r24, 0xE8	; 232
     b96:	93 e0       	ldi	r25, 0x03	; 3
     b98:	a0 e0       	ldi	r26, 0x00	; 0
     b9a:	b0 e0       	ldi	r27, 0x00	; 0
     b9c:	80 93 cc 02 	sts	0x02CC, r24
     ba0:	90 93 cd 02 	sts	0x02CD, r25
     ba4:	a0 93 ce 02 	sts	0x02CE, r26
     ba8:	b0 93 cf 02 	sts	0x02CF, r27
     bac:	8e ea       	ldi	r24, 0xAE	; 174
     bae:	92 e0       	ldi	r25, 0x02	; 2
     bb0:	90 93 c9 02 	sts	0x02C9, r25
     bb4:	80 93 c8 02 	sts	0x02C8, r24
     bb8:	86 e7       	ldi	r24, 0x76	; 118
     bba:	93 e0       	ldi	r25, 0x03	; 3
     bbc:	90 93 d5 02 	sts	0x02D5, r25
     bc0:	80 93 d4 02 	sts	0x02D4, r24
     bc4:	10 92 da 02 	sts	0x02DA, r1
     bc8:	10 92 db 02 	sts	0x02DB, r1
     bcc:	10 92 dc 02 	sts	0x02DC, r1
     bd0:	08 95       	ret

00000bd2 <_GLOBAL__sub_D_p>:
     bd2:	88 ec       	ldi	r24, 0xC8	; 200
     bd4:	92 e0       	ldi	r25, 0x02	; 2
     bd6:	0c 94 11 14 	jmp	0x2822	; 0x2822 <Process::~Process()>

00000bda <vulnerable_func()>:
     bda:	0f 93       	push	r16
     bdc:	1f 93       	push	r17
     bde:	cf 93       	push	r28
     be0:	df 93       	push	r29
     be2:	cd b7       	in	r28, 0x3d	; 61
     be4:	de b7       	in	r29, 0x3e	; 62
     be6:	64 97       	sbiw	r28, 0x14	; 20
     be8:	0f b6       	in	r0, 0x3f	; 63
     bea:	f8 94       	cli
     bec:	de bf       	out	0x3e, r29	; 62
     bee:	0f be       	out	0x3f, r0	; 63
     bf0:	cd bf       	out	0x3d, r28	; 61
     bf2:	8d b7       	in	r24, 0x3d	; 61
     bf4:	9e b7       	in	r25, 0x3e	; 62
     bf6:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <printStack(int)>
     bfa:	8d e1       	ldi	r24, 0x1D	; 29
     bfc:	93 e0       	ldi	r25, 0x03	; 3
     bfe:	0e 94 30 07 	call	0xe60	; 0xe60 <Serial_::available()>
     c02:	89 2b       	or	r24, r25
     c04:	d1 f3       	breq	.-12     	; 0xbfa <vulnerable_func()+0x20>
     c06:	00 e0       	ldi	r16, 0x00	; 0
     c08:	10 e0       	ldi	r17, 0x00	; 0
     c0a:	8d e1       	ldi	r24, 0x1D	; 29
     c0c:	93 e0       	ldi	r25, 0x03	; 3
     c0e:	0e 94 30 07 	call	0xe60	; 0xe60 <Serial_::available()>
     c12:	89 2b       	or	r24, r25
     c14:	71 f0       	breq	.+28     	; 0xc32 <vulnerable_func()+0x58>
     c16:	8d e1       	ldi	r24, 0x1D	; 29
     c18:	93 e0       	ldi	r25, 0x03	; 3
     c1a:	0e 94 40 07 	call	0xe80	; 0xe80 <Serial_::read()>
     c1e:	e1 e0       	ldi	r30, 0x01	; 1
     c20:	f0 e0       	ldi	r31, 0x00	; 0
     c22:	ec 0f       	add	r30, r28
     c24:	fd 1f       	adc	r31, r29
     c26:	e0 0f       	add	r30, r16
     c28:	f1 1f       	adc	r31, r17
     c2a:	80 83       	st	Z, r24
     c2c:	0f 5f       	subi	r16, 0xFF	; 255
     c2e:	1f 4f       	sbci	r17, 0xFF	; 255
     c30:	ec cf       	rjmp	.-40     	; 0xc0a <vulnerable_func()+0x30>
     c32:	8d b7       	in	r24, 0x3d	; 61
     c34:	9e b7       	in	r25, 0x3e	; 62
     c36:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <printStack(int)>
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	64 96       	adiw	r28, 0x14	; 20
     c40:	0f b6       	in	r0, 0x3f	; 63
     c42:	f8 94       	cli
     c44:	de bf       	out	0x3e, r29	; 62
     c46:	0f be       	out	0x3f, r0	; 63
     c48:	cd bf       	out	0x3d, r28	; 61
     c4a:	df 91       	pop	r29
     c4c:	cf 91       	pop	r28
     c4e:	1f 91       	pop	r17
     c50:	0f 91       	pop	r16
     c52:	08 95       	ret

00000c54 <showOutputProcess()>:
     c54:	88 ec       	ldi	r24, 0xC8	; 200
     c56:	92 e0       	ldi	r25, 0x02	; 2
     c58:	0e 94 94 13 	call	0x2728	; 0x2728 <Process::running()>
     c5c:	81 11       	cpse	r24, r1
     c5e:	fa cf       	rjmp	.-12     	; 0xc54 <showOutputProcess()>
     c60:	8d e1       	ldi	r24, 0x1D	; 29
     c62:	93 e0       	ldi	r25, 0x03	; 3
     c64:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
     c68:	88 ec       	ldi	r24, 0xC8	; 200
     c6a:	92 e0       	ldi	r25, 0x02	; 2
     c6c:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <Process::available()>
     c70:	18 16       	cp	r1, r24
     c72:	19 06       	cpc	r1, r25
     c74:	54 f4       	brge	.+20     	; 0xc8a <showOutputProcess()+0x36>
     c76:	88 ec       	ldi	r24, 0xC8	; 200
     c78:	92 e0       	ldi	r25, 0x02	; 2
     c7a:	0e 94 f3 12 	call	0x25e6	; 0x25e6 <Process::read()>
     c7e:	68 2f       	mov	r22, r24
     c80:	8d e1       	ldi	r24, 0x1D	; 29
     c82:	93 e0       	ldi	r25, 0x03	; 3
     c84:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
     c88:	ef cf       	rjmp	.-34     	; 0xc68 <showOutputProcess()+0x14>
     c8a:	8d e1       	ldi	r24, 0x1D	; 29
     c8c:	93 e0       	ldi	r25, 0x03	; 3
     c8e:	0c 94 2d 07 	jmp	0xe5a	; 0xe5a <Serial_::flush()>

00000c92 <processCommand()>:
     c92:	cf 93       	push	r28
     c94:	df 93       	push	r29
     c96:	00 d0       	rcall	.+0      	; 0xc98 <processCommand()+0x6>
     c98:	00 d0       	rcall	.+0      	; 0xc9a <processCommand()+0x8>
     c9a:	00 d0       	rcall	.+0      	; 0xc9c <processCommand()+0xa>
     c9c:	cd b7       	in	r28, 0x3d	; 61
     c9e:	de b7       	in	r29, 0x3e	; 62
     ca0:	69 e8       	ldi	r22, 0x89	; 137
     ca2:	71 e0       	ldi	r23, 0x01	; 1
     ca4:	ce 01       	movw	r24, r28
     ca6:	01 96       	adiw	r24, 0x01	; 1
     ca8:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <String::String(char const*)>
     cac:	be 01       	movw	r22, r28
     cae:	6f 5f       	subi	r22, 0xFF	; 255
     cb0:	7f 4f       	sbci	r23, 0xFF	; 255
     cb2:	88 ec       	ldi	r24, 0xC8	; 200
     cb4:	92 e0       	ldi	r25, 0x02	; 2
     cb6:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <Process::runShellCommand(String const&)>
     cba:	ce 01       	movw	r24, r28
     cbc:	01 96       	adiw	r24, 0x01	; 1
     cbe:	0e 94 5f 0e 	call	0x1cbe	; 0x1cbe <String::~String()>
     cc2:	0e 94 2a 06 	call	0xc54	; 0xc54 <showOutputProcess()>
     cc6:	26 96       	adiw	r28, 0x06	; 6
     cc8:	0f b6       	in	r0, 0x3f	; 63
     cca:	f8 94       	cli
     ccc:	de bf       	out	0x3e, r29	; 62
     cce:	0f be       	out	0x3f, r0	; 63
     cd0:	cd bf       	out	0x3d, r28	; 61
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	08 95       	ret

00000cd8 <loop>:
     cd8:	cf 93       	push	r28
     cda:	df 93       	push	r29
     cdc:	62 e9       	ldi	r22, 0x92	; 146
     cde:	71 e0       	ldi	r23, 0x01	; 1
     ce0:	8d e1       	ldi	r24, 0x1D	; 29
     ce2:	93 e0       	ldi	r25, 0x03	; 3
     ce4:	0e 94 aa 09 	call	0x1354	; 0x1354 <Print::println(char const*)>
     ce8:	64 ea       	ldi	r22, 0xA4	; 164
     cea:	71 e0       	ldi	r23, 0x01	; 1
     cec:	8d e1       	ldi	r24, 0x1D	; 29
     cee:	93 e0       	ldi	r25, 0x03	; 3
     cf0:	0e 94 aa 09 	call	0x1354	; 0x1354 <Print::println(char const*)>
     cf4:	61 eb       	ldi	r22, 0xB1	; 177
     cf6:	71 e0       	ldi	r23, 0x01	; 1
     cf8:	8d e1       	ldi	r24, 0x1D	; 29
     cfa:	93 e0       	ldi	r25, 0x03	; 3
     cfc:	0e 94 aa 09 	call	0x1354	; 0x1354 <Print::println(char const*)>
     d00:	6f eb       	ldi	r22, 0xBF	; 191
     d02:	71 e0       	ldi	r23, 0x01	; 1
     d04:	8d e1       	ldi	r24, 0x1D	; 29
     d06:	93 e0       	ldi	r25, 0x03	; 3
     d08:	0e 94 aa 09 	call	0x1354	; 0x1354 <Print::println(char const*)>
     d0c:	6e ec       	ldi	r22, 0xCE	; 206
     d0e:	71 e0       	ldi	r23, 0x01	; 1
     d10:	8d e1       	ldi	r24, 0x1D	; 29
     d12:	93 e0       	ldi	r25, 0x03	; 3
     d14:	0e 94 aa 09 	call	0x1354	; 0x1354 <Print::println(char const*)>
     d18:	69 ee       	ldi	r22, 0xE9	; 233
     d1a:	71 e0       	ldi	r23, 0x01	; 1
     d1c:	8d e1       	ldi	r24, 0x1D	; 29
     d1e:	93 e0       	ldi	r25, 0x03	; 3
     d20:	0e 94 aa 09 	call	0x1354	; 0x1354 <Print::println(char const*)>
     d24:	6b ef       	ldi	r22, 0xFB	; 251
     d26:	71 e0       	ldi	r23, 0x01	; 1
     d28:	8d e1       	ldi	r24, 0x1D	; 29
     d2a:	93 e0       	ldi	r25, 0x03	; 3
     d2c:	0e 94 aa 09 	call	0x1354	; 0x1354 <Print::println(char const*)>
     d30:	8d e1       	ldi	r24, 0x1D	; 29
     d32:	93 e0       	ldi	r25, 0x03	; 3
     d34:	0e 94 30 07 	call	0xe60	; 0xe60 <Serial_::available()>
     d38:	89 2b       	or	r24, r25
     d3a:	d1 f3       	breq	.-12     	; 0xd30 <loop+0x58>
     d3c:	8d e1       	ldi	r24, 0x1D	; 29
     d3e:	93 e0       	ldi	r25, 0x03	; 3
     d40:	0e 94 40 07 	call	0xe80	; 0xe80 <Serial_::read()>
     d44:	c8 2f       	mov	r28, r24
     d46:	8d e1       	ldi	r24, 0x1D	; 29
     d48:	93 e0       	ldi	r25, 0x03	; 3
     d4a:	0e 94 40 07 	call	0xe80	; 0xe80 <Serial_::read()>
     d4e:	c1 33       	cpi	r28, 0x31	; 49
     d50:	41 f4       	brne	.+16     	; 0xd62 <loop+0x8a>
     d52:	60 e0       	ldi	r22, 0x00	; 0
     d54:	70 e0       	ldi	r23, 0x00	; 0
     d56:	80 e0       	ldi	r24, 0x00	; 0
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	df 91       	pop	r29
     d5c:	cf 91       	pop	r28
     d5e:	0c 94 13 04 	jmp	0x826	; 0x826 <printSRAM(unsigned char*, unsigned char*)>
     d62:	c2 33       	cpi	r28, 0x32	; 50
     d64:	41 f4       	brne	.+16     	; 0xd76 <loop+0x9e>
     d66:	60 e0       	ldi	r22, 0x00	; 0
     d68:	70 e0       	ldi	r23, 0x00	; 0
     d6a:	80 e0       	ldi	r24, 0x00	; 0
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	df 91       	pop	r29
     d70:	cf 91       	pop	r28
     d72:	0c 94 b5 02 	jmp	0x56a	; 0x56a <printFlashMemory(unsigned char*, unsigned char*)>
     d76:	c3 33       	cpi	r28, 0x33	; 51
     d78:	21 f4       	brne	.+8      	; 0xd82 <loop+0xaa>
     d7a:	df 91       	pop	r29
     d7c:	cf 91       	pop	r28
     d7e:	0c 94 6f 01 	jmp	0x2de	; 0x2de <printEEPROM()>
     d82:	c5 33       	cpi	r28, 0x35	; 53
     d84:	91 f4       	brne	.+36     	; 0xdaa <loop+0xd2>
     d86:	6f e0       	ldi	r22, 0x0F	; 15
     d88:	72 e0       	ldi	r23, 0x02	; 2
     d8a:	8d e1       	ldi	r24, 0x1D	; 29
     d8c:	93 e0       	ldi	r25, 0x03	; 3
     d8e:	0e 94 aa 09 	call	0x1354	; 0x1354 <Print::println(char const*)>
     d92:	28 e0       	ldi	r18, 0x08	; 8
     d94:	88 e1       	ldi	r24, 0x18	; 24
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	0f b6       	in	r0, 0x3f	; 63
     d9a:	f8 94       	cli
     d9c:	a8 95       	wdr
     d9e:	80 93 60 00 	sts	0x0060, r24
     da2:	0f be       	out	0x3f, r0	; 63
     da4:	20 93 60 00 	sts	0x0060, r18
     da8:	ff cf       	rjmp	.-2      	; 0xda8 <loop+0xd0>
     daa:	c4 33       	cpi	r28, 0x34	; 52
     dac:	e1 f4       	brne	.+56     	; 0xde6 <loop+0x10e>
     dae:	64 e2       	ldi	r22, 0x24	; 36
     db0:	72 e0       	ldi	r23, 0x02	; 2
     db2:	8d e1       	ldi	r24, 0x1D	; 29
     db4:	93 e0       	ldi	r25, 0x03	; 3
     db6:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     dba:	0e 94 ed 05 	call	0xbda	; 0xbda <vulnerable_func()>
     dbe:	ec 01       	movw	r28, r24
     dc0:	63 e4       	ldi	r22, 0x43	; 67
     dc2:	72 e0       	ldi	r23, 0x02	; 2
     dc4:	8d e1       	ldi	r24, 0x1D	; 29
     dc6:	93 e0       	ldi	r25, 0x03	; 3
     dc8:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     dcc:	d7 fd       	sbrc	r29, 7
     dce:	03 c0       	rjmp	.+6      	; 0xdd6 <loop+0xfe>
     dd0:	68 e5       	ldi	r22, 0x58	; 88
     dd2:	72 e0       	ldi	r23, 0x02	; 2
     dd4:	02 c0       	rjmp	.+4      	; 0xdda <loop+0x102>
     dd6:	6b e5       	ldi	r22, 0x5B	; 91
     dd8:	72 e0       	ldi	r23, 0x02	; 2
     dda:	8d e1       	ldi	r24, 0x1D	; 29
     ddc:	93 e0       	ldi	r25, 0x03	; 3
     dde:	df 91       	pop	r29
     de0:	cf 91       	pop	r28
     de2:	0c 94 aa 09 	jmp	0x1354	; 0x1354 <Print::println(char const*)>
     de6:	c6 33       	cpi	r28, 0x36	; 54
     de8:	21 f4       	brne	.+8      	; 0xdf2 <loop+0x11a>
     dea:	df 91       	pop	r29
     dec:	cf 91       	pop	r28
     dee:	0c 94 49 06 	jmp	0xc92	; 0xc92 <processCommand()>
     df2:	6e e5       	ldi	r22, 0x5E	; 94
     df4:	72 e0       	ldi	r23, 0x02	; 2
     df6:	8d e1       	ldi	r24, 0x1D	; 29
     df8:	93 e0       	ldi	r25, 0x03	; 3
     dfa:	0e 94 9d 09 	call	0x133a	; 0x133a <Print::print(char const*)>
     dfe:	6c 2f       	mov	r22, r28
     e00:	8d e1       	ldi	r24, 0x1D	; 29
     e02:	93 e0       	ldi	r25, 0x03	; 3
     e04:	df 91       	pop	r29
     e06:	cf 91       	pop	r28
     e08:	0c 94 bc 09 	jmp	0x1378	; 0x1378 <Print::println(char)>

00000e0c <Serial_::write(unsigned char)>:
     e0c:	cf 93       	push	r28
     e0e:	df 93       	push	r29
     e10:	1f 92       	push	r1
     e12:	cd b7       	in	r28, 0x3d	; 61
     e14:	de b7       	in	r29, 0x3e	; 62
     e16:	69 83       	std	Y+1, r22	; 0x01
     e18:	dc 01       	movw	r26, r24
     e1a:	ed 91       	ld	r30, X+
     e1c:	fc 91       	ld	r31, X
     e1e:	02 80       	ldd	r0, Z+2	; 0x02
     e20:	f3 81       	ldd	r31, Z+3	; 0x03
     e22:	e0 2d       	mov	r30, r0
     e24:	41 e0       	ldi	r20, 0x01	; 1
     e26:	50 e0       	ldi	r21, 0x00	; 0
     e28:	be 01       	movw	r22, r28
     e2a:	6f 5f       	subi	r22, 0xFF	; 255
     e2c:	7f 4f       	sbci	r23, 0xFF	; 255
     e2e:	09 95       	icall
     e30:	0f 90       	pop	r0
     e32:	df 91       	pop	r29
     e34:	cf 91       	pop	r28
     e36:	08 95       	ret

00000e38 <Serial_::peek()>:
     e38:	cf 93       	push	r28
     e3a:	df 93       	push	r29
     e3c:	ec 01       	movw	r28, r24
     e3e:	8c 85       	ldd	r24, Y+12	; 0x0c
     e40:	9d 85       	ldd	r25, Y+13	; 0x0d
     e42:	97 ff       	sbrs	r25, 7
     e44:	05 c0       	rjmp	.+10     	; 0xe50 <Serial_::peek()+0x18>
     e46:	82 e0       	ldi	r24, 0x02	; 2
     e48:	0e 94 8c 0b 	call	0x1718	; 0x1718 <USB_Recv(unsigned char)>
     e4c:	9d 87       	std	Y+13, r25	; 0x0d
     e4e:	8c 87       	std	Y+12, r24	; 0x0c
     e50:	8c 85       	ldd	r24, Y+12	; 0x0c
     e52:	9d 85       	ldd	r25, Y+13	; 0x0d
     e54:	df 91       	pop	r29
     e56:	cf 91       	pop	r28
     e58:	08 95       	ret

00000e5a <Serial_::flush()>:
     e5a:	83 e0       	ldi	r24, 0x03	; 3
     e5c:	0c 94 e1 0d 	jmp	0x1bc2	; 0x1bc2 <USB_Flush(unsigned char)>

00000e60 <Serial_::available()>:
     e60:	fc 01       	movw	r30, r24
     e62:	84 85       	ldd	r24, Z+12	; 0x0c
     e64:	95 85       	ldd	r25, Z+13	; 0x0d
     e66:	97 fd       	sbrc	r25, 7
     e68:	06 c0       	rjmp	.+12     	; 0xe76 <Serial_::available()+0x16>
     e6a:	82 e0       	ldi	r24, 0x02	; 2
     e6c:	0e 94 34 0b 	call	0x1668	; 0x1668 <USB_Available(unsigned char)>
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	01 96       	adiw	r24, 0x01	; 1
     e74:	08 95       	ret
     e76:	82 e0       	ldi	r24, 0x02	; 2
     e78:	0e 94 34 0b 	call	0x1668	; 0x1668 <USB_Available(unsigned char)>
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	08 95       	ret

00000e80 <Serial_::read()>:
     e80:	fc 01       	movw	r30, r24
     e82:	84 85       	ldd	r24, Z+12	; 0x0c
     e84:	95 85       	ldd	r25, Z+13	; 0x0d
     e86:	97 fd       	sbrc	r25, 7
     e88:	05 c0       	rjmp	.+10     	; 0xe94 <Serial_::read()+0x14>
     e8a:	2f ef       	ldi	r18, 0xFF	; 255
     e8c:	3f ef       	ldi	r19, 0xFF	; 255
     e8e:	35 87       	std	Z+13, r19	; 0x0d
     e90:	24 87       	std	Z+12, r18	; 0x0c
     e92:	08 95       	ret
     e94:	82 e0       	ldi	r24, 0x02	; 2
     e96:	0c 94 8c 0b 	jmp	0x1718	; 0x1718 <USB_Recv(unsigned char)>

00000e9a <Serial_::write(unsigned char const*, unsigned int)>:
     e9a:	cf 93       	push	r28
     e9c:	df 93       	push	r29
     e9e:	ec 01       	movw	r28, r24
     ea0:	80 91 0d 01 	lds	r24, 0x010D
     ea4:	88 23       	and	r24, r24
     ea6:	31 f0       	breq	.+12     	; 0xeb4 <Serial_::write(unsigned char const*, unsigned int)+0x1a>
     ea8:	83 e0       	ldi	r24, 0x03	; 3
     eaa:	0e 94 bd 0b 	call	0x177a	; 0x177a <USB_Send(unsigned char, void const*, int)>
     eae:	18 16       	cp	r1, r24
     eb0:	19 06       	cpc	r1, r25
     eb2:	34 f0       	brlt	.+12     	; 0xec0 <Serial_::write(unsigned char const*, unsigned int)+0x26>
     eb4:	81 e0       	ldi	r24, 0x01	; 1
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	9b 83       	std	Y+3, r25	; 0x03
     eba:	8a 83       	std	Y+2, r24	; 0x02
     ebc:	80 e0       	ldi	r24, 0x00	; 0
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	df 91       	pop	r29
     ec2:	cf 91       	pop	r28
     ec4:	08 95       	ret

00000ec6 <CDC_GetInterface(unsigned char*)>:
     ec6:	fc 01       	movw	r30, r24
     ec8:	20 81       	ld	r18, Z
     eca:	2e 5f       	subi	r18, 0xFE	; 254
     ecc:	20 83       	st	Z, r18
     ece:	42 e4       	ldi	r20, 0x42	; 66
     ed0:	50 e0       	ldi	r21, 0x00	; 0
     ed2:	6c ea       	ldi	r22, 0xAC	; 172
     ed4:	70 e0       	ldi	r23, 0x00	; 0
     ed6:	80 e8       	ldi	r24, 0x80	; 128
     ed8:	0c 94 58 0c 	jmp	0x18b0	; 0x18b0 <USB_SendControl(unsigned char, void const*, int)>

00000edc <CDC_Setup(Setup&)>:
     edc:	fc 01       	movw	r30, r24
     ede:	81 81       	ldd	r24, Z+1	; 0x01
     ee0:	90 81       	ld	r25, Z
     ee2:	91 3a       	cpi	r25, 0xA1	; 161
     ee4:	59 f4       	brne	.+22     	; 0xefc <CDC_Setup(Setup&)+0x20>
     ee6:	81 32       	cpi	r24, 0x21	; 33
     ee8:	09 f0       	breq	.+2      	; 0xeec <CDC_Setup(Setup&)+0x10>
     eea:	3c c0       	rjmp	.+120    	; 0xf64 <CDC_Setup(Setup&)+0x88>
     eec:	47 e0       	ldi	r20, 0x07	; 7
     eee:	50 e0       	ldi	r21, 0x00	; 0
     ef0:	66 e0       	ldi	r22, 0x06	; 6
     ef2:	71 e0       	ldi	r23, 0x01	; 1
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <USB_SendControl(unsigned char, void const*, int)>
     efa:	43 c0       	rjmp	.+134    	; 0xf82 <CDC_Setup(Setup&)+0xa6>
     efc:	91 32       	cpi	r25, 0x21	; 33
     efe:	91 f5       	brne	.+100    	; 0xf64 <CDC_Setup(Setup&)+0x88>
     f00:	80 32       	cpi	r24, 0x20	; 32
     f02:	39 f4       	brne	.+14     	; 0xf12 <CDC_Setup(Setup&)+0x36>
     f04:	67 e0       	ldi	r22, 0x07	; 7
     f06:	70 e0       	ldi	r23, 0x00	; 0
     f08:	86 e0       	ldi	r24, 0x06	; 6
     f0a:	91 e0       	ldi	r25, 0x01	; 1
     f0c:	0e 94 89 0c 	call	0x1912	; 0x1912 <USB_RecvControl(void*, int)>
     f10:	06 c0       	rjmp	.+12     	; 0xf1e <CDC_Setup(Setup&)+0x42>
     f12:	82 32       	cpi	r24, 0x22	; 34
     f14:	09 f0       	breq	.+2      	; 0xf18 <CDC_Setup(Setup&)+0x3c>
     f16:	35 c0       	rjmp	.+106    	; 0xf82 <CDC_Setup(Setup&)+0xa6>
     f18:	82 81       	ldd	r24, Z+2	; 0x02
     f1a:	80 93 0d 01 	sts	0x010D, r24
     f1e:	80 91 06 01 	lds	r24, 0x0106
     f22:	90 91 07 01 	lds	r25, 0x0107
     f26:	a0 91 08 01 	lds	r26, 0x0108
     f2a:	b0 91 09 01 	lds	r27, 0x0109
     f2e:	80 3b       	cpi	r24, 0xB0	; 176
     f30:	94 40       	sbci	r25, 0x04	; 4
     f32:	a1 05       	cpc	r26, r1
     f34:	b1 05       	cpc	r27, r1
     f36:	c1 f4       	brne	.+48     	; 0xf68 <CDC_Setup(Setup&)+0x8c>
     f38:	80 91 0d 01 	lds	r24, 0x010D
     f3c:	80 fd       	sbrc	r24, 0
     f3e:	14 c0       	rjmp	.+40     	; 0xf68 <CDC_Setup(Setup&)+0x8c>
     f40:	87 e7       	ldi	r24, 0x77	; 119
     f42:	97 e7       	ldi	r25, 0x77	; 119
     f44:	90 93 01 08 	sts	0x0801, r25
     f48:	80 93 00 08 	sts	0x0800, r24
     f4c:	2b e0       	ldi	r18, 0x0B	; 11
     f4e:	88 e1       	ldi	r24, 0x18	; 24
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	0f b6       	in	r0, 0x3f	; 63
     f54:	f8 94       	cli
     f56:	a8 95       	wdr
     f58:	80 93 60 00 	sts	0x0060, r24
     f5c:	0f be       	out	0x3f, r0	; 63
     f5e:	20 93 60 00 	sts	0x0060, r18
     f62:	0f c0       	rjmp	.+30     	; 0xf82 <CDC_Setup(Setup&)+0xa6>
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	08 95       	ret
     f68:	88 e1       	ldi	r24, 0x18	; 24
     f6a:	0f b6       	in	r0, 0x3f	; 63
     f6c:	f8 94       	cli
     f6e:	80 93 60 00 	sts	0x0060, r24
     f72:	10 92 60 00 	sts	0x0060, r1
     f76:	0f be       	out	0x3f, r0	; 63
     f78:	a8 95       	wdr
     f7a:	10 92 01 08 	sts	0x0801, r1
     f7e:	10 92 00 08 	sts	0x0800, r1
     f82:	81 e0       	ldi	r24, 0x01	; 1
     f84:	08 95       	ret

00000f86 <Serial_::begin(unsigned long)>:
     f86:	2f ef       	ldi	r18, 0xFF	; 255
     f88:	3f ef       	ldi	r19, 0xFF	; 255
     f8a:	fc 01       	movw	r30, r24
     f8c:	35 87       	std	Z+13, r19	; 0x0d
     f8e:	24 87       	std	Z+12, r18	; 0x0c
     f90:	08 95       	ret

00000f92 <Serial_::operator bool()>:
     f92:	cf 93       	push	r28
     f94:	c0 91 0d 01 	lds	r28, 0x010D
     f98:	6a e0       	ldi	r22, 0x0A	; 10
     f9a:	70 e0       	ldi	r23, 0x00	; 0
     f9c:	80 e0       	ldi	r24, 0x00	; 0
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
     fa4:	81 e0       	ldi	r24, 0x01	; 1
     fa6:	c1 11       	cpse	r28, r1
     fa8:	01 c0       	rjmp	.+2      	; 0xfac <Serial_::operator bool()+0x1a>
     faa:	80 e0       	ldi	r24, 0x00	; 0
     fac:	cf 91       	pop	r28
     fae:	08 95       	ret

00000fb0 <_GLOBAL__sub_I__cdcInterface>:
     fb0:	10 92 20 03 	sts	0x0320, r1
     fb4:	10 92 1f 03 	sts	0x031F, r1
     fb8:	88 ee       	ldi	r24, 0xE8	; 232
     fba:	93 e0       	ldi	r25, 0x03	; 3
     fbc:	a0 e0       	ldi	r26, 0x00	; 0
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	80 93 21 03 	sts	0x0321, r24
     fc4:	90 93 22 03 	sts	0x0322, r25
     fc8:	a0 93 23 03 	sts	0x0323, r26
     fcc:	b0 93 24 03 	sts	0x0324, r27
     fd0:	81 e7       	ldi	r24, 0x71	; 113
     fd2:	92 e0       	ldi	r25, 0x02	; 2
     fd4:	90 93 1e 03 	sts	0x031E, r25
     fd8:	80 93 1d 03 	sts	0x031D, r24
     fdc:	8f ef       	ldi	r24, 0xFF	; 255
     fde:	9f ef       	ldi	r25, 0xFF	; 255
     fe0:	90 93 2a 03 	sts	0x032A, r25
     fe4:	80 93 29 03 	sts	0x0329, r24
     fe8:	08 95       	ret

00000fea <HardwareSerial::available()>:
     fea:	fc 01       	movw	r30, r24
     fec:	81 8d       	ldd	r24, Z+25	; 0x19
     fee:	22 8d       	ldd	r18, Z+26	; 0x1a
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	80 5c       	subi	r24, 0xC0	; 192
     ff4:	9f 4f       	sbci	r25, 0xFF	; 255
     ff6:	82 1b       	sub	r24, r18
     ff8:	91 09       	sbc	r25, r1
     ffa:	8f 73       	andi	r24, 0x3F	; 63
     ffc:	99 27       	eor	r25, r25
     ffe:	08 95       	ret

00001000 <HardwareSerial::peek()>:
    1000:	fc 01       	movw	r30, r24
    1002:	91 8d       	ldd	r25, Z+25	; 0x19
    1004:	82 8d       	ldd	r24, Z+26	; 0x1a
    1006:	98 17       	cp	r25, r24
    1008:	31 f0       	breq	.+12     	; 0x1016 <HardwareSerial::peek()+0x16>
    100a:	82 8d       	ldd	r24, Z+26	; 0x1a
    100c:	e8 0f       	add	r30, r24
    100e:	f1 1d       	adc	r31, r1
    1010:	85 8d       	ldd	r24, Z+29	; 0x1d
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	08 95       	ret
    1016:	8f ef       	ldi	r24, 0xFF	; 255
    1018:	9f ef       	ldi	r25, 0xFF	; 255
    101a:	08 95       	ret

0000101c <HardwareSerial::read()>:
    101c:	fc 01       	movw	r30, r24
    101e:	91 8d       	ldd	r25, Z+25	; 0x19
    1020:	82 8d       	ldd	r24, Z+26	; 0x1a
    1022:	98 17       	cp	r25, r24
    1024:	61 f0       	breq	.+24     	; 0x103e <HardwareSerial::read()+0x22>
    1026:	82 8d       	ldd	r24, Z+26	; 0x1a
    1028:	df 01       	movw	r26, r30
    102a:	a8 0f       	add	r26, r24
    102c:	b1 1d       	adc	r27, r1
    102e:	5d 96       	adiw	r26, 0x1d	; 29
    1030:	8c 91       	ld	r24, X
    1032:	92 8d       	ldd	r25, Z+26	; 0x1a
    1034:	9f 5f       	subi	r25, 0xFF	; 255
    1036:	9f 73       	andi	r25, 0x3F	; 63
    1038:	92 8f       	std	Z+26, r25	; 0x1a
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	08 95       	ret
    103e:	8f ef       	ldi	r24, 0xFF	; 255
    1040:	9f ef       	ldi	r25, 0xFF	; 255
    1042:	08 95       	ret

00001044 <serialEventRun()>:
    1044:	84 e2       	ldi	r24, 0x24	; 36
    1046:	97 e1       	ldi	r25, 0x17	; 23
    1048:	89 2b       	or	r24, r25
    104a:	49 f0       	breq	.+18     	; 0x105e <serialEventRun()+0x1a>
    104c:	80 e0       	ldi	r24, 0x00	; 0
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	89 2b       	or	r24, r25
    1052:	29 f0       	breq	.+10     	; 0x105e <serialEventRun()+0x1a>
    1054:	0e 94 24 17 	call	0x2e48	; 0x2e48 <Serial1_available()>
    1058:	81 11       	cpse	r24, r1
    105a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    105e:	08 95       	ret

00001060 <HardwareSerial::_tx_udr_empty_irq()>:
    1060:	fc 01       	movw	r30, r24
    1062:	84 8d       	ldd	r24, Z+28	; 0x1c
    1064:	df 01       	movw	r26, r30
    1066:	a8 0f       	add	r26, r24
    1068:	b1 1d       	adc	r27, r1
    106a:	a3 5a       	subi	r26, 0xA3	; 163
    106c:	bf 4f       	sbci	r27, 0xFF	; 255
    106e:	2c 91       	ld	r18, X
    1070:	84 8d       	ldd	r24, Z+28	; 0x1c
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	01 96       	adiw	r24, 0x01	; 1
    1076:	8f 73       	andi	r24, 0x3F	; 63
    1078:	99 27       	eor	r25, r25
    107a:	84 8f       	std	Z+28, r24	; 0x1c
    107c:	a6 89       	ldd	r26, Z+22	; 0x16
    107e:	b7 89       	ldd	r27, Z+23	; 0x17
    1080:	2c 93       	st	X, r18
    1082:	a0 89       	ldd	r26, Z+16	; 0x10
    1084:	b1 89       	ldd	r27, Z+17	; 0x11
    1086:	8c 91       	ld	r24, X
    1088:	80 64       	ori	r24, 0x40	; 64
    108a:	8c 93       	st	X, r24
    108c:	93 8d       	ldd	r25, Z+27	; 0x1b
    108e:	84 8d       	ldd	r24, Z+28	; 0x1c
    1090:	98 13       	cpse	r25, r24
    1092:	06 c0       	rjmp	.+12     	; 0x10a0 <HardwareSerial::_tx_udr_empty_irq()+0x40>
    1094:	02 88       	ldd	r0, Z+18	; 0x12
    1096:	f3 89       	ldd	r31, Z+19	; 0x13
    1098:	e0 2d       	mov	r30, r0
    109a:	80 81       	ld	r24, Z
    109c:	8f 7d       	andi	r24, 0xDF	; 223
    109e:	80 83       	st	Z, r24
    10a0:	08 95       	ret

000010a2 <HardwareSerial::flush()>:
    10a2:	cf 93       	push	r28
    10a4:	df 93       	push	r29
    10a6:	ec 01       	movw	r28, r24
    10a8:	88 8d       	ldd	r24, Y+24	; 0x18
    10aa:	88 23       	and	r24, r24
    10ac:	c9 f0       	breq	.+50     	; 0x10e0 <HardwareSerial::flush()+0x3e>
    10ae:	ea 89       	ldd	r30, Y+18	; 0x12
    10b0:	fb 89       	ldd	r31, Y+19	; 0x13
    10b2:	80 81       	ld	r24, Z
    10b4:	85 fd       	sbrc	r24, 5
    10b6:	05 c0       	rjmp	.+10     	; 0x10c2 <HardwareSerial::flush()+0x20>
    10b8:	a8 89       	ldd	r26, Y+16	; 0x10
    10ba:	b9 89       	ldd	r27, Y+17	; 0x11
    10bc:	8c 91       	ld	r24, X
    10be:	86 fd       	sbrc	r24, 6
    10c0:	0f c0       	rjmp	.+30     	; 0x10e0 <HardwareSerial::flush()+0x3e>
    10c2:	0f b6       	in	r0, 0x3f	; 63
    10c4:	07 fc       	sbrc	r0, 7
    10c6:	f5 cf       	rjmp	.-22     	; 0x10b2 <HardwareSerial::flush()+0x10>
    10c8:	80 81       	ld	r24, Z
    10ca:	85 ff       	sbrs	r24, 5
    10cc:	f2 cf       	rjmp	.-28     	; 0x10b2 <HardwareSerial::flush()+0x10>
    10ce:	a8 89       	ldd	r26, Y+16	; 0x10
    10d0:	b9 89       	ldd	r27, Y+17	; 0x11
    10d2:	8c 91       	ld	r24, X
    10d4:	85 ff       	sbrs	r24, 5
    10d6:	ed cf       	rjmp	.-38     	; 0x10b2 <HardwareSerial::flush()+0x10>
    10d8:	ce 01       	movw	r24, r28
    10da:	0e 94 30 08 	call	0x1060	; 0x1060 <HardwareSerial::_tx_udr_empty_irq()>
    10de:	e7 cf       	rjmp	.-50     	; 0x10ae <HardwareSerial::flush()+0xc>
    10e0:	df 91       	pop	r29
    10e2:	cf 91       	pop	r28
    10e4:	08 95       	ret

000010e6 <HardwareSerial::write(unsigned char)>:
    10e6:	cf 92       	push	r12
    10e8:	df 92       	push	r13
    10ea:	ff 92       	push	r15
    10ec:	0f 93       	push	r16
    10ee:	1f 93       	push	r17
    10f0:	cf 93       	push	r28
    10f2:	df 93       	push	r29
    10f4:	1f 92       	push	r1
    10f6:	cd b7       	in	r28, 0x3d	; 61
    10f8:	de b7       	in	r29, 0x3e	; 62
    10fa:	6c 01       	movw	r12, r24
    10fc:	81 e0       	ldi	r24, 0x01	; 1
    10fe:	d6 01       	movw	r26, r12
    1100:	58 96       	adiw	r26, 0x18	; 24
    1102:	8c 93       	st	X, r24
    1104:	58 97       	sbiw	r26, 0x18	; 24
    1106:	5b 96       	adiw	r26, 0x1b	; 27
    1108:	9c 91       	ld	r25, X
    110a:	5b 97       	sbiw	r26, 0x1b	; 27
    110c:	5c 96       	adiw	r26, 0x1c	; 28
    110e:	8c 91       	ld	r24, X
    1110:	5c 97       	sbiw	r26, 0x1c	; 28
    1112:	98 13       	cpse	r25, r24
    1114:	07 c0       	rjmp	.+14     	; 0x1124 <HardwareSerial::write(unsigned char)+0x3e>
    1116:	50 96       	adiw	r26, 0x10	; 16
    1118:	ed 91       	ld	r30, X+
    111a:	fc 91       	ld	r31, X
    111c:	51 97       	sbiw	r26, 0x11	; 17
    111e:	80 81       	ld	r24, Z
    1120:	85 fd       	sbrc	r24, 5
    1122:	2e c0       	rjmp	.+92     	; 0x1180 <HardwareSerial::write(unsigned char)+0x9a>
    1124:	f6 01       	movw	r30, r12
    1126:	03 8d       	ldd	r16, Z+27	; 0x1b
    1128:	10 e0       	ldi	r17, 0x00	; 0
    112a:	0f 5f       	subi	r16, 0xFF	; 255
    112c:	1f 4f       	sbci	r17, 0xFF	; 255
    112e:	0f 73       	andi	r16, 0x3F	; 63
    1130:	11 27       	eor	r17, r17
    1132:	f0 2e       	mov	r15, r16
    1134:	f6 01       	movw	r30, r12
    1136:	84 8d       	ldd	r24, Z+28	; 0x1c
    1138:	f8 12       	cpse	r15, r24
    113a:	11 c0       	rjmp	.+34     	; 0x115e <HardwareSerial::write(unsigned char)+0x78>
    113c:	0f b6       	in	r0, 0x3f	; 63
    113e:	07 fc       	sbrc	r0, 7
    1140:	f9 cf       	rjmp	.-14     	; 0x1134 <HardwareSerial::write(unsigned char)+0x4e>
    1142:	d6 01       	movw	r26, r12
    1144:	50 96       	adiw	r26, 0x10	; 16
    1146:	ed 91       	ld	r30, X+
    1148:	fc 91       	ld	r31, X
    114a:	51 97       	sbiw	r26, 0x11	; 17
    114c:	80 81       	ld	r24, Z
    114e:	85 ff       	sbrs	r24, 5
    1150:	f1 cf       	rjmp	.-30     	; 0x1134 <HardwareSerial::write(unsigned char)+0x4e>
    1152:	c6 01       	movw	r24, r12
    1154:	69 83       	std	Y+1, r22	; 0x01
    1156:	0e 94 30 08 	call	0x1060	; 0x1060 <HardwareSerial::_tx_udr_empty_irq()>
    115a:	69 81       	ldd	r22, Y+1	; 0x01
    115c:	eb cf       	rjmp	.-42     	; 0x1134 <HardwareSerial::write(unsigned char)+0x4e>
    115e:	83 8d       	ldd	r24, Z+27	; 0x1b
    1160:	e8 0f       	add	r30, r24
    1162:	f1 1d       	adc	r31, r1
    1164:	e3 5a       	subi	r30, 0xA3	; 163
    1166:	ff 4f       	sbci	r31, 0xFF	; 255
    1168:	60 83       	st	Z, r22
    116a:	d6 01       	movw	r26, r12
    116c:	5b 96       	adiw	r26, 0x1b	; 27
    116e:	0c 93       	st	X, r16
    1170:	5b 97       	sbiw	r26, 0x1b	; 27
    1172:	52 96       	adiw	r26, 0x12	; 18
    1174:	ed 91       	ld	r30, X+
    1176:	fc 91       	ld	r31, X
    1178:	53 97       	sbiw	r26, 0x13	; 19
    117a:	80 81       	ld	r24, Z
    117c:	80 62       	ori	r24, 0x20	; 32
    117e:	0c c0       	rjmp	.+24     	; 0x1198 <HardwareSerial::write(unsigned char)+0xb2>
    1180:	d6 01       	movw	r26, r12
    1182:	56 96       	adiw	r26, 0x16	; 22
    1184:	ed 91       	ld	r30, X+
    1186:	fc 91       	ld	r31, X
    1188:	57 97       	sbiw	r26, 0x17	; 23
    118a:	60 83       	st	Z, r22
    118c:	50 96       	adiw	r26, 0x10	; 16
    118e:	ed 91       	ld	r30, X+
    1190:	fc 91       	ld	r31, X
    1192:	51 97       	sbiw	r26, 0x11	; 17
    1194:	80 81       	ld	r24, Z
    1196:	80 64       	ori	r24, 0x40	; 64
    1198:	80 83       	st	Z, r24
    119a:	81 e0       	ldi	r24, 0x01	; 1
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	0f 90       	pop	r0
    11a0:	df 91       	pop	r29
    11a2:	cf 91       	pop	r28
    11a4:	1f 91       	pop	r17
    11a6:	0f 91       	pop	r16
    11a8:	ff 90       	pop	r15
    11aa:	df 90       	pop	r13
    11ac:	cf 90       	pop	r12
    11ae:	08 95       	ret

000011b0 <HardwareSerial::begin(unsigned long, unsigned char)>:
    11b0:	bf 92       	push	r11
    11b2:	cf 92       	push	r12
    11b4:	df 92       	push	r13
    11b6:	ef 92       	push	r14
    11b8:	ff 92       	push	r15
    11ba:	cf 93       	push	r28
    11bc:	df 93       	push	r29
    11be:	ec 01       	movw	r28, r24
    11c0:	6a 01       	movw	r12, r20
    11c2:	7b 01       	movw	r14, r22
    11c4:	b2 2e       	mov	r11, r18
    11c6:	e8 89       	ldd	r30, Y+16	; 0x10
    11c8:	f9 89       	ldd	r31, Y+17	; 0x11
    11ca:	82 e0       	ldi	r24, 0x02	; 2
    11cc:	80 83       	st	Z, r24
    11ce:	41 15       	cp	r20, r1
    11d0:	81 ee       	ldi	r24, 0xE1	; 225
    11d2:	58 07       	cpc	r21, r24
    11d4:	61 05       	cpc	r22, r1
    11d6:	71 05       	cpc	r23, r1
    11d8:	a1 f0       	breq	.+40     	; 0x1202 <HardwareSerial::begin(unsigned long, unsigned char)+0x52>
    11da:	60 e0       	ldi	r22, 0x00	; 0
    11dc:	79 e0       	ldi	r23, 0x09	; 9
    11de:	8d e3       	ldi	r24, 0x3D	; 61
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	a7 01       	movw	r20, r14
    11e4:	96 01       	movw	r18, r12
    11e6:	0e 94 1c 1c 	call	0x3838	; 0x3838 <__udivmodsi4>
    11ea:	21 50       	subi	r18, 0x01	; 1
    11ec:	31 09       	sbc	r19, r1
    11ee:	41 09       	sbc	r20, r1
    11f0:	51 09       	sbc	r21, r1
    11f2:	56 95       	lsr	r21
    11f4:	47 95       	ror	r20
    11f6:	37 95       	ror	r19
    11f8:	27 95       	ror	r18
    11fa:	21 15       	cp	r18, r1
    11fc:	80 e1       	ldi	r24, 0x10	; 16
    11fe:	38 07       	cpc	r19, r24
    1200:	98 f0       	brcs	.+38     	; 0x1228 <HardwareSerial::begin(unsigned long, unsigned char)+0x78>
    1202:	e8 89       	ldd	r30, Y+16	; 0x10
    1204:	f9 89       	ldd	r31, Y+17	; 0x11
    1206:	10 82       	st	Z, r1
    1208:	60 e8       	ldi	r22, 0x80	; 128
    120a:	74 e8       	ldi	r23, 0x84	; 132
    120c:	8e e1       	ldi	r24, 0x1E	; 30
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	a7 01       	movw	r20, r14
    1212:	96 01       	movw	r18, r12
    1214:	0e 94 1c 1c 	call	0x3838	; 0x3838 <__udivmodsi4>
    1218:	21 50       	subi	r18, 0x01	; 1
    121a:	31 09       	sbc	r19, r1
    121c:	41 09       	sbc	r20, r1
    121e:	51 09       	sbc	r21, r1
    1220:	56 95       	lsr	r21
    1222:	47 95       	ror	r20
    1224:	37 95       	ror	r19
    1226:	27 95       	ror	r18
    1228:	ec 85       	ldd	r30, Y+12	; 0x0c
    122a:	fd 85       	ldd	r31, Y+13	; 0x0d
    122c:	30 83       	st	Z, r19
    122e:	ee 85       	ldd	r30, Y+14	; 0x0e
    1230:	ff 85       	ldd	r31, Y+15	; 0x0f
    1232:	20 83       	st	Z, r18
    1234:	18 8e       	std	Y+24, r1	; 0x18
    1236:	ec 89       	ldd	r30, Y+20	; 0x14
    1238:	fd 89       	ldd	r31, Y+21	; 0x15
    123a:	b0 82       	st	Z, r11
    123c:	ea 89       	ldd	r30, Y+18	; 0x12
    123e:	fb 89       	ldd	r31, Y+19	; 0x13
    1240:	80 81       	ld	r24, Z
    1242:	80 61       	ori	r24, 0x10	; 16
    1244:	80 83       	st	Z, r24
    1246:	ea 89       	ldd	r30, Y+18	; 0x12
    1248:	fb 89       	ldd	r31, Y+19	; 0x13
    124a:	80 81       	ld	r24, Z
    124c:	88 60       	ori	r24, 0x08	; 8
    124e:	80 83       	st	Z, r24
    1250:	ea 89       	ldd	r30, Y+18	; 0x12
    1252:	fb 89       	ldd	r31, Y+19	; 0x13
    1254:	80 81       	ld	r24, Z
    1256:	80 68       	ori	r24, 0x80	; 128
    1258:	80 83       	st	Z, r24
    125a:	ea 89       	ldd	r30, Y+18	; 0x12
    125c:	fb 89       	ldd	r31, Y+19	; 0x13
    125e:	80 81       	ld	r24, Z
    1260:	8f 7d       	andi	r24, 0xDF	; 223
    1262:	80 83       	st	Z, r24
    1264:	df 91       	pop	r29
    1266:	cf 91       	pop	r28
    1268:	ff 90       	pop	r15
    126a:	ef 90       	pop	r14
    126c:	df 90       	pop	r13
    126e:	cf 90       	pop	r12
    1270:	bf 90       	pop	r11
    1272:	08 95       	ret

00001274 <Print::write(unsigned char const*, unsigned int)>:
    1274:	cf 92       	push	r12
    1276:	df 92       	push	r13
    1278:	ef 92       	push	r14
    127a:	ff 92       	push	r15
    127c:	0f 93       	push	r16
    127e:	1f 93       	push	r17
    1280:	cf 93       	push	r28
    1282:	df 93       	push	r29
    1284:	6c 01       	movw	r12, r24
    1286:	7a 01       	movw	r14, r20
    1288:	eb 01       	movw	r28, r22
    128a:	e6 0e       	add	r14, r22
    128c:	f7 1e       	adc	r15, r23
    128e:	00 e0       	ldi	r16, 0x00	; 0
    1290:	10 e0       	ldi	r17, 0x00	; 0
    1292:	ce 15       	cp	r28, r14
    1294:	df 05       	cpc	r29, r15
    1296:	61 f0       	breq	.+24     	; 0x12b0 <Print::write(unsigned char const*, unsigned int)+0x3c>
    1298:	69 91       	ld	r22, Y+
    129a:	d6 01       	movw	r26, r12
    129c:	ed 91       	ld	r30, X+
    129e:	fc 91       	ld	r31, X
    12a0:	01 90       	ld	r0, Z+
    12a2:	f0 81       	ld	r31, Z
    12a4:	e0 2d       	mov	r30, r0
    12a6:	c6 01       	movw	r24, r12
    12a8:	09 95       	icall
    12aa:	08 0f       	add	r16, r24
    12ac:	19 1f       	adc	r17, r25
    12ae:	f1 cf       	rjmp	.-30     	; 0x1292 <Print::write(unsigned char const*, unsigned int)+0x1e>
    12b0:	c8 01       	movw	r24, r16
    12b2:	df 91       	pop	r29
    12b4:	cf 91       	pop	r28
    12b6:	1f 91       	pop	r17
    12b8:	0f 91       	pop	r16
    12ba:	ff 90       	pop	r15
    12bc:	ef 90       	pop	r14
    12be:	df 90       	pop	r13
    12c0:	cf 90       	pop	r12
    12c2:	08 95       	ret

000012c4 <Print::write(char const*)>:
    12c4:	61 15       	cp	r22, r1
    12c6:	71 05       	cpc	r23, r1
    12c8:	81 f0       	breq	.+32     	; 0x12ea <Print::write(char const*)+0x26>
    12ca:	db 01       	movw	r26, r22
    12cc:	0d 90       	ld	r0, X+
    12ce:	00 20       	and	r0, r0
    12d0:	e9 f7       	brne	.-6      	; 0x12cc <Print::write(char const*)+0x8>
    12d2:	ad 01       	movw	r20, r26
    12d4:	41 50       	subi	r20, 0x01	; 1
    12d6:	51 09       	sbc	r21, r1
    12d8:	46 1b       	sub	r20, r22
    12da:	57 0b       	sbc	r21, r23
    12dc:	dc 01       	movw	r26, r24
    12de:	ed 91       	ld	r30, X+
    12e0:	fc 91       	ld	r31, X
    12e2:	02 80       	ldd	r0, Z+2	; 0x02
    12e4:	f3 81       	ldd	r31, Z+3	; 0x03
    12e6:	e0 2d       	mov	r30, r0
    12e8:	09 94       	ijmp
    12ea:	80 e0       	ldi	r24, 0x00	; 0
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	08 95       	ret

000012f0 <Print::print(__FlashStringHelper const*)>:
    12f0:	ef 92       	push	r14
    12f2:	ff 92       	push	r15
    12f4:	0f 93       	push	r16
    12f6:	1f 93       	push	r17
    12f8:	cf 93       	push	r28
    12fa:	df 93       	push	r29
    12fc:	8c 01       	movw	r16, r24
    12fe:	fb 01       	movw	r30, r22
    1300:	c0 e0       	ldi	r28, 0x00	; 0
    1302:	d0 e0       	ldi	r29, 0x00	; 0
    1304:	64 91       	lpm	r22, Z
    1306:	7f 01       	movw	r14, r30
    1308:	8f ef       	ldi	r24, 0xFF	; 255
    130a:	e8 1a       	sub	r14, r24
    130c:	f8 0a       	sbc	r15, r24
    130e:	66 23       	and	r22, r22
    1310:	61 f0       	breq	.+24     	; 0x132a <Print::print(__FlashStringHelper const*)+0x3a>
    1312:	d8 01       	movw	r26, r16
    1314:	ed 91       	ld	r30, X+
    1316:	fc 91       	ld	r31, X
    1318:	01 90       	ld	r0, Z+
    131a:	f0 81       	ld	r31, Z
    131c:	e0 2d       	mov	r30, r0
    131e:	c8 01       	movw	r24, r16
    1320:	09 95       	icall
    1322:	c8 0f       	add	r28, r24
    1324:	d9 1f       	adc	r29, r25
    1326:	f7 01       	movw	r30, r14
    1328:	ed cf       	rjmp	.-38     	; 0x1304 <Print::print(__FlashStringHelper const*)+0x14>
    132a:	ce 01       	movw	r24, r28
    132c:	df 91       	pop	r29
    132e:	cf 91       	pop	r28
    1330:	1f 91       	pop	r17
    1332:	0f 91       	pop	r16
    1334:	ff 90       	pop	r15
    1336:	ef 90       	pop	r14
    1338:	08 95       	ret

0000133a <Print::print(char const*)>:
    133a:	0c 94 62 09 	jmp	0x12c4	; 0x12c4 <Print::write(char const*)>

0000133e <Print::print(char)>:
    133e:	dc 01       	movw	r26, r24
    1340:	ed 91       	ld	r30, X+
    1342:	fc 91       	ld	r31, X
    1344:	01 90       	ld	r0, Z+
    1346:	f0 81       	ld	r31, Z
    1348:	e0 2d       	mov	r30, r0
    134a:	09 94       	ijmp

0000134c <Print::println()>:
    134c:	6d e8       	ldi	r22, 0x8D	; 141
    134e:	72 e0       	ldi	r23, 0x02	; 2
    1350:	0c 94 62 09 	jmp	0x12c4	; 0x12c4 <Print::write(char const*)>

00001354 <Print::println(char const*)>:
    1354:	0f 93       	push	r16
    1356:	1f 93       	push	r17
    1358:	cf 93       	push	r28
    135a:	df 93       	push	r29
    135c:	ec 01       	movw	r28, r24
    135e:	0e 94 62 09 	call	0x12c4	; 0x12c4 <Print::write(char const*)>
    1362:	8c 01       	movw	r16, r24
    1364:	ce 01       	movw	r24, r28
    1366:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
    136a:	80 0f       	add	r24, r16
    136c:	91 1f       	adc	r25, r17
    136e:	df 91       	pop	r29
    1370:	cf 91       	pop	r28
    1372:	1f 91       	pop	r17
    1374:	0f 91       	pop	r16
    1376:	08 95       	ret

00001378 <Print::println(char)>:
    1378:	0f 93       	push	r16
    137a:	1f 93       	push	r17
    137c:	cf 93       	push	r28
    137e:	df 93       	push	r29
    1380:	ec 01       	movw	r28, r24
    1382:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
    1386:	8c 01       	movw	r16, r24
    1388:	ce 01       	movw	r24, r28
    138a:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
    138e:	80 0f       	add	r24, r16
    1390:	91 1f       	adc	r25, r17
    1392:	df 91       	pop	r29
    1394:	cf 91       	pop	r28
    1396:	1f 91       	pop	r17
    1398:	0f 91       	pop	r16
    139a:	08 95       	ret

0000139c <Print::printNumber(unsigned long, unsigned char)>:
    139c:	8f 92       	push	r8
    139e:	9f 92       	push	r9
    13a0:	af 92       	push	r10
    13a2:	bf 92       	push	r11
    13a4:	cf 92       	push	r12
    13a6:	df 92       	push	r13
    13a8:	ef 92       	push	r14
    13aa:	ff 92       	push	r15
    13ac:	0f 93       	push	r16
    13ae:	1f 93       	push	r17
    13b0:	cf 93       	push	r28
    13b2:	df 93       	push	r29
    13b4:	cd b7       	in	r28, 0x3d	; 61
    13b6:	de b7       	in	r29, 0x3e	; 62
    13b8:	a1 97       	sbiw	r28, 0x21	; 33
    13ba:	0f b6       	in	r0, 0x3f	; 63
    13bc:	f8 94       	cli
    13be:	de bf       	out	0x3e, r29	; 62
    13c0:	0f be       	out	0x3f, r0	; 63
    13c2:	cd bf       	out	0x3d, r28	; 61
    13c4:	7c 01       	movw	r14, r24
    13c6:	c4 2e       	mov	r12, r20
    13c8:	e5 2f       	mov	r30, r21
    13ca:	cb 01       	movw	r24, r22
    13cc:	d2 2e       	mov	r13, r18
    13ce:	19 a2       	std	Y+33, r1	; 0x21
    13d0:	21 e0       	ldi	r18, 0x01	; 1
    13d2:	2d 15       	cp	r18, r13
    13d4:	10 f0       	brcs	.+4      	; 0x13da <Print::printNumber(unsigned long, unsigned char)+0x3e>
    13d6:	2a e0       	ldi	r18, 0x0A	; 10
    13d8:	d2 2e       	mov	r13, r18
    13da:	8e 01       	movw	r16, r28
    13dc:	0f 5d       	subi	r16, 0xDF	; 223
    13de:	1f 4f       	sbci	r17, 0xFF	; 255
    13e0:	8d 2c       	mov	r8, r13
    13e2:	91 2c       	mov	r9, r1
    13e4:	a1 2c       	mov	r10, r1
    13e6:	b1 2c       	mov	r11, r1
    13e8:	6c 2d       	mov	r22, r12
    13ea:	7e 2f       	mov	r23, r30
    13ec:	a5 01       	movw	r20, r10
    13ee:	94 01       	movw	r18, r8
    13f0:	0e 94 1c 1c 	call	0x3838	; 0x3838 <__udivmodsi4>
    13f4:	8c 2d       	mov	r24, r12
    13f6:	d2 9e       	mul	r13, r18
    13f8:	80 19       	sub	r24, r0
    13fa:	11 24       	eor	r1, r1
    13fc:	01 50       	subi	r16, 0x01	; 1
    13fe:	11 09       	sbc	r17, r1
    1400:	8a 30       	cpi	r24, 0x0A	; 10
    1402:	14 f4       	brge	.+4      	; 0x1408 <Print::printNumber(unsigned long, unsigned char)+0x6c>
    1404:	80 5d       	subi	r24, 0xD0	; 208
    1406:	01 c0       	rjmp	.+2      	; 0x140a <Print::printNumber(unsigned long, unsigned char)+0x6e>
    1408:	89 5c       	subi	r24, 0xC9	; 201
    140a:	f8 01       	movw	r30, r16
    140c:	80 83       	st	Z, r24
    140e:	21 15       	cp	r18, r1
    1410:	31 05       	cpc	r19, r1
    1412:	41 05       	cpc	r20, r1
    1414:	51 05       	cpc	r21, r1
    1416:	21 f0       	breq	.+8      	; 0x1420 <Print::printNumber(unsigned long, unsigned char)+0x84>
    1418:	c2 2e       	mov	r12, r18
    141a:	e3 2f       	mov	r30, r19
    141c:	ca 01       	movw	r24, r20
    141e:	e4 cf       	rjmp	.-56     	; 0x13e8 <Print::printNumber(unsigned long, unsigned char)+0x4c>
    1420:	b8 01       	movw	r22, r16
    1422:	c7 01       	movw	r24, r14
    1424:	0e 94 62 09 	call	0x12c4	; 0x12c4 <Print::write(char const*)>
    1428:	a1 96       	adiw	r28, 0x21	; 33
    142a:	0f b6       	in	r0, 0x3f	; 63
    142c:	f8 94       	cli
    142e:	de bf       	out	0x3e, r29	; 62
    1430:	0f be       	out	0x3f, r0	; 63
    1432:	cd bf       	out	0x3d, r28	; 61
    1434:	df 91       	pop	r29
    1436:	cf 91       	pop	r28
    1438:	1f 91       	pop	r17
    143a:	0f 91       	pop	r16
    143c:	ff 90       	pop	r15
    143e:	ef 90       	pop	r14
    1440:	df 90       	pop	r13
    1442:	cf 90       	pop	r12
    1444:	bf 90       	pop	r11
    1446:	af 90       	pop	r10
    1448:	9f 90       	pop	r9
    144a:	8f 90       	pop	r8
    144c:	08 95       	ret

0000144e <Print::print(long, int)>:
    144e:	cf 92       	push	r12
    1450:	df 92       	push	r13
    1452:	ef 92       	push	r14
    1454:	ff 92       	push	r15
    1456:	0f 93       	push	r16
    1458:	1f 93       	push	r17
    145a:	cf 93       	push	r28
    145c:	df 93       	push	r29
    145e:	ec 01       	movw	r28, r24
    1460:	6a 01       	movw	r12, r20
    1462:	7b 01       	movw	r14, r22
    1464:	21 15       	cp	r18, r1
    1466:	31 05       	cpc	r19, r1
    1468:	79 f4       	brne	.+30     	; 0x1488 <Print::print(long, int)+0x3a>
    146a:	e8 81       	ld	r30, Y
    146c:	f9 81       	ldd	r31, Y+1	; 0x01
    146e:	01 90       	ld	r0, Z+
    1470:	f0 81       	ld	r31, Z
    1472:	e0 2d       	mov	r30, r0
    1474:	64 2f       	mov	r22, r20
    1476:	df 91       	pop	r29
    1478:	cf 91       	pop	r28
    147a:	1f 91       	pop	r17
    147c:	0f 91       	pop	r16
    147e:	ff 90       	pop	r15
    1480:	ef 90       	pop	r14
    1482:	df 90       	pop	r13
    1484:	cf 90       	pop	r12
    1486:	09 94       	ijmp
    1488:	2a 30       	cpi	r18, 0x0A	; 10
    148a:	31 05       	cpc	r19, r1
    148c:	e9 f4       	brne	.+58     	; 0x14c8 <Print::print(long, int)+0x7a>
    148e:	77 ff       	sbrs	r23, 7
    1490:	1a c0       	rjmp	.+52     	; 0x14c6 <Print::print(long, int)+0x78>
    1492:	6d e2       	ldi	r22, 0x2D	; 45
    1494:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
    1498:	8c 01       	movw	r16, r24
    149a:	44 27       	eor	r20, r20
    149c:	55 27       	eor	r21, r21
    149e:	ba 01       	movw	r22, r20
    14a0:	4c 19       	sub	r20, r12
    14a2:	5d 09       	sbc	r21, r13
    14a4:	6e 09       	sbc	r22, r14
    14a6:	7f 09       	sbc	r23, r15
    14a8:	2a e0       	ldi	r18, 0x0A	; 10
    14aa:	ce 01       	movw	r24, r28
    14ac:	0e 94 ce 09 	call	0x139c	; 0x139c <Print::printNumber(unsigned long, unsigned char)>
    14b0:	80 0f       	add	r24, r16
    14b2:	91 1f       	adc	r25, r17
    14b4:	df 91       	pop	r29
    14b6:	cf 91       	pop	r28
    14b8:	1f 91       	pop	r17
    14ba:	0f 91       	pop	r16
    14bc:	ff 90       	pop	r15
    14be:	ef 90       	pop	r14
    14c0:	df 90       	pop	r13
    14c2:	cf 90       	pop	r12
    14c4:	08 95       	ret
    14c6:	2a e0       	ldi	r18, 0x0A	; 10
    14c8:	b7 01       	movw	r22, r14
    14ca:	a6 01       	movw	r20, r12
    14cc:	ce 01       	movw	r24, r28
    14ce:	df 91       	pop	r29
    14d0:	cf 91       	pop	r28
    14d2:	1f 91       	pop	r17
    14d4:	0f 91       	pop	r16
    14d6:	ff 90       	pop	r15
    14d8:	ef 90       	pop	r14
    14da:	df 90       	pop	r13
    14dc:	cf 90       	pop	r12
    14de:	0c 94 ce 09 	jmp	0x139c	; 0x139c <Print::printNumber(unsigned long, unsigned char)>

000014e2 <Print::print(int, int)>:
    14e2:	9a 01       	movw	r18, r20
    14e4:	ab 01       	movw	r20, r22
    14e6:	66 27       	eor	r22, r22
    14e8:	57 fd       	sbrc	r21, 7
    14ea:	60 95       	com	r22
    14ec:	76 2f       	mov	r23, r22
    14ee:	0c 94 27 0a 	jmp	0x144e	; 0x144e <Print::print(long, int)>

000014f2 <Print::println(int, int)>:
    14f2:	0f 93       	push	r16
    14f4:	1f 93       	push	r17
    14f6:	cf 93       	push	r28
    14f8:	df 93       	push	r29
    14fa:	ec 01       	movw	r28, r24
    14fc:	9a 01       	movw	r18, r20
    14fe:	ab 01       	movw	r20, r22
    1500:	66 27       	eor	r22, r22
    1502:	57 fd       	sbrc	r21, 7
    1504:	60 95       	com	r22
    1506:	76 2f       	mov	r23, r22
    1508:	0e 94 27 0a 	call	0x144e	; 0x144e <Print::print(long, int)>
    150c:	8c 01       	movw	r16, r24
    150e:	ce 01       	movw	r24, r28
    1510:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
    1514:	80 0f       	add	r24, r16
    1516:	91 1f       	adc	r25, r17
    1518:	df 91       	pop	r29
    151a:	cf 91       	pop	r28
    151c:	1f 91       	pop	r17
    151e:	0f 91       	pop	r16
    1520:	08 95       	ret

00001522 <Print::print(unsigned long, int)>:
    1522:	21 15       	cp	r18, r1
    1524:	31 05       	cpc	r19, r1
    1526:	41 f4       	brne	.+16     	; 0x1538 <Print::print(unsigned long, int)+0x16>
    1528:	dc 01       	movw	r26, r24
    152a:	ed 91       	ld	r30, X+
    152c:	fc 91       	ld	r31, X
    152e:	01 90       	ld	r0, Z+
    1530:	f0 81       	ld	r31, Z
    1532:	e0 2d       	mov	r30, r0
    1534:	64 2f       	mov	r22, r20
    1536:	09 94       	ijmp
    1538:	0c 94 ce 09 	jmp	0x139c	; 0x139c <Print::printNumber(unsigned long, unsigned char)>

0000153c <Print::print(unsigned char, int)>:
    153c:	9a 01       	movw	r18, r20
    153e:	46 2f       	mov	r20, r22
    1540:	50 e0       	ldi	r21, 0x00	; 0
    1542:	60 e0       	ldi	r22, 0x00	; 0
    1544:	70 e0       	ldi	r23, 0x00	; 0
    1546:	0c 94 91 0a 	jmp	0x1522	; 0x1522 <Print::print(unsigned long, int)>

0000154a <Print::println(unsigned int, int)>:
    154a:	0f 93       	push	r16
    154c:	1f 93       	push	r17
    154e:	cf 93       	push	r28
    1550:	df 93       	push	r29
    1552:	ec 01       	movw	r28, r24
    1554:	9a 01       	movw	r18, r20
    1556:	ab 01       	movw	r20, r22
    1558:	60 e0       	ldi	r22, 0x00	; 0
    155a:	70 e0       	ldi	r23, 0x00	; 0
    155c:	0e 94 91 0a 	call	0x1522	; 0x1522 <Print::print(unsigned long, int)>
    1560:	8c 01       	movw	r16, r24
    1562:	ce 01       	movw	r24, r28
    1564:	0e 94 a6 09 	call	0x134c	; 0x134c <Print::println()>
    1568:	80 0f       	add	r24, r16
    156a:	91 1f       	adc	r25, r17
    156c:	df 91       	pop	r29
    156e:	cf 91       	pop	r28
    1570:	1f 91       	pop	r17
    1572:	0f 91       	pop	r16
    1574:	08 95       	ret

00001576 <SendControl(unsigned char)>:
    1576:	40 91 71 03 	lds	r20, 0x0371
    157a:	50 91 72 03 	lds	r21, 0x0372
    157e:	20 91 6f 03 	lds	r18, 0x036F
    1582:	30 91 70 03 	lds	r19, 0x0370
    1586:	42 17       	cp	r20, r18
    1588:	53 07       	cpc	r21, r19
    158a:	b4 f4       	brge	.+44     	; 0x15b8 <SendControl(unsigned char)+0x42>
    158c:	90 91 e8 00 	lds	r25, 0x00E8
    1590:	95 70       	andi	r25, 0x05	; 5
    1592:	e1 f3       	breq	.-8      	; 0x158c <SendControl(unsigned char)+0x16>
    1594:	90 91 e8 00 	lds	r25, 0x00E8
    1598:	92 fd       	sbrc	r25, 2
    159a:	19 c0       	rjmp	.+50     	; 0x15ce <SendControl(unsigned char)+0x58>
    159c:	80 93 f1 00 	sts	0x00F1, r24
    15a0:	80 91 71 03 	lds	r24, 0x0371
    15a4:	90 91 72 03 	lds	r25, 0x0372
    15a8:	01 96       	adiw	r24, 0x01	; 1
    15aa:	8f 73       	andi	r24, 0x3F	; 63
    15ac:	99 27       	eor	r25, r25
    15ae:	89 2b       	or	r24, r25
    15b0:	19 f4       	brne	.+6      	; 0x15b8 <SendControl(unsigned char)+0x42>
    15b2:	8e ef       	ldi	r24, 0xFE	; 254
    15b4:	80 93 e8 00 	sts	0x00E8, r24
    15b8:	80 91 71 03 	lds	r24, 0x0371
    15bc:	90 91 72 03 	lds	r25, 0x0372
    15c0:	01 96       	adiw	r24, 0x01	; 1
    15c2:	90 93 72 03 	sts	0x0372, r25
    15c6:	80 93 71 03 	sts	0x0371, r24
    15ca:	81 e0       	ldi	r24, 0x01	; 1
    15cc:	08 95       	ret
    15ce:	80 e0       	ldi	r24, 0x00	; 0
    15d0:	08 95       	ret

000015d2 <USB_SendStringDescriptor(unsigned char const*, unsigned char)>:
    15d2:	cf 92       	push	r12
    15d4:	df 92       	push	r13
    15d6:	ff 92       	push	r15
    15d8:	0f 93       	push	r16
    15da:	1f 93       	push	r17
    15dc:	cf 93       	push	r28
    15de:	df 93       	push	r29
    15e0:	1f 92       	push	r1
    15e2:	cd b7       	in	r28, 0x3d	; 61
    15e4:	de b7       	in	r29, 0x3e	; 62
    15e6:	08 2f       	mov	r16, r24
    15e8:	16 2f       	mov	r17, r22
    15ea:	86 2f       	mov	r24, r22
    15ec:	88 0f       	add	r24, r24
    15ee:	8e 5f       	subi	r24, 0xFE	; 254
    15f0:	99 83       	std	Y+1, r25	; 0x01
    15f2:	0e 94 bb 0a 	call	0x1576	; 0x1576 <SendControl(unsigned char)>
    15f6:	83 e0       	ldi	r24, 0x03	; 3
    15f8:	0e 94 bb 0a 	call	0x1576	; 0x1576 <SendControl(unsigned char)>
    15fc:	f0 2e       	mov	r15, r16
    15fe:	c0 2e       	mov	r12, r16
    1600:	99 81       	ldd	r25, Y+1	; 0x01
    1602:	d9 2e       	mov	r13, r25
    1604:	8c 2d       	mov	r24, r12
    1606:	8f 19       	sub	r24, r15
    1608:	81 17       	cp	r24, r17
    160a:	78 f4       	brcc	.+30     	; 0x162a <USB_SendStringDescriptor(unsigned char const*, unsigned char)+0x58>
    160c:	f6 01       	movw	r30, r12
    160e:	84 91       	lpm	r24, Z
    1610:	0e 94 bb 0a 	call	0x1576	; 0x1576 <SendControl(unsigned char)>
    1614:	08 2f       	mov	r16, r24
    1616:	80 e0       	ldi	r24, 0x00	; 0
    1618:	0e 94 bb 0a 	call	0x1576	; 0x1576 <SendControl(unsigned char)>
    161c:	80 23       	and	r24, r16
    161e:	ff ef       	ldi	r31, 0xFF	; 255
    1620:	cf 1a       	sub	r12, r31
    1622:	df 0a       	sbc	r13, r31
    1624:	81 11       	cpse	r24, r1
    1626:	ee cf       	rjmp	.-36     	; 0x1604 <USB_SendStringDescriptor(unsigned char const*, unsigned char)+0x32>
    1628:	01 c0       	rjmp	.+2      	; 0x162c <USB_SendStringDescriptor(unsigned char const*, unsigned char)+0x5a>
    162a:	81 e0       	ldi	r24, 0x01	; 1
    162c:	0f 90       	pop	r0
    162e:	df 91       	pop	r29
    1630:	cf 91       	pop	r28
    1632:	1f 91       	pop	r17
    1634:	0f 91       	pop	r16
    1636:	ff 90       	pop	r15
    1638:	df 90       	pop	r13
    163a:	cf 90       	pop	r12
    163c:	08 95       	ret

0000163e <Recv(unsigned char volatile*, unsigned char)>:
    163e:	61 50       	subi	r22, 0x01	; 1
    1640:	30 f0       	brcs	.+12     	; 0x164e <Recv(unsigned char volatile*, unsigned char)+0x10>
    1642:	20 91 f1 00 	lds	r18, 0x00F1
    1646:	fc 01       	movw	r30, r24
    1648:	20 83       	st	Z, r18
    164a:	01 96       	adiw	r24, 0x01	; 1
    164c:	f8 cf       	rjmp	.-16     	; 0x163e <Recv(unsigned char volatile*, unsigned char)>
    164e:	28 98       	cbi	0x05, 0	; 5
    1650:	84 e6       	ldi	r24, 0x64	; 100
    1652:	80 93 74 03 	sts	0x0374, r24
    1656:	08 95       	ret

00001658 <LockEP::LockEP(unsigned char)>:
    1658:	2f b7       	in	r18, 0x3f	; 63
    165a:	fc 01       	movw	r30, r24
    165c:	20 83       	st	Z, r18
    165e:	f8 94       	cli
    1660:	67 70       	andi	r22, 0x07	; 7
    1662:	60 93 e9 00 	sts	0x00E9, r22
    1666:	08 95       	ret

00001668 <USB_Available(unsigned char)>:
    1668:	cf 93       	push	r28
    166a:	df 93       	push	r29
    166c:	1f 92       	push	r1
    166e:	cd b7       	in	r28, 0x3d	; 61
    1670:	de b7       	in	r29, 0x3e	; 62
    1672:	68 2f       	mov	r22, r24
    1674:	ce 01       	movw	r24, r28
    1676:	01 96       	adiw	r24, 0x01	; 1
    1678:	0e 94 2c 0b 	call	0x1658	; 0x1658 <LockEP::LockEP(unsigned char)>
    167c:	80 91 f2 00 	lds	r24, 0x00F2
    1680:	99 81       	ldd	r25, Y+1	; 0x01
    1682:	9f bf       	out	0x3f, r25	; 63
    1684:	0f 90       	pop	r0
    1686:	df 91       	pop	r29
    1688:	cf 91       	pop	r28
    168a:	08 95       	ret

0000168c <USB_Recv(unsigned char, void*, int)>:
    168c:	ff 92       	push	r15
    168e:	0f 93       	push	r16
    1690:	1f 93       	push	r17
    1692:	cf 93       	push	r28
    1694:	df 93       	push	r29
    1696:	00 d0       	rcall	.+0      	; 0x1698 <USB_Recv(unsigned char, void*, int)+0xc>
    1698:	cd b7       	in	r28, 0x3d	; 61
    169a:	de b7       	in	r29, 0x3e	; 62
    169c:	f6 2e       	mov	r15, r22
    169e:	8a 01       	movw	r16, r20
    16a0:	90 91 73 03 	lds	r25, 0x0373
    16a4:	99 23       	and	r25, r25
    16a6:	11 f0       	breq	.+4      	; 0x16ac <USB_Recv(unsigned char, void*, int)+0x20>
    16a8:	57 ff       	sbrs	r21, 7
    16aa:	03 c0       	rjmp	.+6      	; 0x16b2 <USB_Recv(unsigned char, void*, int)+0x26>
    16ac:	8f ef       	ldi	r24, 0xFF	; 255
    16ae:	9f ef       	ldi	r25, 0xFF	; 255
    16b0:	2b c0       	rjmp	.+86     	; 0x1708 <USB_Recv(unsigned char, void*, int)+0x7c>
    16b2:	68 2f       	mov	r22, r24
    16b4:	ce 01       	movw	r24, r28
    16b6:	01 96       	adiw	r24, 0x01	; 1
    16b8:	7a 83       	std	Y+2, r23	; 0x02
    16ba:	0e 94 2c 0b 	call	0x1658	; 0x1658 <LockEP::LockEP(unsigned char)>
    16be:	80 91 f2 00 	lds	r24, 0x00F2
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	a8 01       	movw	r20, r16
    16c6:	7a 81       	ldd	r23, Y+2	; 0x02
    16c8:	80 17       	cp	r24, r16
    16ca:	91 07       	cpc	r25, r17
    16cc:	0c f4       	brge	.+2      	; 0x16d0 <USB_Recv(unsigned char, void*, int)+0x44>
    16ce:	ac 01       	movw	r20, r24
    16d0:	ef 2d       	mov	r30, r15
    16d2:	f7 2f       	mov	r31, r23
    16d4:	f4 0e       	add	r15, r20
    16d6:	84 e6       	ldi	r24, 0x64	; 100
    16d8:	fe 16       	cp	r15, r30
    16da:	39 f0       	breq	.+14     	; 0x16ea <USB_Recv(unsigned char, void*, int)+0x5e>
    16dc:	28 98       	cbi	0x05, 0	; 5
    16de:	80 93 74 03 	sts	0x0374, r24
    16e2:	90 91 f1 00 	lds	r25, 0x00F1
    16e6:	91 93       	st	Z+, r25
    16e8:	f7 cf       	rjmp	.-18     	; 0x16d8 <USB_Recv(unsigned char, void*, int)+0x4c>
    16ea:	41 15       	cp	r20, r1
    16ec:	51 05       	cpc	r21, r1
    16ee:	21 f0       	breq	.+8      	; 0x16f8 <USB_Recv(unsigned char, void*, int)+0x6c>
    16f0:	80 91 f2 00 	lds	r24, 0x00F2
    16f4:	88 23       	and	r24, r24
    16f6:	21 f0       	breq	.+8      	; 0x1700 <USB_Recv(unsigned char, void*, int)+0x74>
    16f8:	89 81       	ldd	r24, Y+1	; 0x01
    16fa:	8f bf       	out	0x3f, r24	; 63
    16fc:	ca 01       	movw	r24, r20
    16fe:	04 c0       	rjmp	.+8      	; 0x1708 <USB_Recv(unsigned char, void*, int)+0x7c>
    1700:	8b e6       	ldi	r24, 0x6B	; 107
    1702:	80 93 e8 00 	sts	0x00E8, r24
    1706:	f8 cf       	rjmp	.-16     	; 0x16f8 <USB_Recv(unsigned char, void*, int)+0x6c>
    1708:	0f 90       	pop	r0
    170a:	0f 90       	pop	r0
    170c:	df 91       	pop	r29
    170e:	cf 91       	pop	r28
    1710:	1f 91       	pop	r17
    1712:	0f 91       	pop	r16
    1714:	ff 90       	pop	r15
    1716:	08 95       	ret

00001718 <USB_Recv(unsigned char)>:
    1718:	cf 93       	push	r28
    171a:	df 93       	push	r29
    171c:	1f 92       	push	r1
    171e:	cd b7       	in	r28, 0x3d	; 61
    1720:	de b7       	in	r29, 0x3e	; 62
    1722:	41 e0       	ldi	r20, 0x01	; 1
    1724:	50 e0       	ldi	r21, 0x00	; 0
    1726:	be 01       	movw	r22, r28
    1728:	6f 5f       	subi	r22, 0xFF	; 255
    172a:	7f 4f       	sbci	r23, 0xFF	; 255
    172c:	0e 94 46 0b 	call	0x168c	; 0x168c <USB_Recv(unsigned char, void*, int)>
    1730:	01 97       	sbiw	r24, 0x01	; 1
    1732:	19 f4       	brne	.+6      	; 0x173a <USB_Recv(unsigned char)+0x22>
    1734:	89 81       	ldd	r24, Y+1	; 0x01
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	02 c0       	rjmp	.+4      	; 0x173e <USB_Recv(unsigned char)+0x26>
    173a:	8f ef       	ldi	r24, 0xFF	; 255
    173c:	9f ef       	ldi	r25, 0xFF	; 255
    173e:	0f 90       	pop	r0
    1740:	df 91       	pop	r29
    1742:	cf 91       	pop	r28
    1744:	08 95       	ret

00001746 <USB_SendSpace(unsigned char)>:
    1746:	cf 93       	push	r28
    1748:	df 93       	push	r29
    174a:	1f 92       	push	r1
    174c:	cd b7       	in	r28, 0x3d	; 61
    174e:	de b7       	in	r29, 0x3e	; 62
    1750:	68 2f       	mov	r22, r24
    1752:	ce 01       	movw	r24, r28
    1754:	01 96       	adiw	r24, 0x01	; 1
    1756:	0e 94 2c 0b 	call	0x1658	; 0x1658 <LockEP::LockEP(unsigned char)>
    175a:	90 91 e8 00 	lds	r25, 0x00E8
    175e:	89 2f       	mov	r24, r25
    1760:	80 72       	andi	r24, 0x20	; 32
    1762:	95 ff       	sbrs	r25, 5
    1764:	04 c0       	rjmp	.+8      	; 0x176e <USB_SendSpace(unsigned char)+0x28>
    1766:	90 91 f2 00 	lds	r25, 0x00F2
    176a:	80 e4       	ldi	r24, 0x40	; 64
    176c:	89 1b       	sub	r24, r25
    176e:	99 81       	ldd	r25, Y+1	; 0x01
    1770:	9f bf       	out	0x3f, r25	; 63
    1772:	0f 90       	pop	r0
    1774:	df 91       	pop	r29
    1776:	cf 91       	pop	r28
    1778:	08 95       	ret

0000177a <USB_Send(unsigned char, void const*, int)>:
    177a:	6f 92       	push	r6
    177c:	7f 92       	push	r7
    177e:	8f 92       	push	r8
    1780:	9f 92       	push	r9
    1782:	af 92       	push	r10
    1784:	bf 92       	push	r11
    1786:	cf 92       	push	r12
    1788:	df 92       	push	r13
    178a:	ef 92       	push	r14
    178c:	ff 92       	push	r15
    178e:	0f 93       	push	r16
    1790:	1f 93       	push	r17
    1792:	cf 93       	push	r28
    1794:	df 93       	push	r29
    1796:	1f 92       	push	r1
    1798:	cd b7       	in	r28, 0x3d	; 61
    179a:	de b7       	in	r29, 0x3e	; 62
    179c:	78 2e       	mov	r7, r24
    179e:	7b 01       	movw	r14, r22
    17a0:	c4 2e       	mov	r12, r20
    17a2:	b5 2e       	mov	r11, r21
    17a4:	80 91 73 03 	lds	r24, 0x0373
    17a8:	88 23       	and	r24, r24
    17aa:	69 f0       	breq	.+26     	; 0x17c6 <USB_Send(unsigned char, void const*, int)+0x4c>
    17ac:	04 2f       	mov	r16, r20
    17ae:	15 2f       	mov	r17, r21
    17b0:	8a ef       	ldi	r24, 0xFA	; 250
    17b2:	d8 2e       	mov	r13, r24
    17b4:	87 2d       	mov	r24, r7
    17b6:	80 72       	andi	r24, 0x20	; 32
    17b8:	98 2e       	mov	r9, r24
    17ba:	9a e3       	ldi	r25, 0x3A	; 58
    17bc:	a9 2e       	mov	r10, r25
    17be:	87 2d       	mov	r24, r7
    17c0:	80 74       	andi	r24, 0x40	; 64
    17c2:	88 2e       	mov	r8, r24
    17c4:	11 c0       	rjmp	.+34     	; 0x17e8 <USB_Send(unsigned char, void const*, int)+0x6e>
    17c6:	8f ef       	ldi	r24, 0xFF	; 255
    17c8:	9f ef       	ldi	r25, 0xFF	; 255
    17ca:	57 c0       	rjmp	.+174    	; 0x187a <USB_Send(unsigned char, void const*, int)+0x100>
    17cc:	87 2d       	mov	r24, r7
    17ce:	0e 94 a3 0b 	call	0x1746	; 0x1746 <USB_SendSpace(unsigned char)>
    17d2:	68 2e       	mov	r6, r24
    17d4:	81 11       	cpse	r24, r1
    17d6:	0c c0       	rjmp	.+24     	; 0x17f0 <USB_Send(unsigned char, void const*, int)+0x76>
    17d8:	da 94       	dec	r13
    17da:	a9 f3       	breq	.-22     	; 0x17c6 <USB_Send(unsigned char, void const*, int)+0x4c>
    17dc:	61 e0       	ldi	r22, 0x01	; 1
    17de:	70 e0       	ldi	r23, 0x00	; 0
    17e0:	80 e0       	ldi	r24, 0x00	; 0
    17e2:	90 e0       	ldi	r25, 0x00	; 0
    17e4:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
    17e8:	01 15       	cp	r16, r1
    17ea:	11 05       	cpc	r17, r1
    17ec:	79 f7       	brne	.-34     	; 0x17cc <USB_Send(unsigned char, void const*, int)+0x52>
    17ee:	3b c0       	rjmp	.+118    	; 0x1866 <USB_Send(unsigned char, void const*, int)+0xec>
    17f0:	28 2f       	mov	r18, r24
    17f2:	30 e0       	ldi	r19, 0x00	; 0
    17f4:	02 17       	cp	r16, r18
    17f6:	13 07       	cpc	r17, r19
    17f8:	0c f4       	brge	.+2      	; 0x17fc <USB_Send(unsigned char, void const*, int)+0x82>
    17fa:	60 2e       	mov	r6, r16
    17fc:	67 2d       	mov	r22, r7
    17fe:	ce 01       	movw	r24, r28
    1800:	01 96       	adiw	r24, 0x01	; 1
    1802:	0e 94 2c 0b 	call	0x1658	; 0x1658 <LockEP::LockEP(unsigned char)>
    1806:	80 91 e8 00 	lds	r24, 0x00E8
    180a:	85 ff       	sbrs	r24, 5
    180c:	29 c0       	rjmp	.+82     	; 0x1860 <USB_Send(unsigned char, void const*, int)+0xe6>
    180e:	26 2d       	mov	r18, r6
    1810:	30 e0       	ldi	r19, 0x00	; 0
    1812:	02 1b       	sub	r16, r18
    1814:	13 0b       	sbc	r17, r19
    1816:	99 20       	and	r9, r9
    1818:	39 f0       	breq	.+14     	; 0x1828 <USB_Send(unsigned char, void const*, int)+0xae>
    181a:	6a 94       	dec	r6
    181c:	8f ef       	ldi	r24, 0xFF	; 255
    181e:	68 16       	cp	r6, r24
    1820:	b1 f0       	breq	.+44     	; 0x184e <USB_Send(unsigned char, void const*, int)+0xd4>
    1822:	10 92 f1 00 	sts	0x00F1, r1
    1826:	f9 cf       	rjmp	.-14     	; 0x181a <USB_Send(unsigned char, void const*, int)+0xa0>
    1828:	f7 01       	movw	r30, r14
    182a:	86 2d       	mov	r24, r6
    182c:	77 fe       	sbrs	r7, 7
    182e:	07 c0       	rjmp	.+14     	; 0x183e <USB_Send(unsigned char, void const*, int)+0xc4>
    1830:	81 50       	subi	r24, 0x01	; 1
    1832:	58 f0       	brcs	.+22     	; 0x184a <USB_Send(unsigned char, void const*, int)+0xd0>
    1834:	94 91       	lpm	r25, Z
    1836:	90 93 f1 00 	sts	0x00F1, r25
    183a:	31 96       	adiw	r30, 0x01	; 1
    183c:	f9 cf       	rjmp	.-14     	; 0x1830 <USB_Send(unsigned char, void const*, int)+0xb6>
    183e:	81 50       	subi	r24, 0x01	; 1
    1840:	20 f0       	brcs	.+8      	; 0x184a <USB_Send(unsigned char, void const*, int)+0xd0>
    1842:	91 91       	ld	r25, Z+
    1844:	90 93 f1 00 	sts	0x00F1, r25
    1848:	fa cf       	rjmp	.-12     	; 0x183e <USB_Send(unsigned char, void const*, int)+0xc4>
    184a:	e2 0e       	add	r14, r18
    184c:	f3 1e       	adc	r15, r19
    184e:	80 91 e8 00 	lds	r24, 0x00E8
    1852:	85 ff       	sbrs	r24, 5
    1854:	0f c0       	rjmp	.+30     	; 0x1874 <USB_Send(unsigned char, void const*, int)+0xfa>
    1856:	01 15       	cp	r16, r1
    1858:	11 05       	cpc	r17, r1
    185a:	11 f4       	brne	.+4      	; 0x1860 <USB_Send(unsigned char, void const*, int)+0xe6>
    185c:	81 10       	cpse	r8, r1
    185e:	0a c0       	rjmp	.+20     	; 0x1874 <USB_Send(unsigned char, void const*, int)+0xfa>
    1860:	89 81       	ldd	r24, Y+1	; 0x01
    1862:	8f bf       	out	0x3f, r24	; 63
    1864:	c1 cf       	rjmp	.-126    	; 0x17e8 <USB_Send(unsigned char, void const*, int)+0x6e>
    1866:	5d 98       	cbi	0x0b, 5	; 11
    1868:	84 e6       	ldi	r24, 0x64	; 100
    186a:	80 93 75 03 	sts	0x0375, r24
    186e:	8c 2d       	mov	r24, r12
    1870:	9b 2d       	mov	r25, r11
    1872:	03 c0       	rjmp	.+6      	; 0x187a <USB_Send(unsigned char, void const*, int)+0x100>
    1874:	a0 92 e8 00 	sts	0x00E8, r10
    1878:	f3 cf       	rjmp	.-26     	; 0x1860 <USB_Send(unsigned char, void const*, int)+0xe6>
    187a:	0f 90       	pop	r0
    187c:	df 91       	pop	r29
    187e:	cf 91       	pop	r28
    1880:	1f 91       	pop	r17
    1882:	0f 91       	pop	r16
    1884:	ff 90       	pop	r15
    1886:	ef 90       	pop	r14
    1888:	df 90       	pop	r13
    188a:	cf 90       	pop	r12
    188c:	bf 90       	pop	r11
    188e:	af 90       	pop	r10
    1890:	9f 90       	pop	r9
    1892:	8f 90       	pop	r8
    1894:	7f 90       	pop	r7
    1896:	6f 90       	pop	r6
    1898:	08 95       	ret

0000189a <InitControl(int)>:
    189a:	10 92 e9 00 	sts	0x00E9, r1
    189e:	10 92 72 03 	sts	0x0372, r1
    18a2:	10 92 71 03 	sts	0x0371, r1
    18a6:	90 93 70 03 	sts	0x0370, r25
    18aa:	80 93 6f 03 	sts	0x036F, r24
    18ae:	08 95       	ret

000018b0 <USB_SendControl(unsigned char, void const*, int)>:
    18b0:	cf 92       	push	r12
    18b2:	df 92       	push	r13
    18b4:	ff 92       	push	r15
    18b6:	0f 93       	push	r16
    18b8:	1f 93       	push	r17
    18ba:	cf 93       	push	r28
    18bc:	df 93       	push	r29
    18be:	00 d0       	rcall	.+0      	; 0x18c0 <USB_SendControl(unsigned char, void const*, int)+0x10>
    18c0:	cd b7       	in	r28, 0x3d	; 61
    18c2:	de b7       	in	r29, 0x3e	; 62
    18c4:	f8 2e       	mov	r15, r24
    18c6:	8a 01       	movw	r16, r20
    18c8:	6b 01       	movw	r12, r22
    18ca:	01 15       	cp	r16, r1
    18cc:	11 05       	cpc	r17, r1
    18ce:	b1 f0       	breq	.+44     	; 0x18fc <USB_SendControl(unsigned char, void const*, int)+0x4c>
    18d0:	f6 01       	movw	r30, r12
    18d2:	f7 fe       	sbrs	r15, 7
    18d4:	02 c0       	rjmp	.+4      	; 0x18da <USB_SendControl(unsigned char, void const*, int)+0x2a>
    18d6:	84 91       	lpm	r24, Z
    18d8:	01 c0       	rjmp	.+2      	; 0x18dc <USB_SendControl(unsigned char, void const*, int)+0x2c>
    18da:	80 81       	ld	r24, Z
    18dc:	49 83       	std	Y+1, r20	; 0x01
    18de:	5a 83       	std	Y+2, r21	; 0x02
    18e0:	0e 94 bb 0a 	call	0x1576	; 0x1576 <SendControl(unsigned char)>
    18e4:	01 50       	subi	r16, 0x01	; 1
    18e6:	11 09       	sbc	r17, r1
    18e8:	ff ef       	ldi	r31, 0xFF	; 255
    18ea:	cf 1a       	sub	r12, r31
    18ec:	df 0a       	sbc	r13, r31
    18ee:	49 81       	ldd	r20, Y+1	; 0x01
    18f0:	5a 81       	ldd	r21, Y+2	; 0x02
    18f2:	81 11       	cpse	r24, r1
    18f4:	ea cf       	rjmp	.-44     	; 0x18ca <USB_SendControl(unsigned char, void const*, int)+0x1a>
    18f6:	8f ef       	ldi	r24, 0xFF	; 255
    18f8:	9f ef       	ldi	r25, 0xFF	; 255
    18fa:	01 c0       	rjmp	.+2      	; 0x18fe <USB_SendControl(unsigned char, void const*, int)+0x4e>
    18fc:	ca 01       	movw	r24, r20
    18fe:	0f 90       	pop	r0
    1900:	0f 90       	pop	r0
    1902:	df 91       	pop	r29
    1904:	cf 91       	pop	r28
    1906:	1f 91       	pop	r17
    1908:	0f 91       	pop	r16
    190a:	ff 90       	pop	r15
    190c:	df 90       	pop	r13
    190e:	cf 90       	pop	r12
    1910:	08 95       	ret

00001912 <USB_RecvControl(void*, int)>:
    1912:	1f 93       	push	r17
    1914:	cf 93       	push	r28
    1916:	df 93       	push	r29
    1918:	1f 92       	push	r1
    191a:	cd b7       	in	r28, 0x3d	; 61
    191c:	de b7       	in	r29, 0x3e	; 62
    191e:	16 2f       	mov	r17, r22
    1920:	20 91 e8 00 	lds	r18, 0x00E8
    1924:	22 ff       	sbrs	r18, 2
    1926:	fc cf       	rjmp	.-8      	; 0x1920 <USB_RecvControl(void*, int)+0xe>
    1928:	61 2f       	mov	r22, r17
    192a:	79 83       	std	Y+1, r23	; 0x01
    192c:	0e 94 1f 0b 	call	0x163e	; 0x163e <Recv(unsigned char volatile*, unsigned char)>
    1930:	8b ef       	ldi	r24, 0xFB	; 251
    1932:	80 93 e8 00 	sts	0x00E8, r24
    1936:	81 2f       	mov	r24, r17
    1938:	79 81       	ldd	r23, Y+1	; 0x01
    193a:	97 2f       	mov	r25, r23
    193c:	0f 90       	pop	r0
    193e:	df 91       	pop	r29
    1940:	cf 91       	pop	r28
    1942:	1f 91       	pop	r17
    1944:	08 95       	ret

00001946 <SendInterfaces()>:
    1946:	cf 93       	push	r28
    1948:	df 93       	push	r29
    194a:	1f 92       	push	r1
    194c:	cd b7       	in	r28, 0x3d	; 61
    194e:	de b7       	in	r29, 0x3e	; 62
    1950:	19 82       	std	Y+1, r1	; 0x01
    1952:	ce 01       	movw	r24, r28
    1954:	01 96       	adiw	r24, 0x01	; 1
    1956:	0e 94 63 07 	call	0xec6	; 0xec6 <CDC_GetInterface(unsigned char*)>
    195a:	ce 01       	movw	r24, r28
    195c:	01 96       	adiw	r24, 0x01	; 1
    195e:	0e 94 a7 15 	call	0x2b4e	; 0x2b4e <HID_GetInterface(unsigned char*)>
    1962:	89 81       	ldd	r24, Y+1	; 0x01
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	0f 90       	pop	r0
    1968:	df 91       	pop	r29
    196a:	cf 91       	pop	r28
    196c:	08 95       	ret

0000196e <__vector_11>:
    196e:	1f 92       	push	r1
    1970:	0f 92       	push	r0
    1972:	0f b6       	in	r0, 0x3f	; 63
    1974:	0f 92       	push	r0
    1976:	11 24       	eor	r1, r1
    1978:	ef 92       	push	r14
    197a:	ff 92       	push	r15
    197c:	0f 93       	push	r16
    197e:	1f 93       	push	r17
    1980:	2f 93       	push	r18
    1982:	3f 93       	push	r19
    1984:	4f 93       	push	r20
    1986:	5f 93       	push	r21
    1988:	6f 93       	push	r22
    198a:	7f 93       	push	r23
    198c:	8f 93       	push	r24
    198e:	9f 93       	push	r25
    1990:	af 93       	push	r26
    1992:	bf 93       	push	r27
    1994:	ef 93       	push	r30
    1996:	ff 93       	push	r31
    1998:	cf 93       	push	r28
    199a:	df 93       	push	r29
    199c:	cd b7       	in	r28, 0x3d	; 61
    199e:	de b7       	in	r29, 0x3e	; 62
    19a0:	62 97       	sbiw	r28, 0x12	; 18
    19a2:	de bf       	out	0x3e, r29	; 62
    19a4:	cd bf       	out	0x3d, r28	; 61
    19a6:	10 92 e9 00 	sts	0x00E9, r1
    19aa:	80 91 e8 00 	lds	r24, 0x00E8
    19ae:	83 ff       	sbrs	r24, 3
    19b0:	eb c0       	rjmp	.+470    	; 0x1b88 <__vector_11+0x21a>
    19b2:	68 e0       	ldi	r22, 0x08	; 8
    19b4:	ce 01       	movw	r24, r28
    19b6:	0a 96       	adiw	r24, 0x0a	; 10
    19b8:	0e 94 1f 0b 	call	0x163e	; 0x163e <Recv(unsigned char volatile*, unsigned char)>
    19bc:	82 ef       	ldi	r24, 0xF2	; 242
    19be:	80 93 e8 00 	sts	0x00E8, r24
    19c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    19c4:	97 ff       	sbrs	r25, 7
    19c6:	05 c0       	rjmp	.+10     	; 0x19d2 <__vector_11+0x64>
    19c8:	80 91 e8 00 	lds	r24, 0x00E8
    19cc:	80 ff       	sbrs	r24, 0
    19ce:	fc cf       	rjmp	.-8      	; 0x19c8 <__vector_11+0x5a>
    19d0:	03 c0       	rjmp	.+6      	; 0x19d8 <__vector_11+0x6a>
    19d2:	8e ef       	ldi	r24, 0xFE	; 254
    19d4:	80 93 e8 00 	sts	0x00E8, r24
    19d8:	89 2f       	mov	r24, r25
    19da:	80 76       	andi	r24, 0x60	; 96
    19dc:	09 f0       	breq	.+2      	; 0x19e0 <__vector_11+0x72>
    19de:	b9 c0       	rjmp	.+370    	; 0x1b52 <__vector_11+0x1e4>
    19e0:	8b 85       	ldd	r24, Y+11	; 0x0b
    19e2:	81 11       	cpse	r24, r1
    19e4:	05 c0       	rjmp	.+10     	; 0x19f0 <__vector_11+0x82>
    19e6:	10 92 f1 00 	sts	0x00F1, r1
    19ea:	10 92 f1 00 	sts	0x00F1, r1
    19ee:	c5 c0       	rjmp	.+394    	; 0x1b7a <__vector_11+0x20c>
    19f0:	28 2f       	mov	r18, r24
    19f2:	2d 7f       	andi	r18, 0xFD	; 253
    19f4:	21 30       	cpi	r18, 0x01	; 1
    19f6:	09 f4       	brne	.+2      	; 0x19fa <__vector_11+0x8c>
    19f8:	c0 c0       	rjmp	.+384    	; 0x1b7a <__vector_11+0x20c>
    19fa:	85 30       	cpi	r24, 0x05	; 5
    19fc:	49 f4       	brne	.+18     	; 0x1a10 <__vector_11+0xa2>
    19fe:	80 91 e8 00 	lds	r24, 0x00E8
    1a02:	80 ff       	sbrs	r24, 0
    1a04:	fc cf       	rjmp	.-8      	; 0x19fe <__vector_11+0x90>
    1a06:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a08:	80 68       	ori	r24, 0x80	; 128
    1a0a:	80 93 e3 00 	sts	0x00E3, r24
    1a0e:	b5 c0       	rjmp	.+362    	; 0x1b7a <__vector_11+0x20c>
    1a10:	86 30       	cpi	r24, 0x06	; 6
    1a12:	09 f0       	breq	.+2      	; 0x1a16 <__vector_11+0xa8>
    1a14:	76 c0       	rjmp	.+236    	; 0x1b02 <__vector_11+0x194>
    1a16:	2d 85       	ldd	r18, Y+13	; 0x0d
    1a18:	e8 88       	ldd	r14, Y+16	; 0x10
    1a1a:	f9 88       	ldd	r15, Y+17	; 0x11
    1a1c:	22 30       	cpi	r18, 0x02	; 2
    1a1e:	71 f5       	brne	.+92     	; 0x1a7c <__vector_11+0x10e>
    1a20:	80 e0       	ldi	r24, 0x00	; 0
    1a22:	90 e0       	ldi	r25, 0x00	; 0
    1a24:	2a 8b       	std	Y+18, r18	; 0x12
    1a26:	0e 94 4d 0c 	call	0x189a	; 0x189a <InitControl(int)>
    1a2a:	0e 94 a3 0c 	call	0x1946	; 0x1946 <SendInterfaces()>
    1a2e:	99 e0       	ldi	r25, 0x09	; 9
    1a30:	8e 01       	movw	r16, r28
    1a32:	0f 5f       	subi	r16, 0xFF	; 255
    1a34:	1f 4f       	sbci	r17, 0xFF	; 255
    1a36:	f8 01       	movw	r30, r16
    1a38:	39 2f       	mov	r19, r25
    1a3a:	11 92       	st	Z+, r1
    1a3c:	3a 95       	dec	r19
    1a3e:	e9 f7       	brne	.-6      	; 0x1a3a <__vector_11+0xcc>
    1a40:	99 83       	std	Y+1, r25	; 0x01
    1a42:	2a 89       	ldd	r18, Y+18	; 0x12
    1a44:	2a 83       	std	Y+2, r18	; 0x02
    1a46:	91 e0       	ldi	r25, 0x01	; 1
    1a48:	9e 83       	std	Y+6, r25	; 0x06
    1a4a:	90 e8       	ldi	r25, 0x80	; 128
    1a4c:	98 87       	std	Y+8, r25	; 0x08
    1a4e:	9a ef       	ldi	r25, 0xFA	; 250
    1a50:	99 87       	std	Y+9, r25	; 0x09
    1a52:	20 91 71 03 	lds	r18, 0x0371
    1a56:	30 91 72 03 	lds	r19, 0x0372
    1a5a:	27 5f       	subi	r18, 0xF7	; 247
    1a5c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a5e:	3c 83       	std	Y+4, r19	; 0x04
    1a60:	2b 83       	std	Y+3, r18	; 0x03
    1a62:	8d 83       	std	Y+5, r24	; 0x05
    1a64:	c7 01       	movw	r24, r14
    1a66:	0e 94 4d 0c 	call	0x189a	; 0x189a <InitControl(int)>
    1a6a:	49 e0       	ldi	r20, 0x09	; 9
    1a6c:	50 e0       	ldi	r21, 0x00	; 0
    1a6e:	b8 01       	movw	r22, r16
    1a70:	80 e0       	ldi	r24, 0x00	; 0
    1a72:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <USB_SendControl(unsigned char, void const*, int)>
    1a76:	0e 94 a3 0c 	call	0x1946	; 0x1946 <SendInterfaces()>
    1a7a:	7f c0       	rjmp	.+254    	; 0x1b7a <__vector_11+0x20c>
    1a7c:	c7 01       	movw	r24, r14
    1a7e:	2a 8b       	std	Y+18, r18	; 0x12
    1a80:	0e 94 4d 0c 	call	0x189a	; 0x189a <InitControl(int)>
    1a84:	2a 89       	ldd	r18, Y+18	; 0x12
    1a86:	22 32       	cpi	r18, 0x22	; 34
    1a88:	41 f4       	brne	.+16     	; 0x1a9a <__vector_11+0x12c>
    1a8a:	82 e2       	ldi	r24, 0x22	; 34
    1a8c:	90 e0       	ldi	r25, 0x00	; 0
    1a8e:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <HID_GetDescriptor(int)>
    1a92:	89 2b       	or	r24, r25
    1a94:	09 f0       	breq	.+2      	; 0x1a98 <__vector_11+0x12a>
    1a96:	71 c0       	rjmp	.+226    	; 0x1b7a <__vector_11+0x20c>
    1a98:	74 c0       	rjmp	.+232    	; 0x1b82 <__vector_11+0x214>
    1a9a:	21 30       	cpi	r18, 0x01	; 1
    1a9c:	69 f4       	brne	.+26     	; 0x1ab8 <__vector_11+0x14a>
    1a9e:	88 89       	ldd	r24, Y+16	; 0x10
    1aa0:	99 89       	ldd	r25, Y+17	; 0x11
    1aa2:	08 97       	sbiw	r24, 0x08	; 8
    1aa4:	11 f4       	brne	.+4      	; 0x1aaa <__vector_11+0x13c>
    1aa6:	20 93 6e 03 	sts	0x036E, r18
    1aaa:	80 91 6e 03 	lds	r24, 0x036E
    1aae:	81 11       	cpse	r24, r1
    1ab0:	18 c0       	rjmp	.+48     	; 0x1ae2 <__vector_11+0x174>
    1ab2:	65 e0       	ldi	r22, 0x05	; 5
    1ab4:	71 e0       	ldi	r23, 0x01	; 1
    1ab6:	1a c0       	rjmp	.+52     	; 0x1aec <__vector_11+0x17e>
    1ab8:	23 30       	cpi	r18, 0x03	; 3
    1aba:	09 f0       	breq	.+2      	; 0x1abe <__vector_11+0x150>
    1abc:	62 c0       	rjmp	.+196    	; 0x1b82 <__vector_11+0x214>
    1abe:	8c 85       	ldd	r24, Y+12	; 0x0c
    1ac0:	88 23       	and	r24, r24
    1ac2:	91 f0       	breq	.+36     	; 0x1ae8 <__vector_11+0x17a>
    1ac4:	82 30       	cpi	r24, 0x02	; 2
    1ac6:	21 f4       	brne	.+8      	; 0x1ad0 <__vector_11+0x162>
    1ac8:	6c e0       	ldi	r22, 0x0C	; 12
    1aca:	83 e2       	ldi	r24, 0x23	; 35
    1acc:	91 e0       	ldi	r25, 0x01	; 1
    1ace:	06 c0       	rjmp	.+12     	; 0x1adc <__vector_11+0x16e>
    1ad0:	81 30       	cpi	r24, 0x01	; 1
    1ad2:	09 f0       	breq	.+2      	; 0x1ad6 <__vector_11+0x168>
    1ad4:	56 c0       	rjmp	.+172    	; 0x1b82 <__vector_11+0x214>
    1ad6:	6b e0       	ldi	r22, 0x0B	; 11
    1ad8:	87 e1       	ldi	r24, 0x17	; 23
    1ada:	91 e0       	ldi	r25, 0x01	; 1
    1adc:	0e 94 e9 0a 	call	0x15d2	; 0x15d2 <USB_SendStringDescriptor(unsigned char const*, unsigned char)>
    1ae0:	4a c0       	rjmp	.+148    	; 0x1b76 <__vector_11+0x208>
    1ae2:	63 ef       	ldi	r22, 0xF3	; 243
    1ae4:	70 e0       	ldi	r23, 0x00	; 0
    1ae6:	02 c0       	rjmp	.+4      	; 0x1aec <__vector_11+0x17e>
    1ae8:	60 e3       	ldi	r22, 0x30	; 48
    1aea:	71 e0       	ldi	r23, 0x01	; 1
    1aec:	61 15       	cp	r22, r1
    1aee:	71 05       	cpc	r23, r1
    1af0:	09 f4       	brne	.+2      	; 0x1af4 <__vector_11+0x186>
    1af2:	47 c0       	rjmp	.+142    	; 0x1b82 <__vector_11+0x214>
    1af4:	fb 01       	movw	r30, r22
    1af6:	44 91       	lpm	r20, Z
    1af8:	50 e0       	ldi	r21, 0x00	; 0
    1afa:	80 e8       	ldi	r24, 0x80	; 128
    1afc:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <USB_SendControl(unsigned char, void const*, int)>
    1b00:	3c c0       	rjmp	.+120    	; 0x1b7a <__vector_11+0x20c>
    1b02:	87 30       	cpi	r24, 0x07	; 7
    1b04:	09 f4       	brne	.+2      	; 0x1b08 <__vector_11+0x19a>
    1b06:	3d c0       	rjmp	.+122    	; 0x1b82 <__vector_11+0x214>
    1b08:	88 30       	cpi	r24, 0x08	; 8
    1b0a:	21 f4       	brne	.+8      	; 0x1b14 <__vector_11+0x1a6>
    1b0c:	81 e0       	ldi	r24, 0x01	; 1
    1b0e:	80 93 f1 00 	sts	0x00F1, r24
    1b12:	33 c0       	rjmp	.+102    	; 0x1b7a <__vector_11+0x20c>
    1b14:	89 30       	cpi	r24, 0x09	; 9
    1b16:	89 f5       	brne	.+98     	; 0x1b7a <__vector_11+0x20c>
    1b18:	93 70       	andi	r25, 0x03	; 3
    1b1a:	99 f5       	brne	.+102    	; 0x1b82 <__vector_11+0x214>
    1b1c:	ef ee       	ldi	r30, 0xEF	; 239
    1b1e:	f0 e0       	ldi	r31, 0x00	; 0
    1b20:	81 e0       	ldi	r24, 0x01	; 1
    1b22:	21 e0       	ldi	r18, 0x01	; 1
    1b24:	96 e3       	ldi	r25, 0x36	; 54
    1b26:	80 93 e9 00 	sts	0x00E9, r24
    1b2a:	20 93 eb 00 	sts	0x00EB, r18
    1b2e:	34 91       	lpm	r19, Z
    1b30:	30 93 ec 00 	sts	0x00EC, r19
    1b34:	90 93 ed 00 	sts	0x00ED, r25
    1b38:	8f 5f       	subi	r24, 0xFF	; 255
    1b3a:	31 96       	adiw	r30, 0x01	; 1
    1b3c:	85 30       	cpi	r24, 0x05	; 5
    1b3e:	99 f7       	brne	.-26     	; 0x1b26 <__vector_11+0x1b8>
    1b40:	8e e7       	ldi	r24, 0x7E	; 126
    1b42:	80 93 ea 00 	sts	0x00EA, r24
    1b46:	10 92 ea 00 	sts	0x00EA, r1
    1b4a:	8c 85       	ldd	r24, Y+12	; 0x0c
    1b4c:	80 93 73 03 	sts	0x0373, r24
    1b50:	14 c0       	rjmp	.+40     	; 0x1b7a <__vector_11+0x20c>
    1b52:	88 89       	ldd	r24, Y+16	; 0x10
    1b54:	99 89       	ldd	r25, Y+17	; 0x11
    1b56:	0e 94 4d 0c 	call	0x189a	; 0x189a <InitControl(int)>
    1b5a:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b5c:	81 11       	cpse	r24, r1
    1b5e:	05 c0       	rjmp	.+10     	; 0x1b6a <__vector_11+0x1fc>
    1b60:	ce 01       	movw	r24, r28
    1b62:	0a 96       	adiw	r24, 0x0a	; 10
    1b64:	0e 94 6e 07 	call	0xedc	; 0xedc <CDC_Setup(Setup&)>
    1b68:	06 c0       	rjmp	.+12     	; 0x1b76 <__vector_11+0x208>
    1b6a:	82 30       	cpi	r24, 0x02	; 2
    1b6c:	51 f4       	brne	.+20     	; 0x1b82 <__vector_11+0x214>
    1b6e:	ce 01       	movw	r24, r28
    1b70:	0a 96       	adiw	r24, 0x0a	; 10
    1b72:	0e 94 da 15 	call	0x2bb4	; 0x2bb4 <HID_Setup(Setup&)>
    1b76:	88 23       	and	r24, r24
    1b78:	21 f0       	breq	.+8      	; 0x1b82 <__vector_11+0x214>
    1b7a:	8e ef       	ldi	r24, 0xFE	; 254
    1b7c:	80 93 e8 00 	sts	0x00E8, r24
    1b80:	03 c0       	rjmp	.+6      	; 0x1b88 <__vector_11+0x21a>
    1b82:	81 e2       	ldi	r24, 0x21	; 33
    1b84:	80 93 eb 00 	sts	0x00EB, r24
    1b88:	62 96       	adiw	r28, 0x12	; 18
    1b8a:	0f b6       	in	r0, 0x3f	; 63
    1b8c:	f8 94       	cli
    1b8e:	de bf       	out	0x3e, r29	; 62
    1b90:	0f be       	out	0x3f, r0	; 63
    1b92:	cd bf       	out	0x3d, r28	; 61
    1b94:	df 91       	pop	r29
    1b96:	cf 91       	pop	r28
    1b98:	ff 91       	pop	r31
    1b9a:	ef 91       	pop	r30
    1b9c:	bf 91       	pop	r27
    1b9e:	af 91       	pop	r26
    1ba0:	9f 91       	pop	r25
    1ba2:	8f 91       	pop	r24
    1ba4:	7f 91       	pop	r23
    1ba6:	6f 91       	pop	r22
    1ba8:	5f 91       	pop	r21
    1baa:	4f 91       	pop	r20
    1bac:	3f 91       	pop	r19
    1bae:	2f 91       	pop	r18
    1bb0:	1f 91       	pop	r17
    1bb2:	0f 91       	pop	r16
    1bb4:	ff 90       	pop	r15
    1bb6:	ef 90       	pop	r14
    1bb8:	0f 90       	pop	r0
    1bba:	0f be       	out	0x3f, r0	; 63
    1bbc:	0f 90       	pop	r0
    1bbe:	1f 90       	pop	r1
    1bc0:	18 95       	reti

00001bc2 <USB_Flush(unsigned char)>:
    1bc2:	80 93 e9 00 	sts	0x00E9, r24
    1bc6:	80 91 f2 00 	lds	r24, 0x00F2
    1bca:	88 23       	and	r24, r24
    1bcc:	19 f0       	breq	.+6      	; 0x1bd4 <USB_Flush(unsigned char)+0x12>
    1bce:	8a e3       	ldi	r24, 0x3A	; 58
    1bd0:	80 93 e8 00 	sts	0x00E8, r24
    1bd4:	08 95       	ret

00001bd6 <__vector_10>:
    1bd6:	1f 92       	push	r1
    1bd8:	0f 92       	push	r0
    1bda:	0f b6       	in	r0, 0x3f	; 63
    1bdc:	0f 92       	push	r0
    1bde:	11 24       	eor	r1, r1
    1be0:	2f 93       	push	r18
    1be2:	3f 93       	push	r19
    1be4:	4f 93       	push	r20
    1be6:	5f 93       	push	r21
    1be8:	6f 93       	push	r22
    1bea:	7f 93       	push	r23
    1bec:	8f 93       	push	r24
    1bee:	9f 93       	push	r25
    1bf0:	af 93       	push	r26
    1bf2:	bf 93       	push	r27
    1bf4:	ef 93       	push	r30
    1bf6:	ff 93       	push	r31
    1bf8:	80 91 e1 00 	lds	r24, 0x00E1
    1bfc:	10 92 e1 00 	sts	0x00E1, r1
    1c00:	83 ff       	sbrs	r24, 3
    1c02:	0f c0       	rjmp	.+30     	; 0x1c22 <__vector_10+0x4c>
    1c04:	10 92 e9 00 	sts	0x00E9, r1
    1c08:	91 e0       	ldi	r25, 0x01	; 1
    1c0a:	90 93 eb 00 	sts	0x00EB, r25
    1c0e:	10 92 ec 00 	sts	0x00EC, r1
    1c12:	92 e3       	ldi	r25, 0x32	; 50
    1c14:	90 93 ed 00 	sts	0x00ED, r25
    1c18:	10 92 73 03 	sts	0x0373, r1
    1c1c:	98 e0       	ldi	r25, 0x08	; 8
    1c1e:	90 93 f0 00 	sts	0x00F0, r25
    1c22:	82 ff       	sbrs	r24, 2
    1c24:	1d c0       	rjmp	.+58     	; 0x1c60 <__vector_10+0x8a>
    1c26:	83 e0       	ldi	r24, 0x03	; 3
    1c28:	0e 94 e1 0d 	call	0x1bc2	; 0x1bc2 <USB_Flush(unsigned char)>
    1c2c:	80 91 75 03 	lds	r24, 0x0375
    1c30:	88 23       	and	r24, r24
    1c32:	39 f0       	breq	.+14     	; 0x1c42 <__vector_10+0x6c>
    1c34:	80 91 75 03 	lds	r24, 0x0375
    1c38:	81 50       	subi	r24, 0x01	; 1
    1c3a:	80 93 75 03 	sts	0x0375, r24
    1c3e:	88 23       	and	r24, r24
    1c40:	69 f0       	breq	.+26     	; 0x1c5c <__vector_10+0x86>
    1c42:	80 91 74 03 	lds	r24, 0x0374
    1c46:	88 23       	and	r24, r24
    1c48:	59 f0       	breq	.+22     	; 0x1c60 <__vector_10+0x8a>
    1c4a:	80 91 74 03 	lds	r24, 0x0374
    1c4e:	81 50       	subi	r24, 0x01	; 1
    1c50:	80 93 74 03 	sts	0x0374, r24
    1c54:	81 11       	cpse	r24, r1
    1c56:	04 c0       	rjmp	.+8      	; 0x1c60 <__vector_10+0x8a>
    1c58:	28 9a       	sbi	0x05, 0	; 5
    1c5a:	02 c0       	rjmp	.+4      	; 0x1c60 <__vector_10+0x8a>
    1c5c:	5d 9a       	sbi	0x0b, 5	; 11
    1c5e:	f1 cf       	rjmp	.-30     	; 0x1c42 <__vector_10+0x6c>
    1c60:	ff 91       	pop	r31
    1c62:	ef 91       	pop	r30
    1c64:	bf 91       	pop	r27
    1c66:	af 91       	pop	r26
    1c68:	9f 91       	pop	r25
    1c6a:	8f 91       	pop	r24
    1c6c:	7f 91       	pop	r23
    1c6e:	6f 91       	pop	r22
    1c70:	5f 91       	pop	r21
    1c72:	4f 91       	pop	r20
    1c74:	3f 91       	pop	r19
    1c76:	2f 91       	pop	r18
    1c78:	0f 90       	pop	r0
    1c7a:	0f be       	out	0x3f, r0	; 63
    1c7c:	0f 90       	pop	r0
    1c7e:	1f 90       	pop	r1
    1c80:	18 95       	reti

00001c82 <USBDevice_::attach()>:
    1c82:	10 92 73 03 	sts	0x0373, r1
    1c86:	81 e0       	ldi	r24, 0x01	; 1
    1c88:	80 93 d7 00 	sts	0x00D7, r24
    1c8c:	80 ea       	ldi	r24, 0xA0	; 160
    1c8e:	80 93 d8 00 	sts	0x00D8, r24
    1c92:	82 e1       	ldi	r24, 0x12	; 18
    1c94:	89 bd       	out	0x29, r24	; 41
    1c96:	09 b4       	in	r0, 0x29	; 41
    1c98:	00 fe       	sbrs	r0, 0
    1c9a:	fd cf       	rjmp	.-6      	; 0x1c96 <USBDevice_::attach()+0x14>
    1c9c:	61 e0       	ldi	r22, 0x01	; 1
    1c9e:	70 e0       	ldi	r23, 0x00	; 0
    1ca0:	80 e0       	ldi	r24, 0x00	; 0
    1ca2:	90 e0       	ldi	r25, 0x00	; 0
    1ca4:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
    1ca8:	80 e9       	ldi	r24, 0x90	; 144
    1caa:	80 93 d8 00 	sts	0x00D8, r24
    1cae:	8c e0       	ldi	r24, 0x0C	; 12
    1cb0:	80 93 e2 00 	sts	0x00E2, r24
    1cb4:	10 92 e0 00 	sts	0x00E0, r1
    1cb8:	55 9a       	sbi	0x0a, 5	; 10
    1cba:	20 9a       	sbi	0x04, 0	; 4
    1cbc:	08 95       	ret

00001cbe <String::~String()>:
    1cbe:	fc 01       	movw	r30, r24
    1cc0:	80 81       	ld	r24, Z
    1cc2:	91 81       	ldd	r25, Z+1	; 0x01
    1cc4:	0c 94 0e 18 	jmp	0x301c	; 0x301c <free>

00001cc8 <String::invalidate()>:
    1cc8:	cf 93       	push	r28
    1cca:	df 93       	push	r29
    1ccc:	ec 01       	movw	r28, r24
    1cce:	88 81       	ld	r24, Y
    1cd0:	99 81       	ldd	r25, Y+1	; 0x01
    1cd2:	00 97       	sbiw	r24, 0x00	; 0
    1cd4:	11 f0       	breq	.+4      	; 0x1cda <String::invalidate()+0x12>
    1cd6:	0e 94 0e 18 	call	0x301c	; 0x301c <free>
    1cda:	19 82       	std	Y+1, r1	; 0x01
    1cdc:	18 82       	st	Y, r1
    1cde:	1d 82       	std	Y+5, r1	; 0x05
    1ce0:	1c 82       	std	Y+4, r1	; 0x04
    1ce2:	1b 82       	std	Y+3, r1	; 0x03
    1ce4:	1a 82       	std	Y+2, r1	; 0x02
    1ce6:	df 91       	pop	r29
    1ce8:	cf 91       	pop	r28
    1cea:	08 95       	ret

00001cec <String::changeBuffer(unsigned int)>:
    1cec:	0f 93       	push	r16
    1cee:	1f 93       	push	r17
    1cf0:	cf 93       	push	r28
    1cf2:	df 93       	push	r29
    1cf4:	ec 01       	movw	r28, r24
    1cf6:	8b 01       	movw	r16, r22
    1cf8:	6f 5f       	subi	r22, 0xFF	; 255
    1cfa:	7f 4f       	sbci	r23, 0xFF	; 255
    1cfc:	88 81       	ld	r24, Y
    1cfe:	99 81       	ldd	r25, Y+1	; 0x01
    1d00:	0e 94 9d 18 	call	0x313a	; 0x313a <realloc>
    1d04:	00 97       	sbiw	r24, 0x00	; 0
    1d06:	31 f0       	breq	.+12     	; 0x1d14 <String::changeBuffer(unsigned int)+0x28>
    1d08:	99 83       	std	Y+1, r25	; 0x01
    1d0a:	88 83       	st	Y, r24
    1d0c:	1b 83       	std	Y+3, r17	; 0x03
    1d0e:	0a 83       	std	Y+2, r16	; 0x02
    1d10:	81 e0       	ldi	r24, 0x01	; 1
    1d12:	01 c0       	rjmp	.+2      	; 0x1d16 <String::changeBuffer(unsigned int)+0x2a>
    1d14:	80 e0       	ldi	r24, 0x00	; 0
    1d16:	df 91       	pop	r29
    1d18:	cf 91       	pop	r28
    1d1a:	1f 91       	pop	r17
    1d1c:	0f 91       	pop	r16
    1d1e:	08 95       	ret

00001d20 <String::reserve(unsigned int)>:
    1d20:	cf 93       	push	r28
    1d22:	df 93       	push	r29
    1d24:	ec 01       	movw	r28, r24
    1d26:	88 81       	ld	r24, Y
    1d28:	99 81       	ldd	r25, Y+1	; 0x01
    1d2a:	89 2b       	or	r24, r25
    1d2c:	29 f0       	breq	.+10     	; 0x1d38 <String::reserve(unsigned int)+0x18>
    1d2e:	8a 81       	ldd	r24, Y+2	; 0x02
    1d30:	9b 81       	ldd	r25, Y+3	; 0x03
    1d32:	86 17       	cp	r24, r22
    1d34:	97 07       	cpc	r25, r23
    1d36:	60 f4       	brcc	.+24     	; 0x1d50 <String::reserve(unsigned int)+0x30>
    1d38:	ce 01       	movw	r24, r28
    1d3a:	0e 94 76 0e 	call	0x1cec	; 0x1cec <String::changeBuffer(unsigned int)>
    1d3e:	88 23       	and	r24, r24
    1d40:	41 f0       	breq	.+16     	; 0x1d52 <String::reserve(unsigned int)+0x32>
    1d42:	8c 81       	ldd	r24, Y+4	; 0x04
    1d44:	9d 81       	ldd	r25, Y+5	; 0x05
    1d46:	89 2b       	or	r24, r25
    1d48:	19 f4       	brne	.+6      	; 0x1d50 <String::reserve(unsigned int)+0x30>
    1d4a:	e8 81       	ld	r30, Y
    1d4c:	f9 81       	ldd	r31, Y+1	; 0x01
    1d4e:	10 82       	st	Z, r1
    1d50:	81 e0       	ldi	r24, 0x01	; 1
    1d52:	df 91       	pop	r29
    1d54:	cf 91       	pop	r28
    1d56:	08 95       	ret

00001d58 <String::copy(char const*, unsigned int)>:
    1d58:	ef 92       	push	r14
    1d5a:	ff 92       	push	r15
    1d5c:	0f 93       	push	r16
    1d5e:	1f 93       	push	r17
    1d60:	cf 93       	push	r28
    1d62:	df 93       	push	r29
    1d64:	ec 01       	movw	r28, r24
    1d66:	7b 01       	movw	r14, r22
    1d68:	8a 01       	movw	r16, r20
    1d6a:	ba 01       	movw	r22, r20
    1d6c:	0e 94 90 0e 	call	0x1d20	; 0x1d20 <String::reserve(unsigned int)>
    1d70:	81 11       	cpse	r24, r1
    1d72:	04 c0       	rjmp	.+8      	; 0x1d7c <String::copy(char const*, unsigned int)+0x24>
    1d74:	ce 01       	movw	r24, r28
    1d76:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <String::invalidate()>
    1d7a:	07 c0       	rjmp	.+14     	; 0x1d8a <String::copy(char const*, unsigned int)+0x32>
    1d7c:	1d 83       	std	Y+5, r17	; 0x05
    1d7e:	0c 83       	std	Y+4, r16	; 0x04
    1d80:	b7 01       	movw	r22, r14
    1d82:	88 81       	ld	r24, Y
    1d84:	99 81       	ldd	r25, Y+1	; 0x01
    1d86:	0e 94 73 19 	call	0x32e6	; 0x32e6 <strcpy>
    1d8a:	ce 01       	movw	r24, r28
    1d8c:	df 91       	pop	r29
    1d8e:	cf 91       	pop	r28
    1d90:	1f 91       	pop	r17
    1d92:	0f 91       	pop	r16
    1d94:	ff 90       	pop	r15
    1d96:	ef 90       	pop	r14
    1d98:	08 95       	ret

00001d9a <String::String(char const*)>:
    1d9a:	fc 01       	movw	r30, r24
    1d9c:	11 82       	std	Z+1, r1	; 0x01
    1d9e:	10 82       	st	Z, r1
    1da0:	13 82       	std	Z+3, r1	; 0x03
    1da2:	12 82       	std	Z+2, r1	; 0x02
    1da4:	15 82       	std	Z+5, r1	; 0x05
    1da6:	14 82       	std	Z+4, r1	; 0x04
    1da8:	61 15       	cp	r22, r1
    1daa:	71 05       	cpc	r23, r1
    1dac:	59 f0       	breq	.+22     	; 0x1dc4 <String::String(char const*)+0x2a>
    1dae:	fb 01       	movw	r30, r22
    1db0:	01 90       	ld	r0, Z+
    1db2:	00 20       	and	r0, r0
    1db4:	e9 f7       	brne	.-6      	; 0x1db0 <String::String(char const*)+0x16>
    1db6:	af 01       	movw	r20, r30
    1db8:	41 50       	subi	r20, 0x01	; 1
    1dba:	51 09       	sbc	r21, r1
    1dbc:	46 1b       	sub	r20, r22
    1dbe:	57 0b       	sbc	r21, r23
    1dc0:	0c 94 ac 0e 	jmp	0x1d58	; 0x1d58 <String::copy(char const*, unsigned int)>
    1dc4:	08 95       	ret

00001dc6 <String::operator=(String const&)>:
    1dc6:	cf 93       	push	r28
    1dc8:	df 93       	push	r29
    1dca:	ec 01       	movw	r28, r24
    1dcc:	fb 01       	movw	r30, r22
    1dce:	86 17       	cp	r24, r22
    1dd0:	97 07       	cpc	r25, r23
    1dd2:	61 f0       	breq	.+24     	; 0x1dec <String::operator=(String const&)+0x26>
    1dd4:	60 81       	ld	r22, Z
    1dd6:	71 81       	ldd	r23, Z+1	; 0x01
    1dd8:	61 15       	cp	r22, r1
    1dda:	71 05       	cpc	r23, r1
    1ddc:	29 f0       	breq	.+10     	; 0x1de8 <String::operator=(String const&)+0x22>
    1dde:	44 81       	ldd	r20, Z+4	; 0x04
    1de0:	55 81       	ldd	r21, Z+5	; 0x05
    1de2:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <String::copy(char const*, unsigned int)>
    1de6:	02 c0       	rjmp	.+4      	; 0x1dec <String::operator=(String const&)+0x26>
    1de8:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <String::invalidate()>
    1dec:	ce 01       	movw	r24, r28
    1dee:	df 91       	pop	r29
    1df0:	cf 91       	pop	r28
    1df2:	08 95       	ret

00001df4 <String::String(String const&)>:
    1df4:	fc 01       	movw	r30, r24
    1df6:	11 82       	std	Z+1, r1	; 0x01
    1df8:	10 82       	st	Z, r1
    1dfa:	13 82       	std	Z+3, r1	; 0x03
    1dfc:	12 82       	std	Z+2, r1	; 0x02
    1dfe:	15 82       	std	Z+5, r1	; 0x05
    1e00:	14 82       	std	Z+4, r1	; 0x04
    1e02:	0c 94 e3 0e 	jmp	0x1dc6	; 0x1dc6 <String::operator=(String const&)>

00001e06 <String::concat(char const*, unsigned int)>:
    1e06:	ef 92       	push	r14
    1e08:	ff 92       	push	r15
    1e0a:	0f 93       	push	r16
    1e0c:	1f 93       	push	r17
    1e0e:	cf 93       	push	r28
    1e10:	df 93       	push	r29
    1e12:	ec 01       	movw	r28, r24
    1e14:	7b 01       	movw	r14, r22
    1e16:	0c 81       	ldd	r16, Y+4	; 0x04
    1e18:	1d 81       	ldd	r17, Y+5	; 0x05
    1e1a:	61 15       	cp	r22, r1
    1e1c:	71 05       	cpc	r23, r1
    1e1e:	11 f4       	brne	.+4      	; 0x1e24 <String::concat(char const*, unsigned int)+0x1e>
    1e20:	80 e0       	ldi	r24, 0x00	; 0
    1e22:	16 c0       	rjmp	.+44     	; 0x1e50 <String::concat(char const*, unsigned int)+0x4a>
    1e24:	41 15       	cp	r20, r1
    1e26:	51 05       	cpc	r21, r1
    1e28:	91 f0       	breq	.+36     	; 0x1e4e <String::concat(char const*, unsigned int)+0x48>
    1e2a:	04 0f       	add	r16, r20
    1e2c:	15 1f       	adc	r17, r21
    1e2e:	b8 01       	movw	r22, r16
    1e30:	0e 94 90 0e 	call	0x1d20	; 0x1d20 <String::reserve(unsigned int)>
    1e34:	88 23       	and	r24, r24
    1e36:	a1 f3       	breq	.-24     	; 0x1e20 <String::concat(char const*, unsigned int)+0x1a>
    1e38:	28 81       	ld	r18, Y
    1e3a:	39 81       	ldd	r19, Y+1	; 0x01
    1e3c:	8c 81       	ldd	r24, Y+4	; 0x04
    1e3e:	9d 81       	ldd	r25, Y+5	; 0x05
    1e40:	b7 01       	movw	r22, r14
    1e42:	82 0f       	add	r24, r18
    1e44:	93 1f       	adc	r25, r19
    1e46:	0e 94 73 19 	call	0x32e6	; 0x32e6 <strcpy>
    1e4a:	1d 83       	std	Y+5, r17	; 0x05
    1e4c:	0c 83       	std	Y+4, r16	; 0x04
    1e4e:	81 e0       	ldi	r24, 0x01	; 1
    1e50:	df 91       	pop	r29
    1e52:	cf 91       	pop	r28
    1e54:	1f 91       	pop	r17
    1e56:	0f 91       	pop	r16
    1e58:	ff 90       	pop	r15
    1e5a:	ef 90       	pop	r14
    1e5c:	08 95       	ret

00001e5e <String::concat(String const&)>:
    1e5e:	fb 01       	movw	r30, r22
    1e60:	44 81       	ldd	r20, Z+4	; 0x04
    1e62:	55 81       	ldd	r21, Z+5	; 0x05
    1e64:	60 81       	ld	r22, Z
    1e66:	71 81       	ldd	r23, Z+1	; 0x01
    1e68:	0c 94 03 0f 	jmp	0x1e06	; 0x1e06 <String::concat(char const*, unsigned int)>

00001e6c <String::concat(char const*)>:
    1e6c:	61 15       	cp	r22, r1
    1e6e:	71 05       	cpc	r23, r1
    1e70:	59 f0       	breq	.+22     	; 0x1e88 <String::concat(char const*)+0x1c>
    1e72:	fb 01       	movw	r30, r22
    1e74:	01 90       	ld	r0, Z+
    1e76:	00 20       	and	r0, r0
    1e78:	e9 f7       	brne	.-6      	; 0x1e74 <String::concat(char const*)+0x8>
    1e7a:	af 01       	movw	r20, r30
    1e7c:	41 50       	subi	r20, 0x01	; 1
    1e7e:	51 09       	sbc	r21, r1
    1e80:	46 1b       	sub	r20, r22
    1e82:	57 0b       	sbc	r21, r23
    1e84:	0c 94 03 0f 	jmp	0x1e06	; 0x1e06 <String::concat(char const*, unsigned int)>
    1e88:	80 e0       	ldi	r24, 0x00	; 0
    1e8a:	08 95       	ret

00001e8c <initVariant>:
    1e8c:	08 95       	ret

00001e8e <main>:
    1e8e:	0e 94 33 15 	call	0x2a66	; 0x2a66 <init>
    1e92:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <initVariant>
    1e96:	8d e6       	ldi	r24, 0x6D	; 109
    1e98:	93 e0       	ldi	r25, 0x03	; 3
    1e9a:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <USBDevice_::attach()>
    1e9e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <setup>
    1ea2:	c2 e2       	ldi	r28, 0x22	; 34
    1ea4:	d8 e0       	ldi	r29, 0x08	; 8
    1ea6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <loop>
    1eaa:	20 97       	sbiw	r28, 0x00	; 0
    1eac:	e1 f3       	breq	.-8      	; 0x1ea6 <main+0x18>
    1eae:	0e 94 22 08 	call	0x1044	; 0x1044 <serialEventRun()>
    1eb2:	f9 cf       	rjmp	.-14     	; 0x1ea6 <main+0x18>

00001eb4 <BridgeClass::crcUpdate(unsigned char)>:
    1eb4:	fc 01       	movw	r30, r24
    1eb6:	23 81       	ldd	r18, Z+3	; 0x03
    1eb8:	34 81       	ldd	r19, Z+4	; 0x04
    1eba:	26 27       	eor	r18, r22
    1ebc:	02 2e       	mov	r0, r18
    1ebe:	22 95       	swap	r18
    1ec0:	20 7f       	andi	r18, 0xF0	; 240
    1ec2:	20 25       	eor	r18, r0
    1ec4:	03 2e       	mov	r0, r19
    1ec6:	32 2f       	mov	r19, r18
    1ec8:	22 95       	swap	r18
    1eca:	2f 70       	andi	r18, 0x0F	; 15
    1ecc:	02 26       	eor	r0, r18
    1ece:	26 95       	lsr	r18
    1ed0:	32 27       	eor	r19, r18
    1ed2:	23 27       	eor	r18, r19
    1ed4:	22 0f       	add	r18, r18
    1ed6:	22 0f       	add	r18, r18
    1ed8:	22 0f       	add	r18, r18
    1eda:	20 25       	eor	r18, r0
    1edc:	fc 01       	movw	r30, r24
    1ede:	34 83       	std	Z+4, r19	; 0x04
    1ee0:	23 83       	std	Z+3, r18	; 0x03
    1ee2:	08 95       	ret

00001ee4 <BridgeClass::crcWrite()>:
    1ee4:	cf 93       	push	r28
    1ee6:	df 93       	push	r29
    1ee8:	ec 01       	movw	r28, r24
    1eea:	8d 81       	ldd	r24, Y+5	; 0x05
    1eec:	9e 81       	ldd	r25, Y+6	; 0x06
    1eee:	dc 01       	movw	r26, r24
    1ef0:	ed 91       	ld	r30, X+
    1ef2:	fc 91       	ld	r31, X
    1ef4:	6c 81       	ldd	r22, Y+4	; 0x04
    1ef6:	01 90       	ld	r0, Z+
    1ef8:	f0 81       	ld	r31, Z
    1efa:	e0 2d       	mov	r30, r0
    1efc:	09 95       	icall
    1efe:	8d 81       	ldd	r24, Y+5	; 0x05
    1f00:	9e 81       	ldd	r25, Y+6	; 0x06
    1f02:	dc 01       	movw	r26, r24
    1f04:	ed 91       	ld	r30, X+
    1f06:	fc 91       	ld	r31, X
    1f08:	01 90       	ld	r0, Z+
    1f0a:	f0 81       	ld	r31, Z
    1f0c:	e0 2d       	mov	r30, r0
    1f0e:	6b 81       	ldd	r22, Y+3	; 0x03
    1f10:	df 91       	pop	r29
    1f12:	cf 91       	pop	r28
    1f14:	09 94       	ijmp

00001f16 <BridgeClass::timedRead(unsigned int)>:
    1f16:	8f 92       	push	r8
    1f18:	9f 92       	push	r9
    1f1a:	af 92       	push	r10
    1f1c:	bf 92       	push	r11
    1f1e:	cf 92       	push	r12
    1f20:	df 92       	push	r13
    1f22:	ef 92       	push	r14
    1f24:	ff 92       	push	r15
    1f26:	cf 93       	push	r28
    1f28:	df 93       	push	r29
    1f2a:	ec 01       	movw	r28, r24
    1f2c:	6b 01       	movw	r12, r22
    1f2e:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <millis>
    1f32:	4b 01       	movw	r8, r22
    1f34:	5c 01       	movw	r10, r24
    1f36:	e1 2c       	mov	r14, r1
    1f38:	f1 2c       	mov	r15, r1
    1f3a:	8d 81       	ldd	r24, Y+5	; 0x05
    1f3c:	9e 81       	ldd	r25, Y+6	; 0x06
    1f3e:	dc 01       	movw	r26, r24
    1f40:	ed 91       	ld	r30, X+
    1f42:	fc 91       	ld	r31, X
    1f44:	06 80       	ldd	r0, Z+6	; 0x06
    1f46:	f7 81       	ldd	r31, Z+7	; 0x07
    1f48:	e0 2d       	mov	r30, r0
    1f4a:	09 95       	icall
    1f4c:	97 ff       	sbrs	r25, 7
    1f4e:	0d c0       	rjmp	.+26     	; 0x1f6a <BridgeClass::timedRead(unsigned int)+0x54>
    1f50:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <millis>
    1f54:	68 19       	sub	r22, r8
    1f56:	79 09       	sbc	r23, r9
    1f58:	8a 09       	sbc	r24, r10
    1f5a:	9b 09       	sbc	r25, r11
    1f5c:	6c 15       	cp	r22, r12
    1f5e:	7d 05       	cpc	r23, r13
    1f60:	8e 05       	cpc	r24, r14
    1f62:	9f 05       	cpc	r25, r15
    1f64:	50 f3       	brcs	.-44     	; 0x1f3a <BridgeClass::timedRead(unsigned int)+0x24>
    1f66:	8f ef       	ldi	r24, 0xFF	; 255
    1f68:	9f ef       	ldi	r25, 0xFF	; 255
    1f6a:	df 91       	pop	r29
    1f6c:	cf 91       	pop	r28
    1f6e:	ff 90       	pop	r15
    1f70:	ef 90       	pop	r14
    1f72:	df 90       	pop	r13
    1f74:	cf 90       	pop	r12
    1f76:	bf 90       	pop	r11
    1f78:	af 90       	pop	r10
    1f7a:	9f 90       	pop	r9
    1f7c:	8f 90       	pop	r8
    1f7e:	08 95       	ret

00001f80 <BridgeClass::dropAll()>:
    1f80:	cf 93       	push	r28
    1f82:	df 93       	push	r29
    1f84:	ec 01       	movw	r28, r24
    1f86:	8d 81       	ldd	r24, Y+5	; 0x05
    1f88:	9e 81       	ldd	r25, Y+6	; 0x06
    1f8a:	dc 01       	movw	r26, r24
    1f8c:	ed 91       	ld	r30, X+
    1f8e:	fc 91       	ld	r31, X
    1f90:	04 80       	ldd	r0, Z+4	; 0x04
    1f92:	f5 81       	ldd	r31, Z+5	; 0x05
    1f94:	e0 2d       	mov	r30, r0
    1f96:	09 95       	icall
    1f98:	18 16       	cp	r1, r24
    1f9a:	19 06       	cpc	r1, r25
    1f9c:	54 f4       	brge	.+20     	; 0x1fb2 <BridgeClass::dropAll()+0x32>
    1f9e:	8d 81       	ldd	r24, Y+5	; 0x05
    1fa0:	9e 81       	ldd	r25, Y+6	; 0x06
    1fa2:	dc 01       	movw	r26, r24
    1fa4:	ed 91       	ld	r30, X+
    1fa6:	fc 91       	ld	r31, X
    1fa8:	06 80       	ldd	r0, Z+6	; 0x06
    1faa:	f7 81       	ldd	r31, Z+7	; 0x07
    1fac:	e0 2d       	mov	r30, r0
    1fae:	09 95       	icall
    1fb0:	ea cf       	rjmp	.-44     	; 0x1f86 <BridgeClass::dropAll()+0x6>
    1fb2:	df 91       	pop	r29
    1fb4:	cf 91       	pop	r28
    1fb6:	08 95       	ret

00001fb8 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)>:
    1fb8:	2f 92       	push	r2
    1fba:	3f 92       	push	r3
    1fbc:	4f 92       	push	r4
    1fbe:	5f 92       	push	r5
    1fc0:	6f 92       	push	r6
    1fc2:	7f 92       	push	r7
    1fc4:	8f 92       	push	r8
    1fc6:	9f 92       	push	r9
    1fc8:	af 92       	push	r10
    1fca:	bf 92       	push	r11
    1fcc:	cf 92       	push	r12
    1fce:	df 92       	push	r13
    1fd0:	ef 92       	push	r14
    1fd2:	ff 92       	push	r15
    1fd4:	0f 93       	push	r16
    1fd6:	1f 93       	push	r17
    1fd8:	cf 93       	push	r28
    1fda:	df 93       	push	r29
    1fdc:	cd b7       	in	r28, 0x3d	; 61
    1fde:	de b7       	in	r29, 0x3e	; 62
    1fe0:	2d 97       	sbiw	r28, 0x0d	; 13
    1fe2:	0f b6       	in	r0, 0x3f	; 63
    1fe4:	f8 94       	cli
    1fe6:	de bf       	out	0x3e, r29	; 62
    1fe8:	0f be       	out	0x3f, r0	; 63
    1fea:	cd bf       	out	0x3d, r28	; 61
    1fec:	3c 01       	movw	r6, r24
    1fee:	1b 01       	movw	r2, r22
    1ff0:	3c 83       	std	Y+4, r19	; 0x04
    1ff2:	2b 83       	std	Y+3, r18	; 0x03
    1ff4:	bf 82       	std	Y+7, r11	; 0x07
    1ff6:	ae 82       	std	Y+6, r10	; 0x06
    1ff8:	58 01       	movw	r10, r16
    1ffa:	ac 0c       	add	r10, r12
    1ffc:	bd 1c       	adc	r11, r13
    1ffe:	a4 0e       	add	r10, r20
    2000:	b5 1e       	adc	r11, r21
    2002:	bd 82       	std	Y+5, r11	; 0x05
    2004:	4b 2c       	mov	r4, r11
    2006:	51 2c       	mov	r5, r1
    2008:	ca 01       	movw	r24, r20
    200a:	86 0f       	add	r24, r22
    200c:	97 1f       	adc	r25, r23
    200e:	99 87       	std	Y+9, r25	; 0x09
    2010:	88 87       	std	Y+8, r24	; 0x08
    2012:	d9 01       	movw	r26, r18
    2014:	a0 0f       	add	r26, r16
    2016:	b1 1f       	adc	r27, r17
    2018:	bb 87       	std	Y+11, r27	; 0x0b
    201a:	aa 87       	std	Y+10, r26	; 0x0a
    201c:	f6 01       	movw	r30, r12
    201e:	ee 0d       	add	r30, r14
    2020:	ff 1d       	adc	r31, r15
    2022:	fd 87       	std	Y+13, r31	; 0x0d
    2024:	ec 87       	std	Y+12, r30	; 0x0c
    2026:	d3 01       	movw	r26, r6
    2028:	18 96       	adiw	r26, 0x08	; 8
    202a:	8c 91       	ld	r24, X
    202c:	58 16       	cp	r5, r24
    202e:	08 f0       	brcs	.+2      	; 0x2032 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x7a>
    2030:	26 c1       	rjmp	.+588    	; 0x227e <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2c6>
    2032:	ef ef       	ldi	r30, 0xFF	; 255
    2034:	ff ef       	ldi	r31, 0xFF	; 255
    2036:	d3 01       	movw	r26, r6
    2038:	14 96       	adiw	r26, 0x04	; 4
    203a:	fc 93       	st	X, r31
    203c:	ee 93       	st	-X, r30
    203e:	13 97       	sbiw	r26, 0x03	; 3
    2040:	15 96       	adiw	r26, 0x05	; 5
    2042:	8d 91       	ld	r24, X+
    2044:	9c 91       	ld	r25, X
    2046:	16 97       	sbiw	r26, 0x06	; 6
    2048:	dc 01       	movw	r26, r24
    204a:	ed 91       	ld	r30, X+
    204c:	fc 91       	ld	r31, X
    204e:	01 90       	ld	r0, Z+
    2050:	f0 81       	ld	r31, Z
    2052:	e0 2d       	mov	r30, r0
    2054:	6f ef       	ldi	r22, 0xFF	; 255
    2056:	09 95       	icall
    2058:	6f ef       	ldi	r22, 0xFF	; 255
    205a:	c3 01       	movw	r24, r6
    205c:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    2060:	f3 01       	movw	r30, r6
    2062:	85 81       	ldd	r24, Z+5	; 0x05
    2064:	96 81       	ldd	r25, Z+6	; 0x06
    2066:	dc 01       	movw	r26, r24
    2068:	ed 91       	ld	r30, X+
    206a:	fc 91       	ld	r31, X
    206c:	01 90       	ld	r0, Z+
    206e:	f0 81       	ld	r31, Z
    2070:	e0 2d       	mov	r30, r0
    2072:	d3 01       	movw	r26, r6
    2074:	6c 91       	ld	r22, X
    2076:	09 95       	icall
    2078:	f3 01       	movw	r30, r6
    207a:	60 81       	ld	r22, Z
    207c:	c3 01       	movw	r24, r6
    207e:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    2082:	d3 01       	movw	r26, r6
    2084:	15 96       	adiw	r26, 0x05	; 5
    2086:	8d 91       	ld	r24, X+
    2088:	9c 91       	ld	r25, X
    208a:	16 97       	sbiw	r26, 0x06	; 6
    208c:	dc 01       	movw	r26, r24
    208e:	ed 91       	ld	r30, X+
    2090:	fc 91       	ld	r31, X
    2092:	01 90       	ld	r0, Z+
    2094:	f0 81       	ld	r31, Z
    2096:	e0 2d       	mov	r30, r0
    2098:	6d 81       	ldd	r22, Y+5	; 0x05
    209a:	09 95       	icall
    209c:	64 2d       	mov	r22, r4
    209e:	c3 01       	movw	r24, r6
    20a0:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    20a4:	f3 01       	movw	r30, r6
    20a6:	85 81       	ldd	r24, Z+5	; 0x05
    20a8:	96 81       	ldd	r25, Z+6	; 0x06
    20aa:	dc 01       	movw	r26, r24
    20ac:	ed 91       	ld	r30, X+
    20ae:	fc 91       	ld	r31, X
    20b0:	01 90       	ld	r0, Z+
    20b2:	f0 81       	ld	r31, Z
    20b4:	e0 2d       	mov	r30, r0
    20b6:	6a 2d       	mov	r22, r10
    20b8:	09 95       	icall
    20ba:	6a 2d       	mov	r22, r10
    20bc:	c3 01       	movw	r24, r6
    20be:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    20c2:	61 01       	movw	r12, r2
    20c4:	88 85       	ldd	r24, Y+8	; 0x08
    20c6:	99 85       	ldd	r25, Y+9	; 0x09
    20c8:	c8 16       	cp	r12, r24
    20ca:	d9 06       	cpc	r13, r25
    20cc:	a1 f0       	breq	.+40     	; 0x20f6 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x13e>
    20ce:	f3 01       	movw	r30, r6
    20d0:	85 81       	ldd	r24, Z+5	; 0x05
    20d2:	96 81       	ldd	r25, Z+6	; 0x06
    20d4:	86 01       	movw	r16, r12
    20d6:	dc 01       	movw	r26, r24
    20d8:	ed 91       	ld	r30, X+
    20da:	fc 91       	ld	r31, X
    20dc:	01 90       	ld	r0, Z+
    20de:	f0 81       	ld	r31, Z
    20e0:	e0 2d       	mov	r30, r0
    20e2:	d6 01       	movw	r26, r12
    20e4:	6d 91       	ld	r22, X+
    20e6:	6d 01       	movw	r12, r26
    20e8:	09 95       	icall
    20ea:	f8 01       	movw	r30, r16
    20ec:	60 81       	ld	r22, Z
    20ee:	c3 01       	movw	r24, r6
    20f0:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    20f4:	e7 cf       	rjmp	.-50     	; 0x20c4 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x10c>
    20f6:	cb 80       	ldd	r12, Y+3	; 0x03
    20f8:	dc 80       	ldd	r13, Y+4	; 0x04
    20fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    20fc:	9b 85       	ldd	r25, Y+11	; 0x0b
    20fe:	c8 16       	cp	r12, r24
    2100:	d9 06       	cpc	r13, r25
    2102:	b1 f0       	breq	.+44     	; 0x2130 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x178>
    2104:	d3 01       	movw	r26, r6
    2106:	15 96       	adiw	r26, 0x05	; 5
    2108:	8d 91       	ld	r24, X+
    210a:	9c 91       	ld	r25, X
    210c:	16 97       	sbiw	r26, 0x06	; 6
    210e:	86 01       	movw	r16, r12
    2110:	dc 01       	movw	r26, r24
    2112:	ed 91       	ld	r30, X+
    2114:	fc 91       	ld	r31, X
    2116:	01 90       	ld	r0, Z+
    2118:	f0 81       	ld	r31, Z
    211a:	e0 2d       	mov	r30, r0
    211c:	d6 01       	movw	r26, r12
    211e:	6d 91       	ld	r22, X+
    2120:	6d 01       	movw	r12, r26
    2122:	09 95       	icall
    2124:	f8 01       	movw	r30, r16
    2126:	60 81       	ld	r22, Z
    2128:	c3 01       	movw	r24, r6
    212a:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    212e:	e5 cf       	rjmp	.-54     	; 0x20fa <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x142>
    2130:	87 01       	movw	r16, r14
    2132:	8c 85       	ldd	r24, Y+12	; 0x0c
    2134:	9d 85       	ldd	r25, Y+13	; 0x0d
    2136:	08 17       	cp	r16, r24
    2138:	19 07       	cpc	r17, r25
    213a:	b1 f0       	breq	.+44     	; 0x2168 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x1b0>
    213c:	d3 01       	movw	r26, r6
    213e:	15 96       	adiw	r26, 0x05	; 5
    2140:	8d 91       	ld	r24, X+
    2142:	9c 91       	ld	r25, X
    2144:	16 97       	sbiw	r26, 0x06	; 6
    2146:	68 01       	movw	r12, r16
    2148:	dc 01       	movw	r26, r24
    214a:	ed 91       	ld	r30, X+
    214c:	fc 91       	ld	r31, X
    214e:	01 90       	ld	r0, Z+
    2150:	f0 81       	ld	r31, Z
    2152:	e0 2d       	mov	r30, r0
    2154:	d8 01       	movw	r26, r16
    2156:	6d 91       	ld	r22, X+
    2158:	8d 01       	movw	r16, r26
    215a:	09 95       	icall
    215c:	f6 01       	movw	r30, r12
    215e:	60 81       	ld	r22, Z
    2160:	c3 01       	movw	r24, r6
    2162:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    2166:	e5 cf       	rjmp	.-54     	; 0x2132 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x17a>
    2168:	c3 01       	movw	r24, r6
    216a:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <BridgeClass::crcWrite()>
    216e:	64 e6       	ldi	r22, 0x64	; 100
    2170:	70 e0       	ldi	r23, 0x00	; 0
    2172:	c3 01       	movw	r24, r6
    2174:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <BridgeClass::timedRead(unsigned int)>
    2178:	8f 3f       	cpi	r24, 0xFF	; 255
    217a:	91 05       	cpc	r25, r1
    217c:	09 f0       	breq	.+2      	; 0x2180 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x1c8>
    217e:	74 c0       	rjmp	.+232    	; 0x2268 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    2180:	ef ef       	ldi	r30, 0xFF	; 255
    2182:	ff ef       	ldi	r31, 0xFF	; 255
    2184:	d3 01       	movw	r26, r6
    2186:	14 96       	adiw	r26, 0x04	; 4
    2188:	fc 93       	st	X, r31
    218a:	ee 93       	st	-X, r30
    218c:	13 97       	sbiw	r26, 0x03	; 3
    218e:	6f ef       	ldi	r22, 0xFF	; 255
    2190:	c3 01       	movw	r24, r6
    2192:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    2196:	65 e0       	ldi	r22, 0x05	; 5
    2198:	70 e0       	ldi	r23, 0x00	; 0
    219a:	c3 01       	movw	r24, r6
    219c:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <BridgeClass::timedRead(unsigned int)>
    21a0:	d3 01       	movw	r26, r6
    21a2:	6c 91       	ld	r22, X
    21a4:	26 2f       	mov	r18, r22
    21a6:	30 e0       	ldi	r19, 0x00	; 0
    21a8:	82 17       	cp	r24, r18
    21aa:	93 07       	cpc	r25, r19
    21ac:	09 f0       	breq	.+2      	; 0x21b0 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x1f8>
    21ae:	5c c0       	rjmp	.+184    	; 0x2268 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    21b0:	c3 01       	movw	r24, r6
    21b2:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    21b6:	6a e0       	ldi	r22, 0x0A	; 10
    21b8:	70 e0       	ldi	r23, 0x00	; 0
    21ba:	c3 01       	movw	r24, r6
    21bc:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <BridgeClass::timedRead(unsigned int)>
    21c0:	8c 01       	movw	r16, r24
    21c2:	97 fd       	sbrc	r25, 7
    21c4:	51 c0       	rjmp	.+162    	; 0x2268 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    21c6:	68 2f       	mov	r22, r24
    21c8:	c3 01       	movw	r24, r6
    21ca:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    21ce:	6a e0       	ldi	r22, 0x0A	; 10
    21d0:	70 e0       	ldi	r23, 0x00	; 0
    21d2:	c3 01       	movw	r24, r6
    21d4:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <BridgeClass::timedRead(unsigned int)>
    21d8:	6c 01       	movw	r12, r24
    21da:	97 fd       	sbrc	r25, 7
    21dc:	45 c0       	rjmp	.+138    	; 0x2268 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    21de:	68 2f       	mov	r22, r24
    21e0:	c3 01       	movw	r24, r6
    21e2:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    21e6:	0a 83       	std	Y+2, r16	; 0x02
    21e8:	19 82       	std	Y+1, r1	; 0x01
    21ea:	09 81       	ldd	r16, Y+1	; 0x01
    21ec:	1a 81       	ldd	r17, Y+2	; 0x02
    21ee:	0c 0d       	add	r16, r12
    21f0:	1d 1d       	adc	r17, r13
    21f2:	c1 2c       	mov	r12, r1
    21f4:	d1 2c       	mov	r13, r1
    21f6:	65 e0       	ldi	r22, 0x05	; 5
    21f8:	70 e0       	ldi	r23, 0x00	; 0
    21fa:	c3 01       	movw	r24, r6
    21fc:	c0 16       	cp	r12, r16
    21fe:	d1 06       	cpc	r13, r17
    2200:	a1 f0       	breq	.+40     	; 0x222a <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x272>
    2202:	c8 14       	cp	r12, r8
    2204:	d9 04       	cpc	r13, r9
    2206:	89 f0       	breq	.+34     	; 0x222a <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x272>
    2208:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <BridgeClass::timedRead(unsigned int)>
    220c:	97 fd       	sbrc	r25, 7
    220e:	09 c0       	rjmp	.+18     	; 0x2222 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x26a>
    2210:	ee 81       	ldd	r30, Y+6	; 0x06
    2212:	ff 81       	ldd	r31, Y+7	; 0x07
    2214:	ec 0d       	add	r30, r12
    2216:	fd 1d       	adc	r31, r13
    2218:	80 83       	st	Z, r24
    221a:	68 2f       	mov	r22, r24
    221c:	c3 01       	movw	r24, r6
    221e:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <BridgeClass::crcUpdate(unsigned char)>
    2222:	bf ef       	ldi	r27, 0xFF	; 255
    2224:	cb 1a       	sub	r12, r27
    2226:	db 0a       	sbc	r13, r27
    2228:	e6 cf       	rjmp	.-52     	; 0x21f6 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x23e>
    222a:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <BridgeClass::timedRead(unsigned int)>
    222e:	6c 01       	movw	r12, r24
    2230:	97 fd       	sbrc	r25, 7
    2232:	1a c0       	rjmp	.+52     	; 0x2268 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    2234:	65 e0       	ldi	r22, 0x05	; 5
    2236:	70 e0       	ldi	r23, 0x00	; 0
    2238:	c3 01       	movw	r24, r6
    223a:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <BridgeClass::timedRead(unsigned int)>
    223e:	97 fd       	sbrc	r25, 7
    2240:	13 c0       	rjmp	.+38     	; 0x2268 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    2242:	dc 2c       	mov	r13, r12
    2244:	cc 24       	eor	r12, r12
    2246:	c8 0e       	add	r12, r24
    2248:	d9 1e       	adc	r13, r25
    224a:	f3 01       	movw	r30, r6
    224c:	83 81       	ldd	r24, Z+3	; 0x03
    224e:	94 81       	ldd	r25, Z+4	; 0x04
    2250:	8c 15       	cp	r24, r12
    2252:	9d 05       	cpc	r25, r13
    2254:	49 f4       	brne	.+18     	; 0x2268 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    2256:	80 81       	ld	r24, Z
    2258:	8f 5f       	subi	r24, 0xFF	; 255
    225a:	80 83       	st	Z, r24
    225c:	c8 01       	movw	r24, r16
    225e:	80 16       	cp	r8, r16
    2260:	91 06       	cpc	r9, r17
    2262:	78 f4       	brcc	.+30     	; 0x2282 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2ca>
    2264:	c4 01       	movw	r24, r8
    2266:	0d c0       	rjmp	.+26     	; 0x2282 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2ca>
    2268:	53 94       	inc	r5
    226a:	64 e6       	ldi	r22, 0x64	; 100
    226c:	70 e0       	ldi	r23, 0x00	; 0
    226e:	80 e0       	ldi	r24, 0x00	; 0
    2270:	90 e0       	ldi	r25, 0x00	; 0
    2272:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
    2276:	c3 01       	movw	r24, r6
    2278:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <BridgeClass::dropAll()>
    227c:	d4 ce       	rjmp	.-600    	; 0x2026 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x6e>
    227e:	8f ef       	ldi	r24, 0xFF	; 255
    2280:	9f ef       	ldi	r25, 0xFF	; 255
    2282:	2d 96       	adiw	r28, 0x0d	; 13
    2284:	0f b6       	in	r0, 0x3f	; 63
    2286:	f8 94       	cli
    2288:	de bf       	out	0x3e, r29	; 62
    228a:	0f be       	out	0x3f, r0	; 63
    228c:	cd bf       	out	0x3d, r28	; 61
    228e:	df 91       	pop	r29
    2290:	cf 91       	pop	r28
    2292:	1f 91       	pop	r17
    2294:	0f 91       	pop	r16
    2296:	ff 90       	pop	r15
    2298:	ef 90       	pop	r14
    229a:	df 90       	pop	r13
    229c:	cf 90       	pop	r12
    229e:	bf 90       	pop	r11
    22a0:	af 90       	pop	r10
    22a2:	9f 90       	pop	r9
    22a4:	8f 90       	pop	r8
    22a6:	7f 90       	pop	r7
    22a8:	6f 90       	pop	r6
    22aa:	5f 90       	pop	r5
    22ac:	4f 90       	pop	r4
    22ae:	3f 90       	pop	r3
    22b0:	2f 90       	pop	r2
    22b2:	08 95       	ret

000022b4 <BridgeClass::begin()>:
    22b4:	3f 92       	push	r3
    22b6:	4f 92       	push	r4
    22b8:	5f 92       	push	r5
    22ba:	6f 92       	push	r6
    22bc:	7f 92       	push	r7
    22be:	8f 92       	push	r8
    22c0:	9f 92       	push	r9
    22c2:	af 92       	push	r10
    22c4:	bf 92       	push	r11
    22c6:	cf 92       	push	r12
    22c8:	df 92       	push	r13
    22ca:	ef 92       	push	r14
    22cc:	ff 92       	push	r15
    22ce:	0f 93       	push	r16
    22d0:	1f 93       	push	r17
    22d2:	cf 93       	push	r28
    22d4:	df 93       	push	r29
    22d6:	cd b7       	in	r28, 0x3d	; 61
    22d8:	de b7       	in	r29, 0x3e	; 62
    22da:	2e 97       	sbiw	r28, 0x0e	; 14
    22dc:	0f b6       	in	r0, 0x3f	; 63
    22de:	f8 94       	cli
    22e0:	de bf       	out	0x3e, r29	; 62
    22e2:	0f be       	out	0x3f, r0	; 63
    22e4:	cd bf       	out	0x3d, r28	; 61
    22e6:	3c 01       	movw	r6, r24
    22e8:	dc 01       	movw	r26, r24
    22ea:	17 96       	adiw	r26, 0x07	; 7
    22ec:	8c 91       	ld	r24, X
    22ee:	17 97       	sbiw	r26, 0x07	; 7
    22f0:	81 11       	cpse	r24, r1
    22f2:	cf c0       	rjmp	.+414    	; 0x2492 <BridgeClass::begin()+0x1de>
    22f4:	81 e0       	ldi	r24, 0x01	; 1
    22f6:	17 96       	adiw	r26, 0x07	; 7
    22f8:	8c 93       	st	X, r24
    22fa:	c3 01       	movw	r24, r6
    22fc:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <BridgeClass::dropAll()>
    2300:	68 ee       	ldi	r22, 0xE8	; 232
    2302:	73 e0       	ldi	r23, 0x03	; 3
    2304:	80 e0       	ldi	r24, 0x00	; 0
    2306:	90 e0       	ldi	r25, 0x00	; 0
    2308:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
    230c:	f3 01       	movw	r30, r6
    230e:	85 81       	ldd	r24, Z+5	; 0x05
    2310:	96 81       	ldd	r25, Z+6	; 0x06
    2312:	dc 01       	movw	r26, r24
    2314:	ed 91       	ld	r30, X+
    2316:	fc 91       	ld	r31, X
    2318:	04 80       	ldd	r0, Z+4	; 0x04
    231a:	f5 81       	ldd	r31, Z+5	; 0x05
    231c:	e0 2d       	mov	r30, r0
    231e:	09 95       	icall
    2320:	18 16       	cp	r1, r24
    2322:	19 06       	cpc	r1, r25
    2324:	54 f3       	brlt	.-44     	; 0x22fa <BridgeClass::begin()+0x46>
    2326:	55 e0       	ldi	r21, 0x05	; 5
    2328:	55 2e       	mov	r5, r21
    232a:	44 24       	eor	r4, r4
    232c:	43 94       	inc	r4
    232e:	62 e3       	ldi	r22, 0x32	; 50
    2330:	36 2e       	mov	r3, r22
    2332:	e0 e1       	ldi	r30, 0x10	; 16
    2334:	f1 e0       	ldi	r31, 0x01	; 1
    2336:	de 01       	movw	r26, r28
    2338:	16 96       	adiw	r26, 0x06	; 6
    233a:	85 2d       	mov	r24, r5
    233c:	01 90       	ld	r0, Z+
    233e:	0d 92       	st	X+, r0
    2340:	8a 95       	dec	r24
    2342:	e1 f7       	brne	.-8      	; 0x233c <BridgeClass::begin()+0x88>
    2344:	f3 01       	movw	r30, r6
    2346:	40 86       	std	Z+8, r4	; 0x08
    2348:	81 2c       	mov	r8, r1
    234a:	91 2c       	mov	r9, r1
    234c:	a1 2c       	mov	r10, r1
    234e:	b1 2c       	mov	r11, r1
    2350:	c1 2c       	mov	r12, r1
    2352:	d1 2c       	mov	r13, r1
    2354:	e1 2c       	mov	r14, r1
    2356:	f1 2c       	mov	r15, r1
    2358:	00 e0       	ldi	r16, 0x00	; 0
    235a:	10 e0       	ldi	r17, 0x00	; 0
    235c:	20 e0       	ldi	r18, 0x00	; 0
    235e:	30 e0       	ldi	r19, 0x00	; 0
    2360:	45 e0       	ldi	r20, 0x05	; 5
    2362:	50 e0       	ldi	r21, 0x00	; 0
    2364:	be 01       	movw	r22, r28
    2366:	6a 5f       	subi	r22, 0xFA	; 250
    2368:	7f 4f       	sbci	r23, 0xFF	; 255
    236a:	c3 01       	movw	r24, r6
    236c:	0e 94 dc 0f 	call	0x1fb8	; 0x1fb8 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    2370:	63 e0       	ldi	r22, 0x03	; 3
    2372:	d3 01       	movw	r26, r6
    2374:	15 96       	adiw	r26, 0x05	; 5
    2376:	8d 91       	ld	r24, X+
    2378:	9c 91       	ld	r25, X
    237a:	16 97       	sbiw	r26, 0x06	; 6
    237c:	0e 94 9f 09 	call	0x133e	; 0x133e <Print::print(char)>
    2380:	6a ef       	ldi	r22, 0xFA	; 250
    2382:	70 e0       	ldi	r23, 0x00	; 0
    2384:	80 e0       	ldi	r24, 0x00	; 0
    2386:	90 e0       	ldi	r25, 0x00	; 0
    2388:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
    238c:	62 e4       	ldi	r22, 0x42	; 66
    238e:	71 e0       	ldi	r23, 0x01	; 1
    2390:	f3 01       	movw	r30, r6
    2392:	85 81       	ldd	r24, Z+5	; 0x05
    2394:	96 81       	ldd	r25, Z+6	; 0x06
    2396:	0e 94 78 09 	call	0x12f0	; 0x12f0 <Print::print(__FlashStringHelper const*)>
    239a:	6a ef       	ldi	r22, 0xFA	; 250
    239c:	70 e0       	ldi	r23, 0x00	; 0
    239e:	80 e0       	ldi	r24, 0x00	; 0
    23a0:	90 e0       	ldi	r25, 0x00	; 0
    23a2:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
    23a6:	60 e4       	ldi	r22, 0x40	; 64
    23a8:	71 e0       	ldi	r23, 0x01	; 1
    23aa:	d3 01       	movw	r26, r6
    23ac:	15 96       	adiw	r26, 0x05	; 5
    23ae:	8d 91       	ld	r24, X+
    23b0:	9c 91       	ld	r25, X
    23b2:	16 97       	sbiw	r26, 0x06	; 6
    23b4:	0e 94 78 09 	call	0x12f0	; 0x12f0 <Print::print(__FlashStringHelper const*)>
    23b8:	64 ef       	ldi	r22, 0xF4	; 244
    23ba:	71 e0       	ldi	r23, 0x01	; 1
    23bc:	80 e0       	ldi	r24, 0x00	; 0
    23be:	90 e0       	ldi	r25, 0x00	; 0
    23c0:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
    23c4:	64 e3       	ldi	r22, 0x34	; 52
    23c6:	71 e0       	ldi	r23, 0x01	; 1
    23c8:	f3 01       	movw	r30, r6
    23ca:	85 81       	ldd	r24, Z+5	; 0x05
    23cc:	96 81       	ldd	r25, Z+6	; 0x06
    23ce:	0e 94 78 09 	call	0x12f0	; 0x12f0 <Print::print(__FlashStringHelper const*)>
    23d2:	64 ef       	ldi	r22, 0xF4	; 244
    23d4:	71 e0       	ldi	r23, 0x01	; 1
    23d6:	80 e0       	ldi	r24, 0x00	; 0
    23d8:	90 e0       	ldi	r25, 0x00	; 0
    23da:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
    23de:	c3 01       	movw	r24, r6
    23e0:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <BridgeClass::dropAll()>
    23e4:	e5 e1       	ldi	r30, 0x15	; 21
    23e6:	f1 e0       	ldi	r31, 0x01	; 1
    23e8:	de 01       	movw	r26, r28
    23ea:	11 96       	adiw	r26, 0x01	; 1
    23ec:	85 2d       	mov	r24, r5
    23ee:	01 90       	ld	r0, Z+
    23f0:	0d 92       	st	X+, r0
    23f2:	8a 95       	dec	r24
    23f4:	e1 f7       	brne	.-8      	; 0x23ee <BridgeClass::begin()+0x13a>
    23f6:	d3 01       	movw	r26, r6
    23f8:	18 96       	adiw	r26, 0x08	; 8
    23fa:	3c 92       	st	X, r3
    23fc:	44 e0       	ldi	r20, 0x04	; 4
    23fe:	84 2e       	mov	r8, r20
    2400:	91 2c       	mov	r9, r1
    2402:	fe 01       	movw	r30, r28
    2404:	3b 96       	adiw	r30, 0x0b	; 11
    2406:	5f 01       	movw	r10, r30
    2408:	20 e0       	ldi	r18, 0x00	; 0
    240a:	30 e0       	ldi	r19, 0x00	; 0
    240c:	45 e0       	ldi	r20, 0x05	; 5
    240e:	50 e0       	ldi	r21, 0x00	; 0
    2410:	be 01       	movw	r22, r28
    2412:	6f 5f       	subi	r22, 0xFF	; 255
    2414:	7f 4f       	sbci	r23, 0xFF	; 255
    2416:	c3 01       	movw	r24, r6
    2418:	0e 94 dc 0f 	call	0x1fb8	; 0x1fb8 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    241c:	8f 3f       	cpi	r24, 0xFF	; 255
    241e:	ff ef       	ldi	r31, 0xFF	; 255
    2420:	9f 07       	cpc	r25, r31
    2422:	39 f4       	brne	.+14     	; 0x2432 <BridgeClass::begin()+0x17e>
    2424:	68 ee       	ldi	r22, 0xE8	; 232
    2426:	73 e0       	ldi	r23, 0x03	; 3
    2428:	80 e0       	ldi	r24, 0x00	; 0
    242a:	90 e0       	ldi	r25, 0x00	; 0
    242c:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
    2430:	80 cf       	rjmp	.-256    	; 0x2332 <BridgeClass::begin()+0x7e>
    2432:	2b 85       	ldd	r18, Y+11	; 0x0b
    2434:	21 11       	cpse	r18, r1
    2436:	ff cf       	rjmp	.-2      	; 0x2436 <BridgeClass::begin()+0x182>
    2438:	04 97       	sbiw	r24, 0x04	; 4
    243a:	11 f5       	brne	.+68     	; 0x2480 <BridgeClass::begin()+0x1cc>
    243c:	2c 85       	ldd	r18, Y+12	; 0x0c
    243e:	30 e0       	ldi	r19, 0x00	; 0
    2440:	20 53       	subi	r18, 0x30	; 48
    2442:	31 09       	sbc	r19, r1
    2444:	44 e6       	ldi	r20, 0x64	; 100
    2446:	42 9f       	mul	r20, r18
    2448:	c0 01       	movw	r24, r0
    244a:	43 9f       	mul	r20, r19
    244c:	90 0d       	add	r25, r0
    244e:	11 24       	eor	r1, r1
    2450:	2d 85       	ldd	r18, Y+13	; 0x0d
    2452:	30 e0       	ldi	r19, 0x00	; 0
    2454:	20 53       	subi	r18, 0x30	; 48
    2456:	31 09       	sbc	r19, r1
    2458:	6a e0       	ldi	r22, 0x0A	; 10
    245a:	62 9f       	mul	r22, r18
    245c:	a0 01       	movw	r20, r0
    245e:	63 9f       	mul	r22, r19
    2460:	50 0d       	add	r21, r0
    2462:	11 24       	eor	r1, r1
    2464:	84 0f       	add	r24, r20
    2466:	95 1f       	adc	r25, r21
    2468:	2e 85       	ldd	r18, Y+14	; 0x0e
    246a:	30 e0       	ldi	r19, 0x00	; 0
    246c:	20 53       	subi	r18, 0x30	; 48
    246e:	31 09       	sbc	r19, r1
    2470:	82 0f       	add	r24, r18
    2472:	93 1f       	adc	r25, r19
    2474:	d3 01       	movw	r26, r6
    2476:	12 96       	adiw	r26, 0x02	; 2
    2478:	9c 93       	st	X, r25
    247a:	8e 93       	st	-X, r24
    247c:	11 97       	sbiw	r26, 0x01	; 1
    247e:	05 c0       	rjmp	.+10     	; 0x248a <BridgeClass::begin()+0x1d6>
    2480:	84 e6       	ldi	r24, 0x64	; 100
    2482:	90 e0       	ldi	r25, 0x00	; 0
    2484:	f3 01       	movw	r30, r6
    2486:	92 83       	std	Z+2, r25	; 0x02
    2488:	81 83       	std	Z+1, r24	; 0x01
    248a:	82 e3       	ldi	r24, 0x32	; 50
    248c:	d3 01       	movw	r26, r6
    248e:	18 96       	adiw	r26, 0x08	; 8
    2490:	8c 93       	st	X, r24
    2492:	2e 96       	adiw	r28, 0x0e	; 14
    2494:	0f b6       	in	r0, 0x3f	; 63
    2496:	f8 94       	cli
    2498:	de bf       	out	0x3e, r29	; 62
    249a:	0f be       	out	0x3f, r0	; 63
    249c:	cd bf       	out	0x3d, r28	; 61
    249e:	df 91       	pop	r29
    24a0:	cf 91       	pop	r28
    24a2:	1f 91       	pop	r17
    24a4:	0f 91       	pop	r16
    24a6:	ff 90       	pop	r15
    24a8:	ef 90       	pop	r14
    24aa:	df 90       	pop	r13
    24ac:	cf 90       	pop	r12
    24ae:	bf 90       	pop	r11
    24b0:	af 90       	pop	r10
    24b2:	9f 90       	pop	r9
    24b4:	8f 90       	pop	r8
    24b6:	7f 90       	pop	r7
    24b8:	6f 90       	pop	r6
    24ba:	5f 90       	pop	r5
    24bc:	4f 90       	pop	r4
    24be:	3f 90       	pop	r3
    24c0:	08 95       	ret

000024c2 <_GLOBAL__sub_I__ZN11BridgeClassC2ER6Stream>:
    24c2:	10 92 76 03 	sts	0x0376, r1
    24c6:	87 e9       	ldi	r24, 0x97	; 151
    24c8:	93 e0       	ldi	r25, 0x03	; 3
    24ca:	90 93 7c 03 	sts	0x037C, r25
    24ce:	80 93 7b 03 	sts	0x037B, r24
    24d2:	10 92 7d 03 	sts	0x037D, r1
    24d6:	10 92 7e 03 	sts	0x037E, r1
    24da:	90 93 80 03 	sts	0x0380, r25
    24de:	80 93 7f 03 	sts	0x037F, r24
    24e2:	08 95       	ret

000024e4 <Process::flush()>:
    24e4:	08 95       	ret

000024e6 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>:
    24e6:	8f 92       	push	r8
    24e8:	9f 92       	push	r9
    24ea:	af 92       	push	r10
    24ec:	bf 92       	push	r11
    24ee:	cf 92       	push	r12
    24f0:	df 92       	push	r13
    24f2:	ef 92       	push	r14
    24f4:	ff 92       	push	r15
    24f6:	0f 93       	push	r16
    24f8:	1f 93       	push	r17
    24fa:	48 01       	movw	r8, r16
    24fc:	59 01       	movw	r10, r18
    24fe:	c1 2c       	mov	r12, r1
    2500:	d1 2c       	mov	r13, r1
    2502:	e1 2c       	mov	r14, r1
    2504:	f1 2c       	mov	r15, r1
    2506:	00 e0       	ldi	r16, 0x00	; 0
    2508:	10 e0       	ldi	r17, 0x00	; 0
    250a:	20 e0       	ldi	r18, 0x00	; 0
    250c:	30 e0       	ldi	r19, 0x00	; 0
    250e:	0e 94 dc 0f 	call	0x1fb8	; 0x1fb8 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    2512:	1f 91       	pop	r17
    2514:	0f 91       	pop	r16
    2516:	ff 90       	pop	r15
    2518:	ef 90       	pop	r14
    251a:	df 90       	pop	r13
    251c:	cf 90       	pop	r12
    251e:	bf 90       	pop	r11
    2520:	af 90       	pop	r10
    2522:	9f 90       	pop	r9
    2524:	8f 90       	pop	r8
    2526:	08 95       	ret

00002528 <Process::write(unsigned char)>:
    2528:	0f 93       	push	r16
    252a:	1f 93       	push	r17
    252c:	cf 93       	push	r28
    252e:	df 93       	push	r29
    2530:	00 d0       	rcall	.+0      	; 0x2532 <Process::write(unsigned char)+0xa>
    2532:	1f 92       	push	r1
    2534:	cd b7       	in	r28, 0x3d	; 61
    2536:	de b7       	in	r29, 0x3e	; 62
    2538:	29 e4       	ldi	r18, 0x49	; 73
    253a:	29 83       	std	Y+1, r18	; 0x01
    253c:	fc 01       	movw	r30, r24
    253e:	26 85       	ldd	r18, Z+14	; 0x0e
    2540:	2a 83       	std	Y+2, r18	; 0x02
    2542:	6b 83       	std	Y+3, r22	; 0x03
    2544:	00 e0       	ldi	r16, 0x00	; 0
    2546:	10 e0       	ldi	r17, 0x00	; 0
    2548:	20 e0       	ldi	r18, 0x00	; 0
    254a:	30 e0       	ldi	r19, 0x00	; 0
    254c:	43 e0       	ldi	r20, 0x03	; 3
    254e:	50 e0       	ldi	r21, 0x00	; 0
    2550:	be 01       	movw	r22, r28
    2552:	6f 5f       	subi	r22, 0xFF	; 255
    2554:	7f 4f       	sbci	r23, 0xFF	; 255
    2556:	84 85       	ldd	r24, Z+12	; 0x0c
    2558:	95 85       	ldd	r25, Z+13	; 0x0d
    255a:	0e 94 73 12 	call	0x24e6	; 0x24e6 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    255e:	81 e0       	ldi	r24, 0x01	; 1
    2560:	90 e0       	ldi	r25, 0x00	; 0
    2562:	0f 90       	pop	r0
    2564:	0f 90       	pop	r0
    2566:	0f 90       	pop	r0
    2568:	df 91       	pop	r29
    256a:	cf 91       	pop	r28
    256c:	1f 91       	pop	r17
    256e:	0f 91       	pop	r16
    2570:	08 95       	ret

00002572 <Process::doBuffer()>:
    2572:	ef 92       	push	r14
    2574:	ff 92       	push	r15
    2576:	0f 93       	push	r16
    2578:	1f 93       	push	r17
    257a:	cf 93       	push	r28
    257c:	df 93       	push	r29
    257e:	00 d0       	rcall	.+0      	; 0x2580 <Process::doBuffer()+0xe>
    2580:	1f 92       	push	r1
    2582:	cd b7       	in	r28, 0x3d	; 61
    2584:	de b7       	in	r29, 0x3e	; 62
    2586:	7c 01       	movw	r14, r24
    2588:	fc 01       	movw	r30, r24
    258a:	83 89       	ldd	r24, Z+19	; 0x13
    258c:	81 11       	cpse	r24, r1
    258e:	17 c0       	rjmp	.+46     	; 0x25be <Process::doBuffer()+0x4c>
    2590:	14 8a       	std	Z+20, r1	; 0x14
    2592:	8f e4       	ldi	r24, 0x4F	; 79
    2594:	89 83       	std	Y+1, r24	; 0x01
    2596:	86 85       	ldd	r24, Z+14	; 0x0e
    2598:	8a 83       	std	Y+2, r24	; 0x02
    259a:	80 e4       	ldi	r24, 0x40	; 64
    259c:	8b 83       	std	Y+3, r24	; 0x03
    259e:	97 01       	movw	r18, r14
    25a0:	2b 5e       	subi	r18, 0xEB	; 235
    25a2:	3f 4f       	sbci	r19, 0xFF	; 255
    25a4:	00 e4       	ldi	r16, 0x40	; 64
    25a6:	10 e0       	ldi	r17, 0x00	; 0
    25a8:	43 e0       	ldi	r20, 0x03	; 3
    25aa:	50 e0       	ldi	r21, 0x00	; 0
    25ac:	be 01       	movw	r22, r28
    25ae:	6f 5f       	subi	r22, 0xFF	; 255
    25b0:	7f 4f       	sbci	r23, 0xFF	; 255
    25b2:	84 85       	ldd	r24, Z+12	; 0x0c
    25b4:	95 85       	ldd	r25, Z+13	; 0x0d
    25b6:	0e 94 73 12 	call	0x24e6	; 0x24e6 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    25ba:	f7 01       	movw	r30, r14
    25bc:	83 8b       	std	Z+19, r24	; 0x13
    25be:	0f 90       	pop	r0
    25c0:	0f 90       	pop	r0
    25c2:	0f 90       	pop	r0
    25c4:	df 91       	pop	r29
    25c6:	cf 91       	pop	r28
    25c8:	1f 91       	pop	r17
    25ca:	0f 91       	pop	r16
    25cc:	ff 90       	pop	r15
    25ce:	ef 90       	pop	r14
    25d0:	08 95       	ret

000025d2 <Process::available()>:
    25d2:	cf 93       	push	r28
    25d4:	df 93       	push	r29
    25d6:	ec 01       	movw	r28, r24
    25d8:	0e 94 b9 12 	call	0x2572	; 0x2572 <Process::doBuffer()>
    25dc:	8b 89       	ldd	r24, Y+19	; 0x13
    25de:	90 e0       	ldi	r25, 0x00	; 0
    25e0:	df 91       	pop	r29
    25e2:	cf 91       	pop	r28
    25e4:	08 95       	ret

000025e6 <Process::read()>:
    25e6:	cf 93       	push	r28
    25e8:	df 93       	push	r29
    25ea:	ec 01       	movw	r28, r24
    25ec:	0e 94 b9 12 	call	0x2572	; 0x2572 <Process::doBuffer()>
    25f0:	8b 89       	ldd	r24, Y+19	; 0x13
    25f2:	88 23       	and	r24, r24
    25f4:	59 f0       	breq	.+22     	; 0x260c <Process::read()+0x26>
    25f6:	81 50       	subi	r24, 0x01	; 1
    25f8:	8b 8b       	std	Y+19, r24	; 0x13
    25fa:	8c 89       	ldd	r24, Y+20	; 0x14
    25fc:	91 e0       	ldi	r25, 0x01	; 1
    25fe:	98 0f       	add	r25, r24
    2600:	9c 8b       	std	Y+20, r25	; 0x14
    2602:	c8 0f       	add	r28, r24
    2604:	d1 1d       	adc	r29, r1
    2606:	8d 89       	ldd	r24, Y+21	; 0x15
    2608:	90 e0       	ldi	r25, 0x00	; 0
    260a:	02 c0       	rjmp	.+4      	; 0x2610 <Process::read()+0x2a>
    260c:	8f ef       	ldi	r24, 0xFF	; 255
    260e:	9f ef       	ldi	r25, 0xFF	; 255
    2610:	df 91       	pop	r29
    2612:	cf 91       	pop	r28
    2614:	08 95       	ret

00002616 <Process::peek()>:
    2616:	cf 93       	push	r28
    2618:	df 93       	push	r29
    261a:	ec 01       	movw	r28, r24
    261c:	0e 94 b9 12 	call	0x2572	; 0x2572 <Process::doBuffer()>
    2620:	8b 89       	ldd	r24, Y+19	; 0x13
    2622:	88 23       	and	r24, r24
    2624:	31 f0       	breq	.+12     	; 0x2632 <Process::peek()+0x1c>
    2626:	8c 89       	ldd	r24, Y+20	; 0x14
    2628:	c8 0f       	add	r28, r24
    262a:	d1 1d       	adc	r29, r1
    262c:	8d 89       	ldd	r24, Y+21	; 0x15
    262e:	90 e0       	ldi	r25, 0x00	; 0
    2630:	02 c0       	rjmp	.+4      	; 0x2636 <Process::peek()+0x20>
    2632:	8f ef       	ldi	r24, 0xFF	; 255
    2634:	9f ef       	ldi	r25, 0xFF	; 255
    2636:	df 91       	pop	r29
    2638:	cf 91       	pop	r28
    263a:	08 95       	ret

0000263c <Process::addParameter(String const&)>:
    263c:	0f 93       	push	r16
    263e:	1f 93       	push	r17
    2640:	cf 93       	push	r28
    2642:	df 93       	push	r29
    2644:	ec 01       	movw	r28, r24
    2646:	8b 01       	movw	r16, r22
    2648:	6c e9       	ldi	r22, 0x9C	; 156
    264a:	72 e0       	ldi	r23, 0x02	; 2
    264c:	88 89       	ldd	r24, Y+16	; 0x10
    264e:	99 89       	ldd	r25, Y+17	; 0x11
    2650:	0e 94 36 0f 	call	0x1e6c	; 0x1e6c <String::concat(char const*)>
    2654:	b8 01       	movw	r22, r16
    2656:	88 89       	ldd	r24, Y+16	; 0x10
    2658:	99 89       	ldd	r25, Y+17	; 0x11
    265a:	df 91       	pop	r29
    265c:	cf 91       	pop	r28
    265e:	1f 91       	pop	r17
    2660:	0f 91       	pop	r16
    2662:	0c 94 2f 0f 	jmp	0x1e5e	; 0x1e5e <String::concat(String const&)>

00002666 <Process::runAsynchronously()>:
    2666:	6f 92       	push	r6
    2668:	7f 92       	push	r7
    266a:	8f 92       	push	r8
    266c:	9f 92       	push	r9
    266e:	af 92       	push	r10
    2670:	bf 92       	push	r11
    2672:	cf 92       	push	r12
    2674:	df 92       	push	r13
    2676:	ef 92       	push	r14
    2678:	ff 92       	push	r15
    267a:	0f 93       	push	r16
    267c:	1f 93       	push	r17
    267e:	cf 93       	push	r28
    2680:	df 93       	push	r29
    2682:	00 d0       	rcall	.+0      	; 0x2684 <Process::runAsynchronously()+0x1e>
    2684:	1f 92       	push	r1
    2686:	cd b7       	in	r28, 0x3d	; 61
    2688:	de b7       	in	r29, 0x3e	; 62
    268a:	3c 01       	movw	r6, r24
    268c:	82 e5       	ldi	r24, 0x52	; 82
    268e:	8b 83       	std	Y+3, r24	; 0x03
    2690:	d3 01       	movw	r26, r6
    2692:	50 96       	adiw	r26, 0x10	; 16
    2694:	ed 91       	ld	r30, X+
    2696:	fc 91       	ld	r31, X
    2698:	51 97       	sbiw	r26, 0x11	; 17
    269a:	04 81       	ldd	r16, Z+4	; 0x04
    269c:	15 81       	ldd	r17, Z+5	; 0x05
    269e:	20 81       	ld	r18, Z
    26a0:	31 81       	ldd	r19, Z+1	; 0x01
    26a2:	82 e0       	ldi	r24, 0x02	; 2
    26a4:	88 2e       	mov	r8, r24
    26a6:	91 2c       	mov	r9, r1
    26a8:	fe 01       	movw	r30, r28
    26aa:	31 96       	adiw	r30, 0x01	; 1
    26ac:	5f 01       	movw	r10, r30
    26ae:	c1 2c       	mov	r12, r1
    26b0:	d1 2c       	mov	r13, r1
    26b2:	e1 2c       	mov	r14, r1
    26b4:	f1 2c       	mov	r15, r1
    26b6:	41 e0       	ldi	r20, 0x01	; 1
    26b8:	50 e0       	ldi	r21, 0x00	; 0
    26ba:	be 01       	movw	r22, r28
    26bc:	6d 5f       	subi	r22, 0xFD	; 253
    26be:	7f 4f       	sbci	r23, 0xFF	; 255
    26c0:	1c 96       	adiw	r26, 0x0c	; 12
    26c2:	8d 91       	ld	r24, X+
    26c4:	9c 91       	ld	r25, X
    26c6:	1d 97       	sbiw	r26, 0x0d	; 13
    26c8:	0e 94 dc 0f 	call	0x1fb8	; 0x1fb8 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    26cc:	8a 81       	ldd	r24, Y+2	; 0x02
    26ce:	90 e0       	ldi	r25, 0x00	; 0
    26d0:	d3 01       	movw	r26, r6
    26d2:	1f 96       	adiw	r26, 0x0f	; 15
    26d4:	9c 93       	st	X, r25
    26d6:	8e 93       	st	-X, r24
    26d8:	1e 97       	sbiw	r26, 0x0e	; 14
    26da:	50 96       	adiw	r26, 0x10	; 16
    26dc:	0d 91       	ld	r16, X+
    26de:	1c 91       	ld	r17, X
    26e0:	51 97       	sbiw	r26, 0x11	; 17
    26e2:	01 15       	cp	r16, r1
    26e4:	11 05       	cpc	r17, r1
    26e6:	31 f0       	breq	.+12     	; 0x26f4 <Process::runAsynchronously()+0x8e>
    26e8:	c8 01       	movw	r24, r16
    26ea:	0e 94 5f 0e 	call	0x1cbe	; 0x1cbe <String::~String()>
    26ee:	c8 01       	movw	r24, r16
    26f0:	0e 94 73 17 	call	0x2ee6	; 0x2ee6 <operator delete(void*)>
    26f4:	f3 01       	movw	r30, r6
    26f6:	11 8a       	std	Z+17, r1	; 0x11
    26f8:	10 8a       	std	Z+16, r1	; 0x10
    26fa:	89 81       	ldd	r24, Y+1	; 0x01
    26fc:	81 11       	cpse	r24, r1
    26fe:	02 c0       	rjmp	.+4      	; 0x2704 <Process::runAsynchronously()+0x9e>
    2700:	81 e0       	ldi	r24, 0x01	; 1
    2702:	82 8b       	std	Z+18, r24	; 0x12
    2704:	0f 90       	pop	r0
    2706:	0f 90       	pop	r0
    2708:	0f 90       	pop	r0
    270a:	df 91       	pop	r29
    270c:	cf 91       	pop	r28
    270e:	1f 91       	pop	r17
    2710:	0f 91       	pop	r16
    2712:	ff 90       	pop	r15
    2714:	ef 90       	pop	r14
    2716:	df 90       	pop	r13
    2718:	cf 90       	pop	r12
    271a:	bf 90       	pop	r11
    271c:	af 90       	pop	r10
    271e:	9f 90       	pop	r9
    2720:	8f 90       	pop	r8
    2722:	7f 90       	pop	r7
    2724:	6f 90       	pop	r6
    2726:	08 95       	ret

00002728 <Process::running()>:
    2728:	0f 93       	push	r16
    272a:	1f 93       	push	r17
    272c:	cf 93       	push	r28
    272e:	df 93       	push	r29
    2730:	00 d0       	rcall	.+0      	; 0x2732 <Process::running()+0xa>
    2732:	1f 92       	push	r1
    2734:	cd b7       	in	r28, 0x3d	; 61
    2736:	de b7       	in	r29, 0x3e	; 62
    2738:	22 e7       	ldi	r18, 0x72	; 114
    273a:	29 83       	std	Y+1, r18	; 0x01
    273c:	fc 01       	movw	r30, r24
    273e:	26 85       	ldd	r18, Z+14	; 0x0e
    2740:	2a 83       	std	Y+2, r18	; 0x02
    2742:	01 e0       	ldi	r16, 0x01	; 1
    2744:	10 e0       	ldi	r17, 0x00	; 0
    2746:	9e 01       	movw	r18, r28
    2748:	2d 5f       	subi	r18, 0xFD	; 253
    274a:	3f 4f       	sbci	r19, 0xFF	; 255
    274c:	42 e0       	ldi	r20, 0x02	; 2
    274e:	50 e0       	ldi	r21, 0x00	; 0
    2750:	be 01       	movw	r22, r28
    2752:	6f 5f       	subi	r22, 0xFF	; 255
    2754:	7f 4f       	sbci	r23, 0xFF	; 255
    2756:	84 85       	ldd	r24, Z+12	; 0x0c
    2758:	95 85       	ldd	r25, Z+13	; 0x0d
    275a:	0e 94 73 12 	call	0x24e6	; 0x24e6 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    275e:	81 e0       	ldi	r24, 0x01	; 1
    2760:	9b 81       	ldd	r25, Y+3	; 0x03
    2762:	91 30       	cpi	r25, 0x01	; 1
    2764:	09 f0       	breq	.+2      	; 0x2768 <Process::running()+0x40>
    2766:	80 e0       	ldi	r24, 0x00	; 0
    2768:	0f 90       	pop	r0
    276a:	0f 90       	pop	r0
    276c:	0f 90       	pop	r0
    276e:	df 91       	pop	r29
    2770:	cf 91       	pop	r28
    2772:	1f 91       	pop	r17
    2774:	0f 91       	pop	r16
    2776:	08 95       	ret

00002778 <Process::exitValue()>:
    2778:	0f 93       	push	r16
    277a:	1f 93       	push	r17
    277c:	cf 93       	push	r28
    277e:	df 93       	push	r29
    2780:	00 d0       	rcall	.+0      	; 0x2782 <Process::exitValue()+0xa>
    2782:	00 d0       	rcall	.+0      	; 0x2784 <Process::exitValue()+0xc>
    2784:	cd b7       	in	r28, 0x3d	; 61
    2786:	de b7       	in	r29, 0x3e	; 62
    2788:	27 e5       	ldi	r18, 0x57	; 87
    278a:	2b 83       	std	Y+3, r18	; 0x03
    278c:	fc 01       	movw	r30, r24
    278e:	26 85       	ldd	r18, Z+14	; 0x0e
    2790:	2c 83       	std	Y+4, r18	; 0x04
    2792:	02 e0       	ldi	r16, 0x02	; 2
    2794:	10 e0       	ldi	r17, 0x00	; 0
    2796:	9e 01       	movw	r18, r28
    2798:	2f 5f       	subi	r18, 0xFF	; 255
    279a:	3f 4f       	sbci	r19, 0xFF	; 255
    279c:	42 e0       	ldi	r20, 0x02	; 2
    279e:	50 e0       	ldi	r21, 0x00	; 0
    27a0:	be 01       	movw	r22, r28
    27a2:	6d 5f       	subi	r22, 0xFD	; 253
    27a4:	7f 4f       	sbci	r23, 0xFF	; 255
    27a6:	84 85       	ldd	r24, Z+12	; 0x0c
    27a8:	95 85       	ldd	r25, Z+13	; 0x0d
    27aa:	0e 94 73 12 	call	0x24e6	; 0x24e6 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    27ae:	89 81       	ldd	r24, Y+1	; 0x01
    27b0:	90 e0       	ldi	r25, 0x00	; 0
    27b2:	98 2f       	mov	r25, r24
    27b4:	88 27       	eor	r24, r24
    27b6:	2a 81       	ldd	r18, Y+2	; 0x02
    27b8:	82 0f       	add	r24, r18
    27ba:	91 1d       	adc	r25, r1
    27bc:	0f 90       	pop	r0
    27be:	0f 90       	pop	r0
    27c0:	0f 90       	pop	r0
    27c2:	0f 90       	pop	r0
    27c4:	df 91       	pop	r29
    27c6:	cf 91       	pop	r28
    27c8:	1f 91       	pop	r17
    27ca:	0f 91       	pop	r16
    27cc:	08 95       	ret

000027ce <Process::close()>:
    27ce:	ef 92       	push	r14
    27d0:	ff 92       	push	r15
    27d2:	0f 93       	push	r16
    27d4:	1f 93       	push	r17
    27d6:	cf 93       	push	r28
    27d8:	df 93       	push	r29
    27da:	00 d0       	rcall	.+0      	; 0x27dc <Process::close()+0xe>
    27dc:	cd b7       	in	r28, 0x3d	; 61
    27de:	de b7       	in	r29, 0x3e	; 62
    27e0:	7c 01       	movw	r14, r24
    27e2:	fc 01       	movw	r30, r24
    27e4:	82 89       	ldd	r24, Z+18	; 0x12
    27e6:	88 23       	and	r24, r24
    27e8:	89 f0       	breq	.+34     	; 0x280c <Process::close()+0x3e>
    27ea:	87 e7       	ldi	r24, 0x77	; 119
    27ec:	89 83       	std	Y+1, r24	; 0x01
    27ee:	86 85       	ldd	r24, Z+14	; 0x0e
    27f0:	8a 83       	std	Y+2, r24	; 0x02
    27f2:	00 e0       	ldi	r16, 0x00	; 0
    27f4:	10 e0       	ldi	r17, 0x00	; 0
    27f6:	20 e0       	ldi	r18, 0x00	; 0
    27f8:	30 e0       	ldi	r19, 0x00	; 0
    27fa:	42 e0       	ldi	r20, 0x02	; 2
    27fc:	50 e0       	ldi	r21, 0x00	; 0
    27fe:	be 01       	movw	r22, r28
    2800:	6f 5f       	subi	r22, 0xFF	; 255
    2802:	7f 4f       	sbci	r23, 0xFF	; 255
    2804:	84 85       	ldd	r24, Z+12	; 0x0c
    2806:	95 85       	ldd	r25, Z+13	; 0x0d
    2808:	0e 94 73 12 	call	0x24e6	; 0x24e6 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    280c:	f7 01       	movw	r30, r14
    280e:	12 8a       	std	Z+18, r1	; 0x12
    2810:	0f 90       	pop	r0
    2812:	0f 90       	pop	r0
    2814:	df 91       	pop	r29
    2816:	cf 91       	pop	r28
    2818:	1f 91       	pop	r17
    281a:	0f 91       	pop	r16
    281c:	ff 90       	pop	r15
    281e:	ef 90       	pop	r14
    2820:	08 95       	ret

00002822 <Process::~Process()>:
    2822:	2e ea       	ldi	r18, 0xAE	; 174
    2824:	32 e0       	ldi	r19, 0x02	; 2
    2826:	fc 01       	movw	r30, r24
    2828:	31 83       	std	Z+1, r19	; 0x01
    282a:	20 83       	st	Z, r18
    282c:	0c 94 e7 13 	jmp	0x27ce	; 0x27ce <Process::close()>

00002830 <Process::begin(String const&)>:
    2830:	ef 92       	push	r14
    2832:	ff 92       	push	r15
    2834:	0f 93       	push	r16
    2836:	1f 93       	push	r17
    2838:	cf 93       	push	r28
    283a:	df 93       	push	r29
    283c:	00 d0       	rcall	.+0      	; 0x283e <Process::begin(String const&)+0xe>
    283e:	cd b7       	in	r28, 0x3d	; 61
    2840:	de b7       	in	r29, 0x3e	; 62
    2842:	7c 01       	movw	r14, r24
    2844:	69 83       	std	Y+1, r22	; 0x01
    2846:	7a 83       	std	Y+2, r23	; 0x02
    2848:	0e 94 e7 13 	call	0x27ce	; 0x27ce <Process::close()>
    284c:	86 e0       	ldi	r24, 0x06	; 6
    284e:	90 e0       	ldi	r25, 0x00	; 0
    2850:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <operator new(unsigned int)>
    2854:	8c 01       	movw	r16, r24
    2856:	69 81       	ldd	r22, Y+1	; 0x01
    2858:	7a 81       	ldd	r23, Y+2	; 0x02
    285a:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <String::String(String const&)>
    285e:	f7 01       	movw	r30, r14
    2860:	11 8b       	std	Z+17, r17	; 0x11
    2862:	00 8b       	std	Z+16, r16	; 0x10
    2864:	0f 90       	pop	r0
    2866:	0f 90       	pop	r0
    2868:	df 91       	pop	r29
    286a:	cf 91       	pop	r28
    286c:	1f 91       	pop	r17
    286e:	0f 91       	pop	r16
    2870:	ff 90       	pop	r15
    2872:	ef 90       	pop	r14
    2874:	08 95       	ret

00002876 <Process::runShellCommandAsynchronously(String const&)>:
    2876:	ef 92       	push	r14
    2878:	ff 92       	push	r15
    287a:	0f 93       	push	r16
    287c:	1f 93       	push	r17
    287e:	cf 93       	push	r28
    2880:	df 93       	push	r29
    2882:	00 d0       	rcall	.+0      	; 0x2884 <Process::runShellCommandAsynchronously(String const&)+0xe>
    2884:	00 d0       	rcall	.+0      	; 0x2886 <Process::runShellCommandAsynchronously(String const&)+0x10>
    2886:	00 d0       	rcall	.+0      	; 0x2888 <Process::runShellCommandAsynchronously(String const&)+0x12>
    2888:	cd b7       	in	r28, 0x3d	; 61
    288a:	de b7       	in	r29, 0x3e	; 62
    288c:	8c 01       	movw	r16, r24
    288e:	7b 01       	movw	r14, r22
    2890:	6e e9       	ldi	r22, 0x9E	; 158
    2892:	72 e0       	ldi	r23, 0x02	; 2
    2894:	ce 01       	movw	r24, r28
    2896:	01 96       	adiw	r24, 0x01	; 1
    2898:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <String::String(char const*)>
    289c:	be 01       	movw	r22, r28
    289e:	6f 5f       	subi	r22, 0xFF	; 255
    28a0:	7f 4f       	sbci	r23, 0xFF	; 255
    28a2:	c8 01       	movw	r24, r16
    28a4:	0e 94 18 14 	call	0x2830	; 0x2830 <Process::begin(String const&)>
    28a8:	ce 01       	movw	r24, r28
    28aa:	01 96       	adiw	r24, 0x01	; 1
    28ac:	0e 94 5f 0e 	call	0x1cbe	; 0x1cbe <String::~String()>
    28b0:	67 ea       	ldi	r22, 0xA7	; 167
    28b2:	72 e0       	ldi	r23, 0x02	; 2
    28b4:	ce 01       	movw	r24, r28
    28b6:	01 96       	adiw	r24, 0x01	; 1
    28b8:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <String::String(char const*)>
    28bc:	be 01       	movw	r22, r28
    28be:	6f 5f       	subi	r22, 0xFF	; 255
    28c0:	7f 4f       	sbci	r23, 0xFF	; 255
    28c2:	c8 01       	movw	r24, r16
    28c4:	0e 94 1e 13 	call	0x263c	; 0x263c <Process::addParameter(String const&)>
    28c8:	ce 01       	movw	r24, r28
    28ca:	01 96       	adiw	r24, 0x01	; 1
    28cc:	0e 94 5f 0e 	call	0x1cbe	; 0x1cbe <String::~String()>
    28d0:	b7 01       	movw	r22, r14
    28d2:	c8 01       	movw	r24, r16
    28d4:	0e 94 1e 13 	call	0x263c	; 0x263c <Process::addParameter(String const&)>
    28d8:	c8 01       	movw	r24, r16
    28da:	0e 94 33 13 	call	0x2666	; 0x2666 <Process::runAsynchronously()>
    28de:	26 96       	adiw	r28, 0x06	; 6
    28e0:	0f b6       	in	r0, 0x3f	; 63
    28e2:	f8 94       	cli
    28e4:	de bf       	out	0x3e, r29	; 62
    28e6:	0f be       	out	0x3f, r0	; 63
    28e8:	cd bf       	out	0x3d, r28	; 61
    28ea:	df 91       	pop	r29
    28ec:	cf 91       	pop	r28
    28ee:	1f 91       	pop	r17
    28f0:	0f 91       	pop	r16
    28f2:	ff 90       	pop	r15
    28f4:	ef 90       	pop	r14
    28f6:	08 95       	ret

000028f8 <Process::runShellCommand(String const&)>:
    28f8:	cf 93       	push	r28
    28fa:	df 93       	push	r29
    28fc:	ec 01       	movw	r28, r24
    28fe:	0e 94 3b 14 	call	0x2876	; 0x2876 <Process::runShellCommandAsynchronously(String const&)>
    2902:	ce 01       	movw	r24, r28
    2904:	0e 94 94 13 	call	0x2728	; 0x2728 <Process::running()>
    2908:	88 23       	and	r24, r24
    290a:	39 f0       	breq	.+14     	; 0x291a <Process::runShellCommand(String const&)+0x22>
    290c:	64 e6       	ldi	r22, 0x64	; 100
    290e:	70 e0       	ldi	r23, 0x00	; 0
    2910:	80 e0       	ldi	r24, 0x00	; 0
    2912:	90 e0       	ldi	r25, 0x00	; 0
    2914:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <delay>
    2918:	f4 cf       	rjmp	.-24     	; 0x2902 <Process::runShellCommand(String const&)+0xa>
    291a:	ce 01       	movw	r24, r28
    291c:	df 91       	pop	r29
    291e:	cf 91       	pop	r28
    2920:	0c 94 bc 13 	jmp	0x2778	; 0x2778 <Process::exitValue()>

00002924 <__vector_23>:
    2924:	1f 92       	push	r1
    2926:	0f 92       	push	r0
    2928:	0f b6       	in	r0, 0x3f	; 63
    292a:	0f 92       	push	r0
    292c:	11 24       	eor	r1, r1
    292e:	2f 93       	push	r18
    2930:	3f 93       	push	r19
    2932:	8f 93       	push	r24
    2934:	9f 93       	push	r25
    2936:	af 93       	push	r26
    2938:	bf 93       	push	r27
    293a:	80 91 82 03 	lds	r24, 0x0382
    293e:	90 91 83 03 	lds	r25, 0x0383
    2942:	a0 91 84 03 	lds	r26, 0x0384
    2946:	b0 91 85 03 	lds	r27, 0x0385
    294a:	30 91 81 03 	lds	r19, 0x0381
    294e:	23 e0       	ldi	r18, 0x03	; 3
    2950:	23 0f       	add	r18, r19
    2952:	2d 37       	cpi	r18, 0x7D	; 125
    2954:	20 f4       	brcc	.+8      	; 0x295e <__vector_23+0x3a>
    2956:	01 96       	adiw	r24, 0x01	; 1
    2958:	a1 1d       	adc	r26, r1
    295a:	b1 1d       	adc	r27, r1
    295c:	05 c0       	rjmp	.+10     	; 0x2968 <__vector_23+0x44>
    295e:	26 e8       	ldi	r18, 0x86	; 134
    2960:	23 0f       	add	r18, r19
    2962:	02 96       	adiw	r24, 0x02	; 2
    2964:	a1 1d       	adc	r26, r1
    2966:	b1 1d       	adc	r27, r1
    2968:	20 93 81 03 	sts	0x0381, r18
    296c:	80 93 82 03 	sts	0x0382, r24
    2970:	90 93 83 03 	sts	0x0383, r25
    2974:	a0 93 84 03 	sts	0x0384, r26
    2978:	b0 93 85 03 	sts	0x0385, r27
    297c:	80 91 86 03 	lds	r24, 0x0386
    2980:	90 91 87 03 	lds	r25, 0x0387
    2984:	a0 91 88 03 	lds	r26, 0x0388
    2988:	b0 91 89 03 	lds	r27, 0x0389
    298c:	01 96       	adiw	r24, 0x01	; 1
    298e:	a1 1d       	adc	r26, r1
    2990:	b1 1d       	adc	r27, r1
    2992:	80 93 86 03 	sts	0x0386, r24
    2996:	90 93 87 03 	sts	0x0387, r25
    299a:	a0 93 88 03 	sts	0x0388, r26
    299e:	b0 93 89 03 	sts	0x0389, r27
    29a2:	bf 91       	pop	r27
    29a4:	af 91       	pop	r26
    29a6:	9f 91       	pop	r25
    29a8:	8f 91       	pop	r24
    29aa:	3f 91       	pop	r19
    29ac:	2f 91       	pop	r18
    29ae:	0f 90       	pop	r0
    29b0:	0f be       	out	0x3f, r0	; 63
    29b2:	0f 90       	pop	r0
    29b4:	1f 90       	pop	r1
    29b6:	18 95       	reti

000029b8 <millis>:
    29b8:	2f b7       	in	r18, 0x3f	; 63
    29ba:	f8 94       	cli
    29bc:	60 91 82 03 	lds	r22, 0x0382
    29c0:	70 91 83 03 	lds	r23, 0x0383
    29c4:	80 91 84 03 	lds	r24, 0x0384
    29c8:	90 91 85 03 	lds	r25, 0x0385
    29cc:	2f bf       	out	0x3f, r18	; 63
    29ce:	08 95       	ret

000029d0 <micros>:
    29d0:	3f b7       	in	r19, 0x3f	; 63
    29d2:	f8 94       	cli
    29d4:	80 91 86 03 	lds	r24, 0x0386
    29d8:	90 91 87 03 	lds	r25, 0x0387
    29dc:	a0 91 88 03 	lds	r26, 0x0388
    29e0:	b0 91 89 03 	lds	r27, 0x0389
    29e4:	26 b5       	in	r18, 0x26	; 38
    29e6:	a8 9b       	sbis	0x15, 0	; 21
    29e8:	05 c0       	rjmp	.+10     	; 0x29f4 <micros+0x24>
    29ea:	2f 3f       	cpi	r18, 0xFF	; 255
    29ec:	19 f0       	breq	.+6      	; 0x29f4 <micros+0x24>
    29ee:	01 96       	adiw	r24, 0x01	; 1
    29f0:	a1 1d       	adc	r26, r1
    29f2:	b1 1d       	adc	r27, r1
    29f4:	3f bf       	out	0x3f, r19	; 63
    29f6:	66 27       	eor	r22, r22
    29f8:	78 2f       	mov	r23, r24
    29fa:	89 2f       	mov	r24, r25
    29fc:	9a 2f       	mov	r25, r26
    29fe:	62 0f       	add	r22, r18
    2a00:	71 1d       	adc	r23, r1
    2a02:	81 1d       	adc	r24, r1
    2a04:	91 1d       	adc	r25, r1
    2a06:	42 e0       	ldi	r20, 0x02	; 2
    2a08:	66 0f       	add	r22, r22
    2a0a:	77 1f       	adc	r23, r23
    2a0c:	88 1f       	adc	r24, r24
    2a0e:	99 1f       	adc	r25, r25
    2a10:	4a 95       	dec	r20
    2a12:	d1 f7       	brne	.-12     	; 0x2a08 <micros+0x38>
    2a14:	08 95       	ret

00002a16 <delay>:
    2a16:	cf 92       	push	r12
    2a18:	df 92       	push	r13
    2a1a:	ef 92       	push	r14
    2a1c:	ff 92       	push	r15
    2a1e:	cf 93       	push	r28
    2a20:	df 93       	push	r29
    2a22:	6b 01       	movw	r12, r22
    2a24:	7c 01       	movw	r14, r24
    2a26:	0e 94 e8 14 	call	0x29d0	; 0x29d0 <micros>
    2a2a:	eb 01       	movw	r28, r22
    2a2c:	c1 14       	cp	r12, r1
    2a2e:	d1 04       	cpc	r13, r1
    2a30:	e1 04       	cpc	r14, r1
    2a32:	f1 04       	cpc	r15, r1
    2a34:	89 f0       	breq	.+34     	; 0x2a58 <delay+0x42>
    2a36:	0e 94 75 17 	call	0x2eea	; 0x2eea <yield>
    2a3a:	0e 94 e8 14 	call	0x29d0	; 0x29d0 <micros>
    2a3e:	6c 1b       	sub	r22, r28
    2a40:	7d 0b       	sbc	r23, r29
    2a42:	68 3e       	cpi	r22, 0xE8	; 232
    2a44:	73 40       	sbci	r23, 0x03	; 3
    2a46:	90 f3       	brcs	.-28     	; 0x2a2c <delay+0x16>
    2a48:	81 e0       	ldi	r24, 0x01	; 1
    2a4a:	c8 1a       	sub	r12, r24
    2a4c:	d1 08       	sbc	r13, r1
    2a4e:	e1 08       	sbc	r14, r1
    2a50:	f1 08       	sbc	r15, r1
    2a52:	c8 51       	subi	r28, 0x18	; 24
    2a54:	dc 4f       	sbci	r29, 0xFC	; 252
    2a56:	ea cf       	rjmp	.-44     	; 0x2a2c <delay+0x16>
    2a58:	df 91       	pop	r29
    2a5a:	cf 91       	pop	r28
    2a5c:	ff 90       	pop	r15
    2a5e:	ef 90       	pop	r14
    2a60:	df 90       	pop	r13
    2a62:	cf 90       	pop	r12
    2a64:	08 95       	ret

00002a66 <init>:
    2a66:	78 94       	sei
    2a68:	84 b5       	in	r24, 0x24	; 36
    2a6a:	82 60       	ori	r24, 0x02	; 2
    2a6c:	84 bd       	out	0x24, r24	; 36
    2a6e:	84 b5       	in	r24, 0x24	; 36
    2a70:	81 60       	ori	r24, 0x01	; 1
    2a72:	84 bd       	out	0x24, r24	; 36
    2a74:	85 b5       	in	r24, 0x25	; 37
    2a76:	82 60       	ori	r24, 0x02	; 2
    2a78:	85 bd       	out	0x25, r24	; 37
    2a7a:	85 b5       	in	r24, 0x25	; 37
    2a7c:	81 60       	ori	r24, 0x01	; 1
    2a7e:	85 bd       	out	0x25, r24	; 37
    2a80:	ee e6       	ldi	r30, 0x6E	; 110
    2a82:	f0 e0       	ldi	r31, 0x00	; 0
    2a84:	80 81       	ld	r24, Z
    2a86:	81 60       	ori	r24, 0x01	; 1
    2a88:	80 83       	st	Z, r24
    2a8a:	e1 e8       	ldi	r30, 0x81	; 129
    2a8c:	f0 e0       	ldi	r31, 0x00	; 0
    2a8e:	10 82       	st	Z, r1
    2a90:	80 81       	ld	r24, Z
    2a92:	82 60       	ori	r24, 0x02	; 2
    2a94:	80 83       	st	Z, r24
    2a96:	80 81       	ld	r24, Z
    2a98:	81 60       	ori	r24, 0x01	; 1
    2a9a:	80 83       	st	Z, r24
    2a9c:	e0 e8       	ldi	r30, 0x80	; 128
    2a9e:	f0 e0       	ldi	r31, 0x00	; 0
    2aa0:	80 81       	ld	r24, Z
    2aa2:	81 60       	ori	r24, 0x01	; 1
    2aa4:	80 83       	st	Z, r24
    2aa6:	e1 e9       	ldi	r30, 0x91	; 145
    2aa8:	f0 e0       	ldi	r31, 0x00	; 0
    2aaa:	80 81       	ld	r24, Z
    2aac:	82 60       	ori	r24, 0x02	; 2
    2aae:	80 83       	st	Z, r24
    2ab0:	80 81       	ld	r24, Z
    2ab2:	81 60       	ori	r24, 0x01	; 1
    2ab4:	80 83       	st	Z, r24
    2ab6:	e0 e9       	ldi	r30, 0x90	; 144
    2ab8:	f0 e0       	ldi	r31, 0x00	; 0
    2aba:	80 81       	ld	r24, Z
    2abc:	81 60       	ori	r24, 0x01	; 1
    2abe:	80 83       	st	Z, r24
    2ac0:	e1 ec       	ldi	r30, 0xC1	; 193
    2ac2:	f0 e0       	ldi	r31, 0x00	; 0
    2ac4:	80 81       	ld	r24, Z
    2ac6:	84 60       	ori	r24, 0x04	; 4
    2ac8:	80 83       	st	Z, r24
    2aca:	80 81       	ld	r24, Z
    2acc:	82 60       	ori	r24, 0x02	; 2
    2ace:	80 83       	st	Z, r24
    2ad0:	80 81       	ld	r24, Z
    2ad2:	81 60       	ori	r24, 0x01	; 1
    2ad4:	80 83       	st	Z, r24
    2ad6:	e3 ec       	ldi	r30, 0xC3	; 195
    2ad8:	f0 e0       	ldi	r31, 0x00	; 0
    2ada:	80 81       	ld	r24, Z
    2adc:	81 60       	ori	r24, 0x01	; 1
    2ade:	80 83       	st	Z, r24
    2ae0:	e0 ec       	ldi	r30, 0xC0	; 192
    2ae2:	f0 e0       	ldi	r31, 0x00	; 0
    2ae4:	80 81       	ld	r24, Z
    2ae6:	82 60       	ori	r24, 0x02	; 2
    2ae8:	80 83       	st	Z, r24
    2aea:	e2 ec       	ldi	r30, 0xC2	; 194
    2aec:	f0 e0       	ldi	r31, 0x00	; 0
    2aee:	80 81       	ld	r24, Z
    2af0:	81 60       	ori	r24, 0x01	; 1
    2af2:	80 83       	st	Z, r24
    2af4:	ea e7       	ldi	r30, 0x7A	; 122
    2af6:	f0 e0       	ldi	r31, 0x00	; 0
    2af8:	80 81       	ld	r24, Z
    2afa:	84 60       	ori	r24, 0x04	; 4
    2afc:	80 83       	st	Z, r24
    2afe:	80 81       	ld	r24, Z
    2b00:	82 60       	ori	r24, 0x02	; 2
    2b02:	80 83       	st	Z, r24
    2b04:	80 81       	ld	r24, Z
    2b06:	81 60       	ori	r24, 0x01	; 1
    2b08:	80 83       	st	Z, r24
    2b0a:	80 81       	ld	r24, Z
    2b0c:	80 68       	ori	r24, 0x80	; 128
    2b0e:	80 83       	st	Z, r24
    2b10:	08 95       	ret

00002b12 <Keyboard_::write(unsigned char)>:
    2b12:	ff 92       	push	r15
    2b14:	0f 93       	push	r16
    2b16:	1f 93       	push	r17
    2b18:	cf 93       	push	r28
    2b1a:	df 93       	push	r29
    2b1c:	ec 01       	movw	r28, r24
    2b1e:	f6 2e       	mov	r15, r22
    2b20:	e8 81       	ld	r30, Y
    2b22:	f9 81       	ldd	r31, Y+1	; 0x01
    2b24:	04 80       	ldd	r0, Z+4	; 0x04
    2b26:	f5 81       	ldd	r31, Z+5	; 0x05
    2b28:	e0 2d       	mov	r30, r0
    2b2a:	09 95       	icall
    2b2c:	8c 01       	movw	r16, r24
    2b2e:	e8 81       	ld	r30, Y
    2b30:	f9 81       	ldd	r31, Y+1	; 0x01
    2b32:	06 80       	ldd	r0, Z+6	; 0x06
    2b34:	f7 81       	ldd	r31, Z+7	; 0x07
    2b36:	e0 2d       	mov	r30, r0
    2b38:	6f 2d       	mov	r22, r15
    2b3a:	ce 01       	movw	r24, r28
    2b3c:	09 95       	icall
    2b3e:	c8 01       	movw	r24, r16
    2b40:	99 27       	eor	r25, r25
    2b42:	df 91       	pop	r29
    2b44:	cf 91       	pop	r28
    2b46:	1f 91       	pop	r17
    2b48:	0f 91       	pop	r16
    2b4a:	ff 90       	pop	r15
    2b4c:	08 95       	ret

00002b4e <HID_GetInterface(unsigned char*)>:
    2b4e:	fc 01       	movw	r30, r24
    2b50:	20 81       	ld	r18, Z
    2b52:	2f 5f       	subi	r18, 0xFF	; 255
    2b54:	20 83       	st	Z, r18
    2b56:	49 e1       	ldi	r20, 0x19	; 25
    2b58:	50 e0       	ldi	r21, 0x00	; 0
    2b5a:	64 ec       	ldi	r22, 0xC4	; 196
    2b5c:	71 e0       	ldi	r23, 0x01	; 1
    2b5e:	80 e8       	ldi	r24, 0x80	; 128
    2b60:	0c 94 58 0c 	jmp	0x18b0	; 0x18b0 <USB_SendControl(unsigned char, void const*, int)>

00002b64 <HID_GetDescriptor(int)>:
    2b64:	45 e6       	ldi	r20, 0x65	; 101
    2b66:	50 e0       	ldi	r21, 0x00	; 0
    2b68:	6d ed       	ldi	r22, 0xDD	; 221
    2b6a:	71 e0       	ldi	r23, 0x01	; 1
    2b6c:	80 e8       	ldi	r24, 0x80	; 128
    2b6e:	0c 94 58 0c 	jmp	0x18b0	; 0x18b0 <USB_SendControl(unsigned char, void const*, int)>

00002b72 <HID_SendReport(unsigned char, void const*, int)>:
    2b72:	ef 92       	push	r14
    2b74:	ff 92       	push	r15
    2b76:	0f 93       	push	r16
    2b78:	1f 93       	push	r17
    2b7a:	cf 93       	push	r28
    2b7c:	df 93       	push	r29
    2b7e:	1f 92       	push	r1
    2b80:	cd b7       	in	r28, 0x3d	; 61
    2b82:	de b7       	in	r29, 0x3e	; 62
    2b84:	89 83       	std	Y+1, r24	; 0x01
    2b86:	8b 01       	movw	r16, r22
    2b88:	7a 01       	movw	r14, r20
    2b8a:	41 e0       	ldi	r20, 0x01	; 1
    2b8c:	50 e0       	ldi	r21, 0x00	; 0
    2b8e:	be 01       	movw	r22, r28
    2b90:	6f 5f       	subi	r22, 0xFF	; 255
    2b92:	7f 4f       	sbci	r23, 0xFF	; 255
    2b94:	84 e0       	ldi	r24, 0x04	; 4
    2b96:	0e 94 bd 0b 	call	0x177a	; 0x177a <USB_Send(unsigned char, void const*, int)>
    2b9a:	a7 01       	movw	r20, r14
    2b9c:	b8 01       	movw	r22, r16
    2b9e:	84 e4       	ldi	r24, 0x44	; 68
    2ba0:	0e 94 bd 0b 	call	0x177a	; 0x177a <USB_Send(unsigned char, void const*, int)>
    2ba4:	0f 90       	pop	r0
    2ba6:	df 91       	pop	r29
    2ba8:	cf 91       	pop	r28
    2baa:	1f 91       	pop	r17
    2bac:	0f 91       	pop	r16
    2bae:	ff 90       	pop	r15
    2bb0:	ef 90       	pop	r14
    2bb2:	08 95       	ret

00002bb4 <HID_Setup(Setup&)>:
    2bb4:	fc 01       	movw	r30, r24
    2bb6:	91 81       	ldd	r25, Z+1	; 0x01
    2bb8:	80 81       	ld	r24, Z
    2bba:	81 3a       	cpi	r24, 0xA1	; 161
    2bbc:	31 f4       	brne	.+12     	; 0x2bca <HID_Setup(Setup&)+0x16>
    2bbe:	81 e0       	ldi	r24, 0x01	; 1
    2bc0:	91 30       	cpi	r25, 0x01	; 1
    2bc2:	91 f0       	breq	.+36     	; 0x2be8 <HID_Setup(Setup&)+0x34>
    2bc4:	93 30       	cpi	r25, 0x03	; 3
    2bc6:	89 f4       	brne	.+34     	; 0x2bea <HID_Setup(Setup&)+0x36>
    2bc8:	11 c0       	rjmp	.+34     	; 0x2bec <HID_Setup(Setup&)+0x38>
    2bca:	81 32       	cpi	r24, 0x21	; 33
    2bcc:	71 f4       	brne	.+28     	; 0x2bea <HID_Setup(Setup&)+0x36>
    2bce:	9b 30       	cpi	r25, 0x0B	; 11
    2bd0:	21 f4       	brne	.+8      	; 0x2bda <HID_Setup(Setup&)+0x26>
    2bd2:	82 81       	ldd	r24, Z+2	; 0x02
    2bd4:	80 93 0f 01 	sts	0x010F, r24
    2bd8:	05 c0       	rjmp	.+10     	; 0x2be4 <HID_Setup(Setup&)+0x30>
    2bda:	9a 30       	cpi	r25, 0x0A	; 10
    2bdc:	31 f4       	brne	.+12     	; 0x2bea <HID_Setup(Setup&)+0x36>
    2bde:	82 81       	ldd	r24, Z+2	; 0x02
    2be0:	80 93 0e 01 	sts	0x010E, r24
    2be4:	81 e0       	ldi	r24, 0x01	; 1
    2be6:	08 95       	ret
    2be8:	08 95       	ret
    2bea:	80 e0       	ldi	r24, 0x00	; 0
    2bec:	08 95       	ret

00002bee <Keyboard_::sendReport(KeyReport*)>:
    2bee:	48 e0       	ldi	r20, 0x08	; 8
    2bf0:	50 e0       	ldi	r21, 0x00	; 0
    2bf2:	82 e0       	ldi	r24, 0x02	; 2
    2bf4:	0c 94 b9 15 	jmp	0x2b72	; 0x2b72 <HID_SendReport(unsigned char, void const*, int)>

00002bf8 <Keyboard_::press(unsigned char)>:
    2bf8:	cf 93       	push	r28
    2bfa:	df 93       	push	r29
    2bfc:	dc 01       	movw	r26, r24
    2bfe:	68 38       	cpi	r22, 0x88	; 136
    2c00:	18 f0       	brcs	.+6      	; 0x2c08 <Keyboard_::press(unsigned char)+0x10>
    2c02:	e8 e7       	ldi	r30, 0x78	; 120
    2c04:	e6 0f       	add	r30, r22
    2c06:	25 c0       	rjmp	.+74     	; 0x2c52 <Keyboard_::press(unsigned char)+0x5a>
    2c08:	e6 2f       	mov	r30, r22
    2c0a:	f0 e0       	ldi	r31, 0x00	; 0
    2c0c:	67 ff       	sbrs	r22, 7
    2c0e:	11 c0       	rjmp	.+34     	; 0x2c32 <Keyboard_::press(unsigned char)+0x3a>
    2c10:	e0 58       	subi	r30, 0x80	; 128
    2c12:	f1 09       	sbc	r31, r1
    2c14:	81 e0       	ldi	r24, 0x01	; 1
    2c16:	90 e0       	ldi	r25, 0x00	; 0
    2c18:	01 c0       	rjmp	.+2      	; 0x2c1c <Keyboard_::press(unsigned char)+0x24>
    2c1a:	88 0f       	add	r24, r24
    2c1c:	ea 95       	dec	r30
    2c1e:	ea f7       	brpl	.-6      	; 0x2c1a <Keyboard_::press(unsigned char)+0x22>
    2c20:	14 96       	adiw	r26, 0x04	; 4
    2c22:	9c 91       	ld	r25, X
    2c24:	14 97       	sbiw	r26, 0x04	; 4
    2c26:	98 2b       	or	r25, r24
    2c28:	14 96       	adiw	r26, 0x04	; 4
    2c2a:	9c 93       	st	X, r25
    2c2c:	14 97       	sbiw	r26, 0x04	; 4
    2c2e:	e0 e0       	ldi	r30, 0x00	; 0
    2c30:	10 c0       	rjmp	.+32     	; 0x2c52 <Keyboard_::press(unsigned char)+0x5a>
    2c32:	ec 5b       	subi	r30, 0xBC	; 188
    2c34:	fe 4f       	sbci	r31, 0xFE	; 254
    2c36:	e4 91       	lpm	r30, Z
    2c38:	ee 23       	and	r30, r30
    2c3a:	09 f4       	brne	.+2      	; 0x2c3e <Keyboard_::press(unsigned char)+0x46>
    2c3c:	40 c0       	rjmp	.+128    	; 0x2cbe <Keyboard_::press(unsigned char)+0xc6>
    2c3e:	e7 ff       	sbrs	r30, 7
    2c40:	08 c0       	rjmp	.+16     	; 0x2c52 <Keyboard_::press(unsigned char)+0x5a>
    2c42:	14 96       	adiw	r26, 0x04	; 4
    2c44:	8c 91       	ld	r24, X
    2c46:	14 97       	sbiw	r26, 0x04	; 4
    2c48:	82 60       	ori	r24, 0x02	; 2
    2c4a:	14 96       	adiw	r26, 0x04	; 4
    2c4c:	8c 93       	st	X, r24
    2c4e:	14 97       	sbiw	r26, 0x04	; 4
    2c50:	ef 77       	andi	r30, 0x7F	; 127
    2c52:	16 96       	adiw	r26, 0x06	; 6
    2c54:	8c 91       	ld	r24, X
    2c56:	16 97       	sbiw	r26, 0x06	; 6
    2c58:	8e 17       	cp	r24, r30
    2c5a:	41 f1       	breq	.+80     	; 0x2cac <Keyboard_::press(unsigned char)+0xb4>
    2c5c:	17 96       	adiw	r26, 0x07	; 7
    2c5e:	8c 91       	ld	r24, X
    2c60:	17 97       	sbiw	r26, 0x07	; 7
    2c62:	8e 17       	cp	r24, r30
    2c64:	19 f1       	breq	.+70     	; 0x2cac <Keyboard_::press(unsigned char)+0xb4>
    2c66:	18 96       	adiw	r26, 0x08	; 8
    2c68:	8c 91       	ld	r24, X
    2c6a:	18 97       	sbiw	r26, 0x08	; 8
    2c6c:	8e 17       	cp	r24, r30
    2c6e:	f1 f0       	breq	.+60     	; 0x2cac <Keyboard_::press(unsigned char)+0xb4>
    2c70:	19 96       	adiw	r26, 0x09	; 9
    2c72:	8c 91       	ld	r24, X
    2c74:	19 97       	sbiw	r26, 0x09	; 9
    2c76:	8e 17       	cp	r24, r30
    2c78:	c9 f0       	breq	.+50     	; 0x2cac <Keyboard_::press(unsigned char)+0xb4>
    2c7a:	1a 96       	adiw	r26, 0x0a	; 10
    2c7c:	8c 91       	ld	r24, X
    2c7e:	1a 97       	sbiw	r26, 0x0a	; 10
    2c80:	8e 17       	cp	r24, r30
    2c82:	a1 f0       	breq	.+40     	; 0x2cac <Keyboard_::press(unsigned char)+0xb4>
    2c84:	1b 96       	adiw	r26, 0x0b	; 11
    2c86:	8c 91       	ld	r24, X
    2c88:	1b 97       	sbiw	r26, 0x0b	; 11
    2c8a:	8e 17       	cp	r24, r30
    2c8c:	79 f0       	breq	.+30     	; 0x2cac <Keyboard_::press(unsigned char)+0xb4>
    2c8e:	80 e0       	ldi	r24, 0x00	; 0
    2c90:	90 e0       	ldi	r25, 0x00	; 0
    2c92:	ed 01       	movw	r28, r26
    2c94:	c8 0f       	add	r28, r24
    2c96:	d9 1f       	adc	r29, r25
    2c98:	2e 81       	ldd	r18, Y+6	; 0x06
    2c9a:	21 11       	cpse	r18, r1
    2c9c:	02 c0       	rjmp	.+4      	; 0x2ca2 <Keyboard_::press(unsigned char)+0xaa>
    2c9e:	ee 83       	std	Y+6, r30	; 0x06
    2ca0:	05 c0       	rjmp	.+10     	; 0x2cac <Keyboard_::press(unsigned char)+0xb4>
    2ca2:	01 96       	adiw	r24, 0x01	; 1
    2ca4:	86 30       	cpi	r24, 0x06	; 6
    2ca6:	91 05       	cpc	r25, r1
    2ca8:	a1 f7       	brne	.-24     	; 0x2c92 <Keyboard_::press(unsigned char)+0x9a>
    2caa:	09 c0       	rjmp	.+18     	; 0x2cbe <Keyboard_::press(unsigned char)+0xc6>
    2cac:	bd 01       	movw	r22, r26
    2cae:	6c 5f       	subi	r22, 0xFC	; 252
    2cb0:	7f 4f       	sbci	r23, 0xFF	; 255
    2cb2:	cd 01       	movw	r24, r26
    2cb4:	0e 94 f7 15 	call	0x2bee	; 0x2bee <Keyboard_::sendReport(KeyReport*)>
    2cb8:	81 e0       	ldi	r24, 0x01	; 1
    2cba:	90 e0       	ldi	r25, 0x00	; 0
    2cbc:	08 c0       	rjmp	.+16     	; 0x2cce <Keyboard_::press(unsigned char)+0xd6>
    2cbe:	81 e0       	ldi	r24, 0x01	; 1
    2cc0:	90 e0       	ldi	r25, 0x00	; 0
    2cc2:	13 96       	adiw	r26, 0x03	; 3
    2cc4:	9c 93       	st	X, r25
    2cc6:	8e 93       	st	-X, r24
    2cc8:	12 97       	sbiw	r26, 0x02	; 2
    2cca:	80 e0       	ldi	r24, 0x00	; 0
    2ccc:	90 e0       	ldi	r25, 0x00	; 0
    2cce:	df 91       	pop	r29
    2cd0:	cf 91       	pop	r28
    2cd2:	08 95       	ret

00002cd4 <Keyboard_::release(unsigned char)>:
    2cd4:	68 38       	cpi	r22, 0x88	; 136
    2cd6:	18 f0       	brcs	.+6      	; 0x2cde <Keyboard_::release(unsigned char)+0xa>
    2cd8:	e8 e7       	ldi	r30, 0x78	; 120
    2cda:	e6 0f       	add	r30, r22
    2cdc:	25 c0       	rjmp	.+74     	; 0x2d28 <Keyboard_::release(unsigned char)+0x54>
    2cde:	e6 2f       	mov	r30, r22
    2ce0:	f0 e0       	ldi	r31, 0x00	; 0
    2ce2:	67 ff       	sbrs	r22, 7
    2ce4:	12 c0       	rjmp	.+36     	; 0x2d0a <Keyboard_::release(unsigned char)+0x36>
    2ce6:	e0 58       	subi	r30, 0x80	; 128
    2ce8:	f1 09       	sbc	r31, r1
    2cea:	21 e0       	ldi	r18, 0x01	; 1
    2cec:	30 e0       	ldi	r19, 0x00	; 0
    2cee:	01 c0       	rjmp	.+2      	; 0x2cf2 <Keyboard_::release(unsigned char)+0x1e>
    2cf0:	22 0f       	add	r18, r18
    2cf2:	ea 95       	dec	r30
    2cf4:	ea f7       	brpl	.-6      	; 0x2cf0 <Keyboard_::release(unsigned char)+0x1c>
    2cf6:	20 95       	com	r18
    2cf8:	dc 01       	movw	r26, r24
    2cfa:	14 96       	adiw	r26, 0x04	; 4
    2cfc:	3c 91       	ld	r19, X
    2cfe:	14 97       	sbiw	r26, 0x04	; 4
    2d00:	32 23       	and	r19, r18
    2d02:	14 96       	adiw	r26, 0x04	; 4
    2d04:	3c 93       	st	X, r19
    2d06:	e0 e0       	ldi	r30, 0x00	; 0
    2d08:	0f c0       	rjmp	.+30     	; 0x2d28 <Keyboard_::release(unsigned char)+0x54>
    2d0a:	ec 5b       	subi	r30, 0xBC	; 188
    2d0c:	fe 4f       	sbci	r31, 0xFE	; 254
    2d0e:	e4 91       	lpm	r30, Z
    2d10:	ee 23       	and	r30, r30
    2d12:	29 f1       	breq	.+74     	; 0x2d5e <Keyboard_::release(unsigned char)+0x8a>
    2d14:	e7 ff       	sbrs	r30, 7
    2d16:	08 c0       	rjmp	.+16     	; 0x2d28 <Keyboard_::release(unsigned char)+0x54>
    2d18:	dc 01       	movw	r26, r24
    2d1a:	14 96       	adiw	r26, 0x04	; 4
    2d1c:	2c 91       	ld	r18, X
    2d1e:	14 97       	sbiw	r26, 0x04	; 4
    2d20:	2d 7f       	andi	r18, 0xFD	; 253
    2d22:	14 96       	adiw	r26, 0x04	; 4
    2d24:	2c 93       	st	X, r18
    2d26:	ef 77       	andi	r30, 0x7F	; 127
    2d28:	20 e0       	ldi	r18, 0x00	; 0
    2d2a:	30 e0       	ldi	r19, 0x00	; 0
    2d2c:	ee 23       	and	r30, r30
    2d2e:	51 f0       	breq	.+20     	; 0x2d44 <Keyboard_::release(unsigned char)+0x70>
    2d30:	dc 01       	movw	r26, r24
    2d32:	a2 0f       	add	r26, r18
    2d34:	b3 1f       	adc	r27, r19
    2d36:	16 96       	adiw	r26, 0x06	; 6
    2d38:	4c 91       	ld	r20, X
    2d3a:	16 97       	sbiw	r26, 0x06	; 6
    2d3c:	4e 13       	cpse	r20, r30
    2d3e:	02 c0       	rjmp	.+4      	; 0x2d44 <Keyboard_::release(unsigned char)+0x70>
    2d40:	16 96       	adiw	r26, 0x06	; 6
    2d42:	1c 92       	st	X, r1
    2d44:	2f 5f       	subi	r18, 0xFF	; 255
    2d46:	3f 4f       	sbci	r19, 0xFF	; 255
    2d48:	26 30       	cpi	r18, 0x06	; 6
    2d4a:	31 05       	cpc	r19, r1
    2d4c:	79 f7       	brne	.-34     	; 0x2d2c <Keyboard_::release(unsigned char)+0x58>
    2d4e:	bc 01       	movw	r22, r24
    2d50:	6c 5f       	subi	r22, 0xFC	; 252
    2d52:	7f 4f       	sbci	r23, 0xFF	; 255
    2d54:	0e 94 f7 15 	call	0x2bee	; 0x2bee <Keyboard_::sendReport(KeyReport*)>
    2d58:	81 e0       	ldi	r24, 0x01	; 1
    2d5a:	90 e0       	ldi	r25, 0x00	; 0
    2d5c:	08 95       	ret
    2d5e:	80 e0       	ldi	r24, 0x00	; 0
    2d60:	90 e0       	ldi	r25, 0x00	; 0
    2d62:	08 95       	ret

00002d64 <Keyboard_::releaseAll()>:
    2d64:	fc 01       	movw	r30, r24
    2d66:	16 82       	std	Z+6, r1	; 0x06
    2d68:	17 82       	std	Z+7, r1	; 0x07
    2d6a:	10 86       	std	Z+8, r1	; 0x08
    2d6c:	11 86       	std	Z+9, r1	; 0x09
    2d6e:	12 86       	std	Z+10, r1	; 0x0a
    2d70:	13 86       	std	Z+11, r1	; 0x0b
    2d72:	14 82       	std	Z+4, r1	; 0x04
    2d74:	bc 01       	movw	r22, r24
    2d76:	6c 5f       	subi	r22, 0xFC	; 252
    2d78:	7f 4f       	sbci	r23, 0xFF	; 255
    2d7a:	0c 94 f7 15 	jmp	0x2bee	; 0x2bee <Keyboard_::sendReport(KeyReport*)>

00002d7e <_GLOBAL__sub_I_Mouse>:
    2d7e:	10 92 96 03 	sts	0x0396, r1
    2d82:	10 92 8d 03 	sts	0x038D, r1
    2d86:	10 92 8c 03 	sts	0x038C, r1
    2d8a:	8e eb       	ldi	r24, 0xBE	; 190
    2d8c:	92 e0       	ldi	r25, 0x02	; 2
    2d8e:	90 93 8b 03 	sts	0x038B, r25
    2d92:	80 93 8a 03 	sts	0x038A, r24
    2d96:	08 95       	ret

00002d98 <__vector_25>:
    2d98:	1f 92       	push	r1
    2d9a:	0f 92       	push	r0
    2d9c:	0f b6       	in	r0, 0x3f	; 63
    2d9e:	0f 92       	push	r0
    2da0:	11 24       	eor	r1, r1
    2da2:	2f 93       	push	r18
    2da4:	8f 93       	push	r24
    2da6:	9f 93       	push	r25
    2da8:	ef 93       	push	r30
    2daa:	ff 93       	push	r31
    2dac:	e0 91 a7 03 	lds	r30, 0x03A7
    2db0:	f0 91 a8 03 	lds	r31, 0x03A8
    2db4:	80 81       	ld	r24, Z
    2db6:	e0 91 ad 03 	lds	r30, 0x03AD
    2dba:	f0 91 ae 03 	lds	r31, 0x03AE
    2dbe:	82 fd       	sbrc	r24, 2
    2dc0:	12 c0       	rjmp	.+36     	; 0x2de6 <__vector_25+0x4e>
    2dc2:	90 81       	ld	r25, Z
    2dc4:	80 91 b0 03 	lds	r24, 0x03B0
    2dc8:	8f 5f       	subi	r24, 0xFF	; 255
    2dca:	8f 73       	andi	r24, 0x3F	; 63
    2dcc:	20 91 b1 03 	lds	r18, 0x03B1
    2dd0:	82 17       	cp	r24, r18
    2dd2:	51 f0       	breq	.+20     	; 0x2de8 <__vector_25+0x50>
    2dd4:	e0 91 b0 03 	lds	r30, 0x03B0
    2dd8:	f0 e0       	ldi	r31, 0x00	; 0
    2dda:	e9 56       	subi	r30, 0x69	; 105
    2ddc:	fc 4f       	sbci	r31, 0xFC	; 252
    2dde:	95 8f       	std	Z+29, r25	; 0x1d
    2de0:	80 93 b0 03 	sts	0x03B0, r24
    2de4:	01 c0       	rjmp	.+2      	; 0x2de8 <__vector_25+0x50>
    2de6:	80 81       	ld	r24, Z
    2de8:	ff 91       	pop	r31
    2dea:	ef 91       	pop	r30
    2dec:	9f 91       	pop	r25
    2dee:	8f 91       	pop	r24
    2df0:	2f 91       	pop	r18
    2df2:	0f 90       	pop	r0
    2df4:	0f be       	out	0x3f, r0	; 63
    2df6:	0f 90       	pop	r0
    2df8:	1f 90       	pop	r1
    2dfa:	18 95       	reti

00002dfc <__vector_26>:
    2dfc:	1f 92       	push	r1
    2dfe:	0f 92       	push	r0
    2e00:	0f b6       	in	r0, 0x3f	; 63
    2e02:	0f 92       	push	r0
    2e04:	11 24       	eor	r1, r1
    2e06:	2f 93       	push	r18
    2e08:	3f 93       	push	r19
    2e0a:	4f 93       	push	r20
    2e0c:	5f 93       	push	r21
    2e0e:	6f 93       	push	r22
    2e10:	7f 93       	push	r23
    2e12:	8f 93       	push	r24
    2e14:	9f 93       	push	r25
    2e16:	af 93       	push	r26
    2e18:	bf 93       	push	r27
    2e1a:	ef 93       	push	r30
    2e1c:	ff 93       	push	r31
    2e1e:	87 e9       	ldi	r24, 0x97	; 151
    2e20:	93 e0       	ldi	r25, 0x03	; 3
    2e22:	0e 94 30 08 	call	0x1060	; 0x1060 <HardwareSerial::_tx_udr_empty_irq()>
    2e26:	ff 91       	pop	r31
    2e28:	ef 91       	pop	r30
    2e2a:	bf 91       	pop	r27
    2e2c:	af 91       	pop	r26
    2e2e:	9f 91       	pop	r25
    2e30:	8f 91       	pop	r24
    2e32:	7f 91       	pop	r23
    2e34:	6f 91       	pop	r22
    2e36:	5f 91       	pop	r21
    2e38:	4f 91       	pop	r20
    2e3a:	3f 91       	pop	r19
    2e3c:	2f 91       	pop	r18
    2e3e:	0f 90       	pop	r0
    2e40:	0f be       	out	0x3f, r0	; 63
    2e42:	0f 90       	pop	r0
    2e44:	1f 90       	pop	r1
    2e46:	18 95       	reti

00002e48 <Serial1_available()>:
    2e48:	87 e9       	ldi	r24, 0x97	; 151
    2e4a:	93 e0       	ldi	r25, 0x03	; 3
    2e4c:	0e 94 f5 07 	call	0xfea	; 0xfea <HardwareSerial::available()>
    2e50:	21 e0       	ldi	r18, 0x01	; 1
    2e52:	89 2b       	or	r24, r25
    2e54:	09 f4       	brne	.+2      	; 0x2e58 <Serial1_available()+0x10>
    2e56:	20 e0       	ldi	r18, 0x00	; 0
    2e58:	82 2f       	mov	r24, r18
    2e5a:	08 95       	ret

00002e5c <_GLOBAL__sub_I___vector_25>:
    2e5c:	10 92 9a 03 	sts	0x039A, r1
    2e60:	10 92 99 03 	sts	0x0399, r1
    2e64:	88 ee       	ldi	r24, 0xE8	; 232
    2e66:	93 e0       	ldi	r25, 0x03	; 3
    2e68:	a0 e0       	ldi	r26, 0x00	; 0
    2e6a:	b0 e0       	ldi	r27, 0x00	; 0
    2e6c:	80 93 9b 03 	sts	0x039B, r24
    2e70:	90 93 9c 03 	sts	0x039C, r25
    2e74:	a0 93 9d 03 	sts	0x039D, r26
    2e78:	b0 93 9e 03 	sts	0x039E, r27
    2e7c:	81 e8       	ldi	r24, 0x81	; 129
    2e7e:	92 e0       	ldi	r25, 0x02	; 2
    2e80:	90 93 98 03 	sts	0x0398, r25
    2e84:	80 93 97 03 	sts	0x0397, r24
    2e88:	8d ec       	ldi	r24, 0xCD	; 205
    2e8a:	90 e0       	ldi	r25, 0x00	; 0
    2e8c:	90 93 a4 03 	sts	0x03A4, r25
    2e90:	80 93 a3 03 	sts	0x03A3, r24
    2e94:	8c ec       	ldi	r24, 0xCC	; 204
    2e96:	90 e0       	ldi	r25, 0x00	; 0
    2e98:	90 93 a6 03 	sts	0x03A6, r25
    2e9c:	80 93 a5 03 	sts	0x03A5, r24
    2ea0:	88 ec       	ldi	r24, 0xC8	; 200
    2ea2:	90 e0       	ldi	r25, 0x00	; 0
    2ea4:	90 93 a8 03 	sts	0x03A8, r25
    2ea8:	80 93 a7 03 	sts	0x03A7, r24
    2eac:	89 ec       	ldi	r24, 0xC9	; 201
    2eae:	90 e0       	ldi	r25, 0x00	; 0
    2eb0:	90 93 aa 03 	sts	0x03AA, r25
    2eb4:	80 93 a9 03 	sts	0x03A9, r24
    2eb8:	8a ec       	ldi	r24, 0xCA	; 202
    2eba:	90 e0       	ldi	r25, 0x00	; 0
    2ebc:	90 93 ac 03 	sts	0x03AC, r25
    2ec0:	80 93 ab 03 	sts	0x03AB, r24
    2ec4:	8e ec       	ldi	r24, 0xCE	; 206
    2ec6:	90 e0       	ldi	r25, 0x00	; 0
    2ec8:	90 93 ae 03 	sts	0x03AE, r25
    2ecc:	80 93 ad 03 	sts	0x03AD, r24
    2ed0:	10 92 b0 03 	sts	0x03B0, r1
    2ed4:	10 92 b1 03 	sts	0x03B1, r1
    2ed8:	10 92 b2 03 	sts	0x03B2, r1
    2edc:	10 92 b3 03 	sts	0x03B3, r1
    2ee0:	08 95       	ret

00002ee2 <operator new(unsigned int)>:
    2ee2:	0c 94 76 17 	jmp	0x2eec	; 0x2eec <malloc>

00002ee6 <operator delete(void*)>:
    2ee6:	0c 94 0e 18 	jmp	0x301c	; 0x301c <free>

00002eea <yield>:
    2eea:	08 95       	ret

00002eec <malloc>:
    2eec:	cf 93       	push	r28
    2eee:	df 93       	push	r29
    2ef0:	82 30       	cpi	r24, 0x02	; 2
    2ef2:	91 05       	cpc	r25, r1
    2ef4:	10 f4       	brcc	.+4      	; 0x2efa <malloc+0xe>
    2ef6:	82 e0       	ldi	r24, 0x02	; 2
    2ef8:	90 e0       	ldi	r25, 0x00	; 0
    2efa:	e0 91 36 04 	lds	r30, 0x0436
    2efe:	f0 91 37 04 	lds	r31, 0x0437
    2f02:	20 e0       	ldi	r18, 0x00	; 0
    2f04:	30 e0       	ldi	r19, 0x00	; 0
    2f06:	a0 e0       	ldi	r26, 0x00	; 0
    2f08:	b0 e0       	ldi	r27, 0x00	; 0
    2f0a:	30 97       	sbiw	r30, 0x00	; 0
    2f0c:	39 f1       	breq	.+78     	; 0x2f5c <malloc+0x70>
    2f0e:	40 81       	ld	r20, Z
    2f10:	51 81       	ldd	r21, Z+1	; 0x01
    2f12:	48 17       	cp	r20, r24
    2f14:	59 07       	cpc	r21, r25
    2f16:	b8 f0       	brcs	.+46     	; 0x2f46 <malloc+0x5a>
    2f18:	48 17       	cp	r20, r24
    2f1a:	59 07       	cpc	r21, r25
    2f1c:	71 f4       	brne	.+28     	; 0x2f3a <malloc+0x4e>
    2f1e:	82 81       	ldd	r24, Z+2	; 0x02
    2f20:	93 81       	ldd	r25, Z+3	; 0x03
    2f22:	10 97       	sbiw	r26, 0x00	; 0
    2f24:	29 f0       	breq	.+10     	; 0x2f30 <malloc+0x44>
    2f26:	13 96       	adiw	r26, 0x03	; 3
    2f28:	9c 93       	st	X, r25
    2f2a:	8e 93       	st	-X, r24
    2f2c:	12 97       	sbiw	r26, 0x02	; 2
    2f2e:	2c c0       	rjmp	.+88     	; 0x2f88 <malloc+0x9c>
    2f30:	90 93 37 04 	sts	0x0437, r25
    2f34:	80 93 36 04 	sts	0x0436, r24
    2f38:	27 c0       	rjmp	.+78     	; 0x2f88 <malloc+0x9c>
    2f3a:	21 15       	cp	r18, r1
    2f3c:	31 05       	cpc	r19, r1
    2f3e:	31 f0       	breq	.+12     	; 0x2f4c <malloc+0x60>
    2f40:	42 17       	cp	r20, r18
    2f42:	53 07       	cpc	r21, r19
    2f44:	18 f0       	brcs	.+6      	; 0x2f4c <malloc+0x60>
    2f46:	a9 01       	movw	r20, r18
    2f48:	db 01       	movw	r26, r22
    2f4a:	01 c0       	rjmp	.+2      	; 0x2f4e <malloc+0x62>
    2f4c:	ef 01       	movw	r28, r30
    2f4e:	9a 01       	movw	r18, r20
    2f50:	bd 01       	movw	r22, r26
    2f52:	df 01       	movw	r26, r30
    2f54:	02 80       	ldd	r0, Z+2	; 0x02
    2f56:	f3 81       	ldd	r31, Z+3	; 0x03
    2f58:	e0 2d       	mov	r30, r0
    2f5a:	d7 cf       	rjmp	.-82     	; 0x2f0a <malloc+0x1e>
    2f5c:	21 15       	cp	r18, r1
    2f5e:	31 05       	cpc	r19, r1
    2f60:	f9 f0       	breq	.+62     	; 0x2fa0 <malloc+0xb4>
    2f62:	28 1b       	sub	r18, r24
    2f64:	39 0b       	sbc	r19, r25
    2f66:	24 30       	cpi	r18, 0x04	; 4
    2f68:	31 05       	cpc	r19, r1
    2f6a:	80 f4       	brcc	.+32     	; 0x2f8c <malloc+0xa0>
    2f6c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f6e:	9b 81       	ldd	r25, Y+3	; 0x03
    2f70:	61 15       	cp	r22, r1
    2f72:	71 05       	cpc	r23, r1
    2f74:	21 f0       	breq	.+8      	; 0x2f7e <malloc+0x92>
    2f76:	fb 01       	movw	r30, r22
    2f78:	93 83       	std	Z+3, r25	; 0x03
    2f7a:	82 83       	std	Z+2, r24	; 0x02
    2f7c:	04 c0       	rjmp	.+8      	; 0x2f86 <malloc+0x9a>
    2f7e:	90 93 37 04 	sts	0x0437, r25
    2f82:	80 93 36 04 	sts	0x0436, r24
    2f86:	fe 01       	movw	r30, r28
    2f88:	32 96       	adiw	r30, 0x02	; 2
    2f8a:	44 c0       	rjmp	.+136    	; 0x3014 <malloc+0x128>
    2f8c:	fe 01       	movw	r30, r28
    2f8e:	e2 0f       	add	r30, r18
    2f90:	f3 1f       	adc	r31, r19
    2f92:	81 93       	st	Z+, r24
    2f94:	91 93       	st	Z+, r25
    2f96:	22 50       	subi	r18, 0x02	; 2
    2f98:	31 09       	sbc	r19, r1
    2f9a:	39 83       	std	Y+1, r19	; 0x01
    2f9c:	28 83       	st	Y, r18
    2f9e:	3a c0       	rjmp	.+116    	; 0x3014 <malloc+0x128>
    2fa0:	20 91 34 04 	lds	r18, 0x0434
    2fa4:	30 91 35 04 	lds	r19, 0x0435
    2fa8:	23 2b       	or	r18, r19
    2faa:	41 f4       	brne	.+16     	; 0x2fbc <malloc+0xd0>
    2fac:	20 91 02 01 	lds	r18, 0x0102
    2fb0:	30 91 03 01 	lds	r19, 0x0103
    2fb4:	30 93 35 04 	sts	0x0435, r19
    2fb8:	20 93 34 04 	sts	0x0434, r18
    2fbc:	20 91 00 01 	lds	r18, 0x0100
    2fc0:	30 91 01 01 	lds	r19, 0x0101
    2fc4:	21 15       	cp	r18, r1
    2fc6:	31 05       	cpc	r19, r1
    2fc8:	41 f4       	brne	.+16     	; 0x2fda <malloc+0xee>
    2fca:	2d b7       	in	r18, 0x3d	; 61
    2fcc:	3e b7       	in	r19, 0x3e	; 62
    2fce:	40 91 04 01 	lds	r20, 0x0104
    2fd2:	50 91 05 01 	lds	r21, 0x0105
    2fd6:	24 1b       	sub	r18, r20
    2fd8:	35 0b       	sbc	r19, r21
    2fda:	e0 91 34 04 	lds	r30, 0x0434
    2fde:	f0 91 35 04 	lds	r31, 0x0435
    2fe2:	e2 17       	cp	r30, r18
    2fe4:	f3 07       	cpc	r31, r19
    2fe6:	a0 f4       	brcc	.+40     	; 0x3010 <malloc+0x124>
    2fe8:	2e 1b       	sub	r18, r30
    2fea:	3f 0b       	sbc	r19, r31
    2fec:	28 17       	cp	r18, r24
    2fee:	39 07       	cpc	r19, r25
    2ff0:	78 f0       	brcs	.+30     	; 0x3010 <malloc+0x124>
    2ff2:	ac 01       	movw	r20, r24
    2ff4:	4e 5f       	subi	r20, 0xFE	; 254
    2ff6:	5f 4f       	sbci	r21, 0xFF	; 255
    2ff8:	24 17       	cp	r18, r20
    2ffa:	35 07       	cpc	r19, r21
    2ffc:	48 f0       	brcs	.+18     	; 0x3010 <malloc+0x124>
    2ffe:	4e 0f       	add	r20, r30
    3000:	5f 1f       	adc	r21, r31
    3002:	50 93 35 04 	sts	0x0435, r21
    3006:	40 93 34 04 	sts	0x0434, r20
    300a:	81 93       	st	Z+, r24
    300c:	91 93       	st	Z+, r25
    300e:	02 c0       	rjmp	.+4      	; 0x3014 <malloc+0x128>
    3010:	e0 e0       	ldi	r30, 0x00	; 0
    3012:	f0 e0       	ldi	r31, 0x00	; 0
    3014:	cf 01       	movw	r24, r30
    3016:	df 91       	pop	r29
    3018:	cf 91       	pop	r28
    301a:	08 95       	ret

0000301c <free>:
    301c:	cf 93       	push	r28
    301e:	df 93       	push	r29
    3020:	00 97       	sbiw	r24, 0x00	; 0
    3022:	09 f4       	brne	.+2      	; 0x3026 <free+0xa>
    3024:	87 c0       	rjmp	.+270    	; 0x3134 <free+0x118>
    3026:	fc 01       	movw	r30, r24
    3028:	32 97       	sbiw	r30, 0x02	; 2
    302a:	13 82       	std	Z+3, r1	; 0x03
    302c:	12 82       	std	Z+2, r1	; 0x02
    302e:	c0 91 36 04 	lds	r28, 0x0436
    3032:	d0 91 37 04 	lds	r29, 0x0437
    3036:	20 97       	sbiw	r28, 0x00	; 0
    3038:	81 f4       	brne	.+32     	; 0x305a <free+0x3e>
    303a:	20 81       	ld	r18, Z
    303c:	31 81       	ldd	r19, Z+1	; 0x01
    303e:	28 0f       	add	r18, r24
    3040:	39 1f       	adc	r19, r25
    3042:	80 91 34 04 	lds	r24, 0x0434
    3046:	90 91 35 04 	lds	r25, 0x0435
    304a:	82 17       	cp	r24, r18
    304c:	93 07       	cpc	r25, r19
    304e:	79 f5       	brne	.+94     	; 0x30ae <free+0x92>
    3050:	f0 93 35 04 	sts	0x0435, r31
    3054:	e0 93 34 04 	sts	0x0434, r30
    3058:	6d c0       	rjmp	.+218    	; 0x3134 <free+0x118>
    305a:	de 01       	movw	r26, r28
    305c:	20 e0       	ldi	r18, 0x00	; 0
    305e:	30 e0       	ldi	r19, 0x00	; 0
    3060:	ae 17       	cp	r26, r30
    3062:	bf 07       	cpc	r27, r31
    3064:	50 f4       	brcc	.+20     	; 0x307a <free+0x5e>
    3066:	12 96       	adiw	r26, 0x02	; 2
    3068:	4d 91       	ld	r20, X+
    306a:	5c 91       	ld	r21, X
    306c:	13 97       	sbiw	r26, 0x03	; 3
    306e:	9d 01       	movw	r18, r26
    3070:	41 15       	cp	r20, r1
    3072:	51 05       	cpc	r21, r1
    3074:	09 f1       	breq	.+66     	; 0x30b8 <free+0x9c>
    3076:	da 01       	movw	r26, r20
    3078:	f3 cf       	rjmp	.-26     	; 0x3060 <free+0x44>
    307a:	b3 83       	std	Z+3, r27	; 0x03
    307c:	a2 83       	std	Z+2, r26	; 0x02
    307e:	40 81       	ld	r20, Z
    3080:	51 81       	ldd	r21, Z+1	; 0x01
    3082:	84 0f       	add	r24, r20
    3084:	95 1f       	adc	r25, r21
    3086:	8a 17       	cp	r24, r26
    3088:	9b 07       	cpc	r25, r27
    308a:	71 f4       	brne	.+28     	; 0x30a8 <free+0x8c>
    308c:	8d 91       	ld	r24, X+
    308e:	9c 91       	ld	r25, X
    3090:	11 97       	sbiw	r26, 0x01	; 1
    3092:	84 0f       	add	r24, r20
    3094:	95 1f       	adc	r25, r21
    3096:	02 96       	adiw	r24, 0x02	; 2
    3098:	91 83       	std	Z+1, r25	; 0x01
    309a:	80 83       	st	Z, r24
    309c:	12 96       	adiw	r26, 0x02	; 2
    309e:	8d 91       	ld	r24, X+
    30a0:	9c 91       	ld	r25, X
    30a2:	13 97       	sbiw	r26, 0x03	; 3
    30a4:	93 83       	std	Z+3, r25	; 0x03
    30a6:	82 83       	std	Z+2, r24	; 0x02
    30a8:	21 15       	cp	r18, r1
    30aa:	31 05       	cpc	r19, r1
    30ac:	29 f4       	brne	.+10     	; 0x30b8 <free+0x9c>
    30ae:	f0 93 37 04 	sts	0x0437, r31
    30b2:	e0 93 36 04 	sts	0x0436, r30
    30b6:	3e c0       	rjmp	.+124    	; 0x3134 <free+0x118>
    30b8:	d9 01       	movw	r26, r18
    30ba:	13 96       	adiw	r26, 0x03	; 3
    30bc:	fc 93       	st	X, r31
    30be:	ee 93       	st	-X, r30
    30c0:	12 97       	sbiw	r26, 0x02	; 2
    30c2:	4d 91       	ld	r20, X+
    30c4:	5d 91       	ld	r21, X+
    30c6:	a4 0f       	add	r26, r20
    30c8:	b5 1f       	adc	r27, r21
    30ca:	ea 17       	cp	r30, r26
    30cc:	fb 07       	cpc	r31, r27
    30ce:	79 f4       	brne	.+30     	; 0x30ee <free+0xd2>
    30d0:	80 81       	ld	r24, Z
    30d2:	91 81       	ldd	r25, Z+1	; 0x01
    30d4:	84 0f       	add	r24, r20
    30d6:	95 1f       	adc	r25, r21
    30d8:	02 96       	adiw	r24, 0x02	; 2
    30da:	d9 01       	movw	r26, r18
    30dc:	11 96       	adiw	r26, 0x01	; 1
    30de:	9c 93       	st	X, r25
    30e0:	8e 93       	st	-X, r24
    30e2:	82 81       	ldd	r24, Z+2	; 0x02
    30e4:	93 81       	ldd	r25, Z+3	; 0x03
    30e6:	13 96       	adiw	r26, 0x03	; 3
    30e8:	9c 93       	st	X, r25
    30ea:	8e 93       	st	-X, r24
    30ec:	12 97       	sbiw	r26, 0x02	; 2
    30ee:	e0 e0       	ldi	r30, 0x00	; 0
    30f0:	f0 e0       	ldi	r31, 0x00	; 0
    30f2:	8a 81       	ldd	r24, Y+2	; 0x02
    30f4:	9b 81       	ldd	r25, Y+3	; 0x03
    30f6:	00 97       	sbiw	r24, 0x00	; 0
    30f8:	19 f0       	breq	.+6      	; 0x3100 <free+0xe4>
    30fa:	fe 01       	movw	r30, r28
    30fc:	ec 01       	movw	r28, r24
    30fe:	f9 cf       	rjmp	.-14     	; 0x30f2 <free+0xd6>
    3100:	ce 01       	movw	r24, r28
    3102:	02 96       	adiw	r24, 0x02	; 2
    3104:	28 81       	ld	r18, Y
    3106:	39 81       	ldd	r19, Y+1	; 0x01
    3108:	82 0f       	add	r24, r18
    310a:	93 1f       	adc	r25, r19
    310c:	20 91 34 04 	lds	r18, 0x0434
    3110:	30 91 35 04 	lds	r19, 0x0435
    3114:	28 17       	cp	r18, r24
    3116:	39 07       	cpc	r19, r25
    3118:	69 f4       	brne	.+26     	; 0x3134 <free+0x118>
    311a:	30 97       	sbiw	r30, 0x00	; 0
    311c:	29 f4       	brne	.+10     	; 0x3128 <free+0x10c>
    311e:	10 92 37 04 	sts	0x0437, r1
    3122:	10 92 36 04 	sts	0x0436, r1
    3126:	02 c0       	rjmp	.+4      	; 0x312c <free+0x110>
    3128:	13 82       	std	Z+3, r1	; 0x03
    312a:	12 82       	std	Z+2, r1	; 0x02
    312c:	d0 93 35 04 	sts	0x0435, r29
    3130:	c0 93 34 04 	sts	0x0434, r28
    3134:	df 91       	pop	r29
    3136:	cf 91       	pop	r28
    3138:	08 95       	ret

0000313a <realloc>:
    313a:	a0 e0       	ldi	r26, 0x00	; 0
    313c:	b0 e0       	ldi	r27, 0x00	; 0
    313e:	e3 ea       	ldi	r30, 0xA3	; 163
    3140:	f8 e1       	ldi	r31, 0x18	; 24
    3142:	0c 94 42 1c 	jmp	0x3884	; 0x3884 <__prologue_saves__+0x8>
    3146:	ec 01       	movw	r28, r24
    3148:	cb 01       	movw	r24, r22
    314a:	20 97       	sbiw	r28, 0x00	; 0
    314c:	19 f4       	brne	.+6      	; 0x3154 <realloc+0x1a>
    314e:	0e 94 76 17 	call	0x2eec	; 0x2eec <malloc>
    3152:	b8 c0       	rjmp	.+368    	; 0x32c4 <realloc+0x18a>
    3154:	fe 01       	movw	r30, r28
    3156:	e6 0f       	add	r30, r22
    3158:	f7 1f       	adc	r31, r23
    315a:	9e 01       	movw	r18, r28
    315c:	22 50       	subi	r18, 0x02	; 2
    315e:	31 09       	sbc	r19, r1
    3160:	e2 17       	cp	r30, r18
    3162:	f3 07       	cpc	r31, r19
    3164:	08 f4       	brcc	.+2      	; 0x3168 <realloc+0x2e>
    3166:	ac c0       	rjmp	.+344    	; 0x32c0 <realloc+0x186>
    3168:	d9 01       	movw	r26, r18
    316a:	0d 91       	ld	r16, X+
    316c:	1c 91       	ld	r17, X
    316e:	11 97       	sbiw	r26, 0x01	; 1
    3170:	06 17       	cp	r16, r22
    3172:	17 07       	cpc	r17, r23
    3174:	b8 f0       	brcs	.+46     	; 0x31a4 <realloc+0x6a>
    3176:	05 30       	cpi	r16, 0x05	; 5
    3178:	11 05       	cpc	r17, r1
    317a:	08 f4       	brcc	.+2      	; 0x317e <realloc+0x44>
    317c:	9f c0       	rjmp	.+318    	; 0x32bc <realloc+0x182>
    317e:	a8 01       	movw	r20, r16
    3180:	44 50       	subi	r20, 0x04	; 4
    3182:	51 09       	sbc	r21, r1
    3184:	46 17       	cp	r20, r22
    3186:	57 07       	cpc	r21, r23
    3188:	08 f4       	brcc	.+2      	; 0x318c <realloc+0x52>
    318a:	98 c0       	rjmp	.+304    	; 0x32bc <realloc+0x182>
    318c:	02 50       	subi	r16, 0x02	; 2
    318e:	11 09       	sbc	r17, r1
    3190:	06 1b       	sub	r16, r22
    3192:	17 0b       	sbc	r17, r23
    3194:	01 93       	st	Z+, r16
    3196:	11 93       	st	Z+, r17
    3198:	6d 93       	st	X+, r22
    319a:	7c 93       	st	X, r23
    319c:	cf 01       	movw	r24, r30
    319e:	0e 94 0e 18 	call	0x301c	; 0x301c <free>
    31a2:	8c c0       	rjmp	.+280    	; 0x32bc <realloc+0x182>
    31a4:	5b 01       	movw	r10, r22
    31a6:	a0 1a       	sub	r10, r16
    31a8:	b1 0a       	sbc	r11, r17
    31aa:	4e 01       	movw	r8, r28
    31ac:	80 0e       	add	r8, r16
    31ae:	91 1e       	adc	r9, r17
    31b0:	a0 91 36 04 	lds	r26, 0x0436
    31b4:	b0 91 37 04 	lds	r27, 0x0437
    31b8:	61 2c       	mov	r6, r1
    31ba:	71 2c       	mov	r7, r1
    31bc:	60 e0       	ldi	r22, 0x00	; 0
    31be:	70 e0       	ldi	r23, 0x00	; 0
    31c0:	10 97       	sbiw	r26, 0x00	; 0
    31c2:	09 f4       	brne	.+2      	; 0x31c6 <realloc+0x8c>
    31c4:	49 c0       	rjmp	.+146    	; 0x3258 <realloc+0x11e>
    31c6:	a8 15       	cp	r26, r8
    31c8:	b9 05       	cpc	r27, r9
    31ca:	c9 f5       	brne	.+114    	; 0x323e <realloc+0x104>
    31cc:	ed 90       	ld	r14, X+
    31ce:	fc 90       	ld	r15, X
    31d0:	11 97       	sbiw	r26, 0x01	; 1
    31d2:	67 01       	movw	r12, r14
    31d4:	42 e0       	ldi	r20, 0x02	; 2
    31d6:	c4 0e       	add	r12, r20
    31d8:	d1 1c       	adc	r13, r1
    31da:	ca 14       	cp	r12, r10
    31dc:	db 04       	cpc	r13, r11
    31de:	78 f1       	brcs	.+94     	; 0x323e <realloc+0x104>
    31e0:	47 01       	movw	r8, r14
    31e2:	8a 18       	sub	r8, r10
    31e4:	9b 08       	sbc	r9, r11
    31e6:	64 01       	movw	r12, r8
    31e8:	42 e0       	ldi	r20, 0x02	; 2
    31ea:	c4 0e       	add	r12, r20
    31ec:	d1 1c       	adc	r13, r1
    31ee:	12 96       	adiw	r26, 0x02	; 2
    31f0:	bc 90       	ld	r11, X
    31f2:	12 97       	sbiw	r26, 0x02	; 2
    31f4:	13 96       	adiw	r26, 0x03	; 3
    31f6:	ac 91       	ld	r26, X
    31f8:	b5 e0       	ldi	r27, 0x05	; 5
    31fa:	cb 16       	cp	r12, r27
    31fc:	d1 04       	cpc	r13, r1
    31fe:	40 f0       	brcs	.+16     	; 0x3210 <realloc+0xd6>
    3200:	b2 82       	std	Z+2, r11	; 0x02
    3202:	a3 83       	std	Z+3, r26	; 0x03
    3204:	91 82       	std	Z+1, r9	; 0x01
    3206:	80 82       	st	Z, r8
    3208:	d9 01       	movw	r26, r18
    320a:	8d 93       	st	X+, r24
    320c:	9c 93       	st	X, r25
    320e:	09 c0       	rjmp	.+18     	; 0x3222 <realloc+0xe8>
    3210:	0e 5f       	subi	r16, 0xFE	; 254
    3212:	1f 4f       	sbci	r17, 0xFF	; 255
    3214:	0e 0d       	add	r16, r14
    3216:	1f 1d       	adc	r17, r15
    3218:	f9 01       	movw	r30, r18
    321a:	11 83       	std	Z+1, r17	; 0x01
    321c:	00 83       	st	Z, r16
    321e:	eb 2d       	mov	r30, r11
    3220:	fa 2f       	mov	r31, r26
    3222:	61 15       	cp	r22, r1
    3224:	71 05       	cpc	r23, r1
    3226:	31 f0       	breq	.+12     	; 0x3234 <realloc+0xfa>
    3228:	db 01       	movw	r26, r22
    322a:	13 96       	adiw	r26, 0x03	; 3
    322c:	fc 93       	st	X, r31
    322e:	ee 93       	st	-X, r30
    3230:	12 97       	sbiw	r26, 0x02	; 2
    3232:	44 c0       	rjmp	.+136    	; 0x32bc <realloc+0x182>
    3234:	f0 93 37 04 	sts	0x0437, r31
    3238:	e0 93 36 04 	sts	0x0436, r30
    323c:	3f c0       	rjmp	.+126    	; 0x32bc <realloc+0x182>
    323e:	6d 91       	ld	r22, X+
    3240:	7c 91       	ld	r23, X
    3242:	11 97       	sbiw	r26, 0x01	; 1
    3244:	66 16       	cp	r6, r22
    3246:	77 06       	cpc	r7, r23
    3248:	08 f4       	brcc	.+2      	; 0x324c <realloc+0x112>
    324a:	3b 01       	movw	r6, r22
    324c:	bd 01       	movw	r22, r26
    324e:	12 96       	adiw	r26, 0x02	; 2
    3250:	0d 90       	ld	r0, X+
    3252:	bc 91       	ld	r27, X
    3254:	a0 2d       	mov	r26, r0
    3256:	b4 cf       	rjmp	.-152    	; 0x31c0 <realloc+0x86>
    3258:	60 91 34 04 	lds	r22, 0x0434
    325c:	70 91 35 04 	lds	r23, 0x0435
    3260:	68 15       	cp	r22, r8
    3262:	79 05       	cpc	r23, r9
    3264:	e9 f4       	brne	.+58     	; 0x32a0 <realloc+0x166>
    3266:	68 16       	cp	r6, r24
    3268:	79 06       	cpc	r7, r25
    326a:	d0 f4       	brcc	.+52     	; 0x32a0 <realloc+0x166>
    326c:	40 91 00 01 	lds	r20, 0x0100
    3270:	50 91 01 01 	lds	r21, 0x0101
    3274:	41 15       	cp	r20, r1
    3276:	51 05       	cpc	r21, r1
    3278:	41 f4       	brne	.+16     	; 0x328a <realloc+0x150>
    327a:	4d b7       	in	r20, 0x3d	; 61
    327c:	5e b7       	in	r21, 0x3e	; 62
    327e:	60 91 04 01 	lds	r22, 0x0104
    3282:	70 91 05 01 	lds	r23, 0x0105
    3286:	46 1b       	sub	r20, r22
    3288:	57 0b       	sbc	r21, r23
    328a:	e4 17       	cp	r30, r20
    328c:	f5 07       	cpc	r31, r21
    328e:	c0 f4       	brcc	.+48     	; 0x32c0 <realloc+0x186>
    3290:	f0 93 35 04 	sts	0x0435, r31
    3294:	e0 93 34 04 	sts	0x0434, r30
    3298:	f9 01       	movw	r30, r18
    329a:	91 83       	std	Z+1, r25	; 0x01
    329c:	80 83       	st	Z, r24
    329e:	0e c0       	rjmp	.+28     	; 0x32bc <realloc+0x182>
    32a0:	0e 94 76 17 	call	0x2eec	; 0x2eec <malloc>
    32a4:	7c 01       	movw	r14, r24
    32a6:	00 97       	sbiw	r24, 0x00	; 0
    32a8:	59 f0       	breq	.+22     	; 0x32c0 <realloc+0x186>
    32aa:	a8 01       	movw	r20, r16
    32ac:	be 01       	movw	r22, r28
    32ae:	0e 94 6a 19 	call	0x32d4	; 0x32d4 <memcpy>
    32b2:	ce 01       	movw	r24, r28
    32b4:	0e 94 0e 18 	call	0x301c	; 0x301c <free>
    32b8:	c7 01       	movw	r24, r14
    32ba:	04 c0       	rjmp	.+8      	; 0x32c4 <realloc+0x18a>
    32bc:	ce 01       	movw	r24, r28
    32be:	02 c0       	rjmp	.+4      	; 0x32c4 <realloc+0x18a>
    32c0:	80 e0       	ldi	r24, 0x00	; 0
    32c2:	90 e0       	ldi	r25, 0x00	; 0
    32c4:	cd b7       	in	r28, 0x3d	; 61
    32c6:	de b7       	in	r29, 0x3e	; 62
    32c8:	ee e0       	ldi	r30, 0x0E	; 14
    32ca:	0c 94 5e 1c 	jmp	0x38bc	; 0x38bc <__epilogue_restores__+0x8>

000032ce <exit>:
    32ce:	f8 94       	cli
    32d0:	0c 94 7b 1c 	jmp	0x38f6	; 0x38f6 <__do_global_dtors>

000032d4 <memcpy>:
    32d4:	fb 01       	movw	r30, r22
    32d6:	dc 01       	movw	r26, r24
    32d8:	02 c0       	rjmp	.+4      	; 0x32de <memcpy+0xa>
    32da:	01 90       	ld	r0, Z+
    32dc:	0d 92       	st	X+, r0
    32de:	41 50       	subi	r20, 0x01	; 1
    32e0:	50 40       	sbci	r21, 0x00	; 0
    32e2:	d8 f7       	brcc	.-10     	; 0x32da <memcpy+0x6>
    32e4:	08 95       	ret

000032e6 <strcpy>:
    32e6:	fb 01       	movw	r30, r22
    32e8:	dc 01       	movw	r26, r24
    32ea:	01 90       	ld	r0, Z+
    32ec:	0d 92       	st	X+, r0
    32ee:	00 20       	and	r0, r0
    32f0:	e1 f7       	brne	.-8      	; 0x32ea <strcpy+0x4>
    32f2:	08 95       	ret

000032f4 <sprintf>:
    32f4:	ae e0       	ldi	r26, 0x0E	; 14
    32f6:	b0 e0       	ldi	r27, 0x00	; 0
    32f8:	e0 e8       	ldi	r30, 0x80	; 128
    32fa:	f9 e1       	ldi	r31, 0x19	; 25
    32fc:	0c 94 4c 1c 	jmp	0x3898	; 0x3898 <__prologue_saves__+0x1c>
    3300:	0d 89       	ldd	r16, Y+21	; 0x15
    3302:	1e 89       	ldd	r17, Y+22	; 0x16
    3304:	86 e0       	ldi	r24, 0x06	; 6
    3306:	8c 83       	std	Y+4, r24	; 0x04
    3308:	1a 83       	std	Y+2, r17	; 0x02
    330a:	09 83       	std	Y+1, r16	; 0x01
    330c:	8f ef       	ldi	r24, 0xFF	; 255
    330e:	9f e7       	ldi	r25, 0x7F	; 127
    3310:	9e 83       	std	Y+6, r25	; 0x06
    3312:	8d 83       	std	Y+5, r24	; 0x05
    3314:	ae 01       	movw	r20, r28
    3316:	47 5e       	subi	r20, 0xE7	; 231
    3318:	5f 4f       	sbci	r21, 0xFF	; 255
    331a:	6f 89       	ldd	r22, Y+23	; 0x17
    331c:	78 8d       	ldd	r23, Y+24	; 0x18
    331e:	ce 01       	movw	r24, r28
    3320:	01 96       	adiw	r24, 0x01	; 1
    3322:	0e 94 9c 19 	call	0x3338	; 0x3338 <vfprintf>
    3326:	ef 81       	ldd	r30, Y+7	; 0x07
    3328:	f8 85       	ldd	r31, Y+8	; 0x08
    332a:	e0 0f       	add	r30, r16
    332c:	f1 1f       	adc	r31, r17
    332e:	10 82       	st	Z, r1
    3330:	2e 96       	adiw	r28, 0x0e	; 14
    3332:	e4 e0       	ldi	r30, 0x04	; 4
    3334:	0c 94 68 1c 	jmp	0x38d0	; 0x38d0 <__epilogue_restores__+0x1c>

00003338 <vfprintf>:
    3338:	ac e0       	ldi	r26, 0x0C	; 12
    333a:	b0 e0       	ldi	r27, 0x00	; 0
    333c:	e2 ea       	ldi	r30, 0xA2	; 162
    333e:	f9 e1       	ldi	r31, 0x19	; 25
    3340:	0c 94 3e 1c 	jmp	0x387c	; 0x387c <__prologue_saves__>
    3344:	7c 01       	movw	r14, r24
    3346:	6b 01       	movw	r12, r22
    3348:	8a 01       	movw	r16, r20
    334a:	fc 01       	movw	r30, r24
    334c:	17 82       	std	Z+7, r1	; 0x07
    334e:	16 82       	std	Z+6, r1	; 0x06
    3350:	83 81       	ldd	r24, Z+3	; 0x03
    3352:	81 ff       	sbrs	r24, 1
    3354:	bd c1       	rjmp	.+890    	; 0x36d0 <vfprintf+0x398>
    3356:	ce 01       	movw	r24, r28
    3358:	01 96       	adiw	r24, 0x01	; 1
    335a:	4c 01       	movw	r8, r24
    335c:	f7 01       	movw	r30, r14
    335e:	93 81       	ldd	r25, Z+3	; 0x03
    3360:	f6 01       	movw	r30, r12
    3362:	93 fd       	sbrc	r25, 3
    3364:	85 91       	lpm	r24, Z+
    3366:	93 ff       	sbrs	r25, 3
    3368:	81 91       	ld	r24, Z+
    336a:	6f 01       	movw	r12, r30
    336c:	88 23       	and	r24, r24
    336e:	09 f4       	brne	.+2      	; 0x3372 <vfprintf+0x3a>
    3370:	ab c1       	rjmp	.+854    	; 0x36c8 <vfprintf+0x390>
    3372:	85 32       	cpi	r24, 0x25	; 37
    3374:	39 f4       	brne	.+14     	; 0x3384 <vfprintf+0x4c>
    3376:	93 fd       	sbrc	r25, 3
    3378:	85 91       	lpm	r24, Z+
    337a:	93 ff       	sbrs	r25, 3
    337c:	81 91       	ld	r24, Z+
    337e:	6f 01       	movw	r12, r30
    3380:	85 32       	cpi	r24, 0x25	; 37
    3382:	29 f4       	brne	.+10     	; 0x338e <vfprintf+0x56>
    3384:	b7 01       	movw	r22, r14
    3386:	90 e0       	ldi	r25, 0x00	; 0
    3388:	0e 94 8c 1b 	call	0x3718	; 0x3718 <fputc>
    338c:	e7 cf       	rjmp	.-50     	; 0x335c <vfprintf+0x24>
    338e:	51 2c       	mov	r5, r1
    3390:	31 2c       	mov	r3, r1
    3392:	20 e0       	ldi	r18, 0x00	; 0
    3394:	20 32       	cpi	r18, 0x20	; 32
    3396:	a0 f4       	brcc	.+40     	; 0x33c0 <vfprintf+0x88>
    3398:	8b 32       	cpi	r24, 0x2B	; 43
    339a:	69 f0       	breq	.+26     	; 0x33b6 <vfprintf+0x7e>
    339c:	30 f4       	brcc	.+12     	; 0x33aa <vfprintf+0x72>
    339e:	80 32       	cpi	r24, 0x20	; 32
    33a0:	59 f0       	breq	.+22     	; 0x33b8 <vfprintf+0x80>
    33a2:	83 32       	cpi	r24, 0x23	; 35
    33a4:	69 f4       	brne	.+26     	; 0x33c0 <vfprintf+0x88>
    33a6:	20 61       	ori	r18, 0x10	; 16
    33a8:	2c c0       	rjmp	.+88     	; 0x3402 <vfprintf+0xca>
    33aa:	8d 32       	cpi	r24, 0x2D	; 45
    33ac:	39 f0       	breq	.+14     	; 0x33bc <vfprintf+0x84>
    33ae:	80 33       	cpi	r24, 0x30	; 48
    33b0:	39 f4       	brne	.+14     	; 0x33c0 <vfprintf+0x88>
    33b2:	21 60       	ori	r18, 0x01	; 1
    33b4:	26 c0       	rjmp	.+76     	; 0x3402 <vfprintf+0xca>
    33b6:	22 60       	ori	r18, 0x02	; 2
    33b8:	24 60       	ori	r18, 0x04	; 4
    33ba:	23 c0       	rjmp	.+70     	; 0x3402 <vfprintf+0xca>
    33bc:	28 60       	ori	r18, 0x08	; 8
    33be:	21 c0       	rjmp	.+66     	; 0x3402 <vfprintf+0xca>
    33c0:	27 fd       	sbrc	r18, 7
    33c2:	27 c0       	rjmp	.+78     	; 0x3412 <vfprintf+0xda>
    33c4:	30 ed       	ldi	r19, 0xD0	; 208
    33c6:	38 0f       	add	r19, r24
    33c8:	3a 30       	cpi	r19, 0x0A	; 10
    33ca:	78 f4       	brcc	.+30     	; 0x33ea <vfprintf+0xb2>
    33cc:	26 ff       	sbrs	r18, 6
    33ce:	06 c0       	rjmp	.+12     	; 0x33dc <vfprintf+0xa4>
    33d0:	fa e0       	ldi	r31, 0x0A	; 10
    33d2:	5f 9e       	mul	r5, r31
    33d4:	30 0d       	add	r19, r0
    33d6:	11 24       	eor	r1, r1
    33d8:	53 2e       	mov	r5, r19
    33da:	13 c0       	rjmp	.+38     	; 0x3402 <vfprintf+0xca>
    33dc:	8a e0       	ldi	r24, 0x0A	; 10
    33de:	38 9e       	mul	r3, r24
    33e0:	30 0d       	add	r19, r0
    33e2:	11 24       	eor	r1, r1
    33e4:	33 2e       	mov	r3, r19
    33e6:	20 62       	ori	r18, 0x20	; 32
    33e8:	0c c0       	rjmp	.+24     	; 0x3402 <vfprintf+0xca>
    33ea:	8e 32       	cpi	r24, 0x2E	; 46
    33ec:	21 f4       	brne	.+8      	; 0x33f6 <vfprintf+0xbe>
    33ee:	26 fd       	sbrc	r18, 6
    33f0:	6b c1       	rjmp	.+726    	; 0x36c8 <vfprintf+0x390>
    33f2:	20 64       	ori	r18, 0x40	; 64
    33f4:	06 c0       	rjmp	.+12     	; 0x3402 <vfprintf+0xca>
    33f6:	8c 36       	cpi	r24, 0x6C	; 108
    33f8:	11 f4       	brne	.+4      	; 0x33fe <vfprintf+0xc6>
    33fa:	20 68       	ori	r18, 0x80	; 128
    33fc:	02 c0       	rjmp	.+4      	; 0x3402 <vfprintf+0xca>
    33fe:	88 36       	cpi	r24, 0x68	; 104
    3400:	41 f4       	brne	.+16     	; 0x3412 <vfprintf+0xda>
    3402:	f6 01       	movw	r30, r12
    3404:	93 fd       	sbrc	r25, 3
    3406:	85 91       	lpm	r24, Z+
    3408:	93 ff       	sbrs	r25, 3
    340a:	81 91       	ld	r24, Z+
    340c:	6f 01       	movw	r12, r30
    340e:	81 11       	cpse	r24, r1
    3410:	c1 cf       	rjmp	.-126    	; 0x3394 <vfprintf+0x5c>
    3412:	98 2f       	mov	r25, r24
    3414:	9f 7d       	andi	r25, 0xDF	; 223
    3416:	95 54       	subi	r25, 0x45	; 69
    3418:	93 30       	cpi	r25, 0x03	; 3
    341a:	28 f4       	brcc	.+10     	; 0x3426 <vfprintf+0xee>
    341c:	0c 5f       	subi	r16, 0xFC	; 252
    341e:	1f 4f       	sbci	r17, 0xFF	; 255
    3420:	ff e3       	ldi	r31, 0x3F	; 63
    3422:	f9 83       	std	Y+1, r31	; 0x01
    3424:	0d c0       	rjmp	.+26     	; 0x3440 <vfprintf+0x108>
    3426:	83 36       	cpi	r24, 0x63	; 99
    3428:	31 f0       	breq	.+12     	; 0x3436 <vfprintf+0xfe>
    342a:	83 37       	cpi	r24, 0x73	; 115
    342c:	71 f0       	breq	.+28     	; 0x344a <vfprintf+0x112>
    342e:	83 35       	cpi	r24, 0x53	; 83
    3430:	09 f0       	breq	.+2      	; 0x3434 <vfprintf+0xfc>
    3432:	5b c0       	rjmp	.+182    	; 0x34ea <vfprintf+0x1b2>
    3434:	22 c0       	rjmp	.+68     	; 0x347a <vfprintf+0x142>
    3436:	f8 01       	movw	r30, r16
    3438:	80 81       	ld	r24, Z
    343a:	89 83       	std	Y+1, r24	; 0x01
    343c:	0e 5f       	subi	r16, 0xFE	; 254
    343e:	1f 4f       	sbci	r17, 0xFF	; 255
    3440:	44 24       	eor	r4, r4
    3442:	43 94       	inc	r4
    3444:	51 2c       	mov	r5, r1
    3446:	54 01       	movw	r10, r8
    3448:	15 c0       	rjmp	.+42     	; 0x3474 <vfprintf+0x13c>
    344a:	38 01       	movw	r6, r16
    344c:	f2 e0       	ldi	r31, 0x02	; 2
    344e:	6f 0e       	add	r6, r31
    3450:	71 1c       	adc	r7, r1
    3452:	f8 01       	movw	r30, r16
    3454:	a0 80       	ld	r10, Z
    3456:	b1 80       	ldd	r11, Z+1	; 0x01
    3458:	26 ff       	sbrs	r18, 6
    345a:	03 c0       	rjmp	.+6      	; 0x3462 <vfprintf+0x12a>
    345c:	65 2d       	mov	r22, r5
    345e:	70 e0       	ldi	r23, 0x00	; 0
    3460:	02 c0       	rjmp	.+4      	; 0x3466 <vfprintf+0x12e>
    3462:	6f ef       	ldi	r22, 0xFF	; 255
    3464:	7f ef       	ldi	r23, 0xFF	; 255
    3466:	c5 01       	movw	r24, r10
    3468:	2c 87       	std	Y+12, r18	; 0x0c
    346a:	0e 94 81 1b 	call	0x3702	; 0x3702 <strnlen>
    346e:	2c 01       	movw	r4, r24
    3470:	83 01       	movw	r16, r6
    3472:	2c 85       	ldd	r18, Y+12	; 0x0c
    3474:	2f 77       	andi	r18, 0x7F	; 127
    3476:	22 2e       	mov	r2, r18
    3478:	17 c0       	rjmp	.+46     	; 0x34a8 <vfprintf+0x170>
    347a:	38 01       	movw	r6, r16
    347c:	f2 e0       	ldi	r31, 0x02	; 2
    347e:	6f 0e       	add	r6, r31
    3480:	71 1c       	adc	r7, r1
    3482:	f8 01       	movw	r30, r16
    3484:	a0 80       	ld	r10, Z
    3486:	b1 80       	ldd	r11, Z+1	; 0x01
    3488:	26 ff       	sbrs	r18, 6
    348a:	03 c0       	rjmp	.+6      	; 0x3492 <vfprintf+0x15a>
    348c:	65 2d       	mov	r22, r5
    348e:	70 e0       	ldi	r23, 0x00	; 0
    3490:	02 c0       	rjmp	.+4      	; 0x3496 <vfprintf+0x15e>
    3492:	6f ef       	ldi	r22, 0xFF	; 255
    3494:	7f ef       	ldi	r23, 0xFF	; 255
    3496:	c5 01       	movw	r24, r10
    3498:	2c 87       	std	Y+12, r18	; 0x0c
    349a:	0e 94 76 1b 	call	0x36ec	; 0x36ec <strnlen_P>
    349e:	2c 01       	movw	r4, r24
    34a0:	2c 85       	ldd	r18, Y+12	; 0x0c
    34a2:	20 68       	ori	r18, 0x80	; 128
    34a4:	22 2e       	mov	r2, r18
    34a6:	83 01       	movw	r16, r6
    34a8:	23 fc       	sbrc	r2, 3
    34aa:	1b c0       	rjmp	.+54     	; 0x34e2 <vfprintf+0x1aa>
    34ac:	83 2d       	mov	r24, r3
    34ae:	90 e0       	ldi	r25, 0x00	; 0
    34b0:	48 16       	cp	r4, r24
    34b2:	59 06       	cpc	r5, r25
    34b4:	b0 f4       	brcc	.+44     	; 0x34e2 <vfprintf+0x1aa>
    34b6:	b7 01       	movw	r22, r14
    34b8:	80 e2       	ldi	r24, 0x20	; 32
    34ba:	90 e0       	ldi	r25, 0x00	; 0
    34bc:	0e 94 8c 1b 	call	0x3718	; 0x3718 <fputc>
    34c0:	3a 94       	dec	r3
    34c2:	f4 cf       	rjmp	.-24     	; 0x34ac <vfprintf+0x174>
    34c4:	f5 01       	movw	r30, r10
    34c6:	27 fc       	sbrc	r2, 7
    34c8:	85 91       	lpm	r24, Z+
    34ca:	27 fe       	sbrs	r2, 7
    34cc:	81 91       	ld	r24, Z+
    34ce:	5f 01       	movw	r10, r30
    34d0:	b7 01       	movw	r22, r14
    34d2:	90 e0       	ldi	r25, 0x00	; 0
    34d4:	0e 94 8c 1b 	call	0x3718	; 0x3718 <fputc>
    34d8:	31 10       	cpse	r3, r1
    34da:	3a 94       	dec	r3
    34dc:	f1 e0       	ldi	r31, 0x01	; 1
    34de:	4f 1a       	sub	r4, r31
    34e0:	51 08       	sbc	r5, r1
    34e2:	41 14       	cp	r4, r1
    34e4:	51 04       	cpc	r5, r1
    34e6:	71 f7       	brne	.-36     	; 0x34c4 <vfprintf+0x18c>
    34e8:	e5 c0       	rjmp	.+458    	; 0x36b4 <vfprintf+0x37c>
    34ea:	84 36       	cpi	r24, 0x64	; 100
    34ec:	11 f0       	breq	.+4      	; 0x34f2 <vfprintf+0x1ba>
    34ee:	89 36       	cpi	r24, 0x69	; 105
    34f0:	39 f5       	brne	.+78     	; 0x3540 <vfprintf+0x208>
    34f2:	f8 01       	movw	r30, r16
    34f4:	27 ff       	sbrs	r18, 7
    34f6:	07 c0       	rjmp	.+14     	; 0x3506 <vfprintf+0x1ce>
    34f8:	60 81       	ld	r22, Z
    34fa:	71 81       	ldd	r23, Z+1	; 0x01
    34fc:	82 81       	ldd	r24, Z+2	; 0x02
    34fe:	93 81       	ldd	r25, Z+3	; 0x03
    3500:	0c 5f       	subi	r16, 0xFC	; 252
    3502:	1f 4f       	sbci	r17, 0xFF	; 255
    3504:	08 c0       	rjmp	.+16     	; 0x3516 <vfprintf+0x1de>
    3506:	60 81       	ld	r22, Z
    3508:	71 81       	ldd	r23, Z+1	; 0x01
    350a:	88 27       	eor	r24, r24
    350c:	77 fd       	sbrc	r23, 7
    350e:	80 95       	com	r24
    3510:	98 2f       	mov	r25, r24
    3512:	0e 5f       	subi	r16, 0xFE	; 254
    3514:	1f 4f       	sbci	r17, 0xFF	; 255
    3516:	2f 76       	andi	r18, 0x6F	; 111
    3518:	b2 2e       	mov	r11, r18
    351a:	97 ff       	sbrs	r25, 7
    351c:	09 c0       	rjmp	.+18     	; 0x3530 <vfprintf+0x1f8>
    351e:	90 95       	com	r25
    3520:	80 95       	com	r24
    3522:	70 95       	com	r23
    3524:	61 95       	neg	r22
    3526:	7f 4f       	sbci	r23, 0xFF	; 255
    3528:	8f 4f       	sbci	r24, 0xFF	; 255
    352a:	9f 4f       	sbci	r25, 0xFF	; 255
    352c:	20 68       	ori	r18, 0x80	; 128
    352e:	b2 2e       	mov	r11, r18
    3530:	2a e0       	ldi	r18, 0x0A	; 10
    3532:	30 e0       	ldi	r19, 0x00	; 0
    3534:	a4 01       	movw	r20, r8
    3536:	0e 94 be 1b 	call	0x377c	; 0x377c <__ultoa_invert>
    353a:	a8 2e       	mov	r10, r24
    353c:	a8 18       	sub	r10, r8
    353e:	44 c0       	rjmp	.+136    	; 0x35c8 <vfprintf+0x290>
    3540:	85 37       	cpi	r24, 0x75	; 117
    3542:	29 f4       	brne	.+10     	; 0x354e <vfprintf+0x216>
    3544:	2f 7e       	andi	r18, 0xEF	; 239
    3546:	b2 2e       	mov	r11, r18
    3548:	2a e0       	ldi	r18, 0x0A	; 10
    354a:	30 e0       	ldi	r19, 0x00	; 0
    354c:	25 c0       	rjmp	.+74     	; 0x3598 <vfprintf+0x260>
    354e:	f2 2f       	mov	r31, r18
    3550:	f9 7f       	andi	r31, 0xF9	; 249
    3552:	bf 2e       	mov	r11, r31
    3554:	8f 36       	cpi	r24, 0x6F	; 111
    3556:	c1 f0       	breq	.+48     	; 0x3588 <vfprintf+0x250>
    3558:	18 f4       	brcc	.+6      	; 0x3560 <vfprintf+0x228>
    355a:	88 35       	cpi	r24, 0x58	; 88
    355c:	79 f0       	breq	.+30     	; 0x357c <vfprintf+0x244>
    355e:	b4 c0       	rjmp	.+360    	; 0x36c8 <vfprintf+0x390>
    3560:	80 37       	cpi	r24, 0x70	; 112
    3562:	19 f0       	breq	.+6      	; 0x356a <vfprintf+0x232>
    3564:	88 37       	cpi	r24, 0x78	; 120
    3566:	21 f0       	breq	.+8      	; 0x3570 <vfprintf+0x238>
    3568:	af c0       	rjmp	.+350    	; 0x36c8 <vfprintf+0x390>
    356a:	2f 2f       	mov	r18, r31
    356c:	20 61       	ori	r18, 0x10	; 16
    356e:	b2 2e       	mov	r11, r18
    3570:	b4 fe       	sbrs	r11, 4
    3572:	0d c0       	rjmp	.+26     	; 0x358e <vfprintf+0x256>
    3574:	8b 2d       	mov	r24, r11
    3576:	84 60       	ori	r24, 0x04	; 4
    3578:	b8 2e       	mov	r11, r24
    357a:	09 c0       	rjmp	.+18     	; 0x358e <vfprintf+0x256>
    357c:	24 ff       	sbrs	r18, 4
    357e:	0a c0       	rjmp	.+20     	; 0x3594 <vfprintf+0x25c>
    3580:	9f 2f       	mov	r25, r31
    3582:	96 60       	ori	r25, 0x06	; 6
    3584:	b9 2e       	mov	r11, r25
    3586:	06 c0       	rjmp	.+12     	; 0x3594 <vfprintf+0x25c>
    3588:	28 e0       	ldi	r18, 0x08	; 8
    358a:	30 e0       	ldi	r19, 0x00	; 0
    358c:	05 c0       	rjmp	.+10     	; 0x3598 <vfprintf+0x260>
    358e:	20 e1       	ldi	r18, 0x10	; 16
    3590:	30 e0       	ldi	r19, 0x00	; 0
    3592:	02 c0       	rjmp	.+4      	; 0x3598 <vfprintf+0x260>
    3594:	20 e1       	ldi	r18, 0x10	; 16
    3596:	32 e0       	ldi	r19, 0x02	; 2
    3598:	f8 01       	movw	r30, r16
    359a:	b7 fe       	sbrs	r11, 7
    359c:	07 c0       	rjmp	.+14     	; 0x35ac <vfprintf+0x274>
    359e:	60 81       	ld	r22, Z
    35a0:	71 81       	ldd	r23, Z+1	; 0x01
    35a2:	82 81       	ldd	r24, Z+2	; 0x02
    35a4:	93 81       	ldd	r25, Z+3	; 0x03
    35a6:	0c 5f       	subi	r16, 0xFC	; 252
    35a8:	1f 4f       	sbci	r17, 0xFF	; 255
    35aa:	06 c0       	rjmp	.+12     	; 0x35b8 <vfprintf+0x280>
    35ac:	60 81       	ld	r22, Z
    35ae:	71 81       	ldd	r23, Z+1	; 0x01
    35b0:	80 e0       	ldi	r24, 0x00	; 0
    35b2:	90 e0       	ldi	r25, 0x00	; 0
    35b4:	0e 5f       	subi	r16, 0xFE	; 254
    35b6:	1f 4f       	sbci	r17, 0xFF	; 255
    35b8:	a4 01       	movw	r20, r8
    35ba:	0e 94 be 1b 	call	0x377c	; 0x377c <__ultoa_invert>
    35be:	a8 2e       	mov	r10, r24
    35c0:	a8 18       	sub	r10, r8
    35c2:	fb 2d       	mov	r31, r11
    35c4:	ff 77       	andi	r31, 0x7F	; 127
    35c6:	bf 2e       	mov	r11, r31
    35c8:	b6 fe       	sbrs	r11, 6
    35ca:	0b c0       	rjmp	.+22     	; 0x35e2 <vfprintf+0x2aa>
    35cc:	2b 2d       	mov	r18, r11
    35ce:	2e 7f       	andi	r18, 0xFE	; 254
    35d0:	a5 14       	cp	r10, r5
    35d2:	50 f4       	brcc	.+20     	; 0x35e8 <vfprintf+0x2b0>
    35d4:	b4 fe       	sbrs	r11, 4
    35d6:	0a c0       	rjmp	.+20     	; 0x35ec <vfprintf+0x2b4>
    35d8:	b2 fc       	sbrc	r11, 2
    35da:	08 c0       	rjmp	.+16     	; 0x35ec <vfprintf+0x2b4>
    35dc:	2b 2d       	mov	r18, r11
    35de:	2e 7e       	andi	r18, 0xEE	; 238
    35e0:	05 c0       	rjmp	.+10     	; 0x35ec <vfprintf+0x2b4>
    35e2:	7a 2c       	mov	r7, r10
    35e4:	2b 2d       	mov	r18, r11
    35e6:	03 c0       	rjmp	.+6      	; 0x35ee <vfprintf+0x2b6>
    35e8:	7a 2c       	mov	r7, r10
    35ea:	01 c0       	rjmp	.+2      	; 0x35ee <vfprintf+0x2b6>
    35ec:	75 2c       	mov	r7, r5
    35ee:	24 ff       	sbrs	r18, 4
    35f0:	0d c0       	rjmp	.+26     	; 0x360c <vfprintf+0x2d4>
    35f2:	fe 01       	movw	r30, r28
    35f4:	ea 0d       	add	r30, r10
    35f6:	f1 1d       	adc	r31, r1
    35f8:	80 81       	ld	r24, Z
    35fa:	80 33       	cpi	r24, 0x30	; 48
    35fc:	11 f4       	brne	.+4      	; 0x3602 <vfprintf+0x2ca>
    35fe:	29 7e       	andi	r18, 0xE9	; 233
    3600:	09 c0       	rjmp	.+18     	; 0x3614 <vfprintf+0x2dc>
    3602:	22 ff       	sbrs	r18, 2
    3604:	06 c0       	rjmp	.+12     	; 0x3612 <vfprintf+0x2da>
    3606:	73 94       	inc	r7
    3608:	73 94       	inc	r7
    360a:	04 c0       	rjmp	.+8      	; 0x3614 <vfprintf+0x2dc>
    360c:	82 2f       	mov	r24, r18
    360e:	86 78       	andi	r24, 0x86	; 134
    3610:	09 f0       	breq	.+2      	; 0x3614 <vfprintf+0x2dc>
    3612:	73 94       	inc	r7
    3614:	23 fd       	sbrc	r18, 3
    3616:	13 c0       	rjmp	.+38     	; 0x363e <vfprintf+0x306>
    3618:	20 ff       	sbrs	r18, 0
    361a:	06 c0       	rjmp	.+12     	; 0x3628 <vfprintf+0x2f0>
    361c:	5a 2c       	mov	r5, r10
    361e:	73 14       	cp	r7, r3
    3620:	18 f4       	brcc	.+6      	; 0x3628 <vfprintf+0x2f0>
    3622:	53 0c       	add	r5, r3
    3624:	57 18       	sub	r5, r7
    3626:	73 2c       	mov	r7, r3
    3628:	73 14       	cp	r7, r3
    362a:	68 f4       	brcc	.+26     	; 0x3646 <vfprintf+0x30e>
    362c:	b7 01       	movw	r22, r14
    362e:	80 e2       	ldi	r24, 0x20	; 32
    3630:	90 e0       	ldi	r25, 0x00	; 0
    3632:	2c 87       	std	Y+12, r18	; 0x0c
    3634:	0e 94 8c 1b 	call	0x3718	; 0x3718 <fputc>
    3638:	73 94       	inc	r7
    363a:	2c 85       	ldd	r18, Y+12	; 0x0c
    363c:	f5 cf       	rjmp	.-22     	; 0x3628 <vfprintf+0x2f0>
    363e:	73 14       	cp	r7, r3
    3640:	10 f4       	brcc	.+4      	; 0x3646 <vfprintf+0x30e>
    3642:	37 18       	sub	r3, r7
    3644:	01 c0       	rjmp	.+2      	; 0x3648 <vfprintf+0x310>
    3646:	31 2c       	mov	r3, r1
    3648:	24 ff       	sbrs	r18, 4
    364a:	12 c0       	rjmp	.+36     	; 0x3670 <vfprintf+0x338>
    364c:	b7 01       	movw	r22, r14
    364e:	80 e3       	ldi	r24, 0x30	; 48
    3650:	90 e0       	ldi	r25, 0x00	; 0
    3652:	2c 87       	std	Y+12, r18	; 0x0c
    3654:	0e 94 8c 1b 	call	0x3718	; 0x3718 <fputc>
    3658:	2c 85       	ldd	r18, Y+12	; 0x0c
    365a:	22 ff       	sbrs	r18, 2
    365c:	17 c0       	rjmp	.+46     	; 0x368c <vfprintf+0x354>
    365e:	21 ff       	sbrs	r18, 1
    3660:	03 c0       	rjmp	.+6      	; 0x3668 <vfprintf+0x330>
    3662:	88 e5       	ldi	r24, 0x58	; 88
    3664:	90 e0       	ldi	r25, 0x00	; 0
    3666:	02 c0       	rjmp	.+4      	; 0x366c <vfprintf+0x334>
    3668:	88 e7       	ldi	r24, 0x78	; 120
    366a:	90 e0       	ldi	r25, 0x00	; 0
    366c:	b7 01       	movw	r22, r14
    366e:	0c c0       	rjmp	.+24     	; 0x3688 <vfprintf+0x350>
    3670:	82 2f       	mov	r24, r18
    3672:	86 78       	andi	r24, 0x86	; 134
    3674:	59 f0       	breq	.+22     	; 0x368c <vfprintf+0x354>
    3676:	21 fd       	sbrc	r18, 1
    3678:	02 c0       	rjmp	.+4      	; 0x367e <vfprintf+0x346>
    367a:	80 e2       	ldi	r24, 0x20	; 32
    367c:	01 c0       	rjmp	.+2      	; 0x3680 <vfprintf+0x348>
    367e:	8b e2       	ldi	r24, 0x2B	; 43
    3680:	27 fd       	sbrc	r18, 7
    3682:	8d e2       	ldi	r24, 0x2D	; 45
    3684:	b7 01       	movw	r22, r14
    3686:	90 e0       	ldi	r25, 0x00	; 0
    3688:	0e 94 8c 1b 	call	0x3718	; 0x3718 <fputc>
    368c:	a5 14       	cp	r10, r5
    368e:	38 f4       	brcc	.+14     	; 0x369e <vfprintf+0x366>
    3690:	b7 01       	movw	r22, r14
    3692:	80 e3       	ldi	r24, 0x30	; 48
    3694:	90 e0       	ldi	r25, 0x00	; 0
    3696:	0e 94 8c 1b 	call	0x3718	; 0x3718 <fputc>
    369a:	5a 94       	dec	r5
    369c:	f7 cf       	rjmp	.-18     	; 0x368c <vfprintf+0x354>
    369e:	aa 94       	dec	r10
    36a0:	f4 01       	movw	r30, r8
    36a2:	ea 0d       	add	r30, r10
    36a4:	f1 1d       	adc	r31, r1
    36a6:	80 81       	ld	r24, Z
    36a8:	b7 01       	movw	r22, r14
    36aa:	90 e0       	ldi	r25, 0x00	; 0
    36ac:	0e 94 8c 1b 	call	0x3718	; 0x3718 <fputc>
    36b0:	a1 10       	cpse	r10, r1
    36b2:	f5 cf       	rjmp	.-22     	; 0x369e <vfprintf+0x366>
    36b4:	33 20       	and	r3, r3
    36b6:	09 f4       	brne	.+2      	; 0x36ba <vfprintf+0x382>
    36b8:	51 ce       	rjmp	.-862    	; 0x335c <vfprintf+0x24>
    36ba:	b7 01       	movw	r22, r14
    36bc:	80 e2       	ldi	r24, 0x20	; 32
    36be:	90 e0       	ldi	r25, 0x00	; 0
    36c0:	0e 94 8c 1b 	call	0x3718	; 0x3718 <fputc>
    36c4:	3a 94       	dec	r3
    36c6:	f6 cf       	rjmp	.-20     	; 0x36b4 <vfprintf+0x37c>
    36c8:	f7 01       	movw	r30, r14
    36ca:	86 81       	ldd	r24, Z+6	; 0x06
    36cc:	97 81       	ldd	r25, Z+7	; 0x07
    36ce:	02 c0       	rjmp	.+4      	; 0x36d4 <vfprintf+0x39c>
    36d0:	8f ef       	ldi	r24, 0xFF	; 255
    36d2:	9f ef       	ldi	r25, 0xFF	; 255
    36d4:	2c 96       	adiw	r28, 0x0c	; 12
    36d6:	e2 e1       	ldi	r30, 0x12	; 18
    36d8:	0c 94 5a 1c 	jmp	0x38b4	; 0x38b4 <__epilogue_restores__>

000036dc <__eerd_byte_m32u4>:
    36dc:	f9 99       	sbic	0x1f, 1	; 31
    36de:	fe cf       	rjmp	.-4      	; 0x36dc <__eerd_byte_m32u4>
    36e0:	92 bd       	out	0x22, r25	; 34
    36e2:	81 bd       	out	0x21, r24	; 33
    36e4:	f8 9a       	sbi	0x1f, 0	; 31
    36e6:	99 27       	eor	r25, r25
    36e8:	80 b5       	in	r24, 0x20	; 32
    36ea:	08 95       	ret

000036ec <strnlen_P>:
    36ec:	fc 01       	movw	r30, r24
    36ee:	05 90       	lpm	r0, Z+
    36f0:	61 50       	subi	r22, 0x01	; 1
    36f2:	70 40       	sbci	r23, 0x00	; 0
    36f4:	01 10       	cpse	r0, r1
    36f6:	d8 f7       	brcc	.-10     	; 0x36ee <strnlen_P+0x2>
    36f8:	80 95       	com	r24
    36fa:	90 95       	com	r25
    36fc:	8e 0f       	add	r24, r30
    36fe:	9f 1f       	adc	r25, r31
    3700:	08 95       	ret

00003702 <strnlen>:
    3702:	fc 01       	movw	r30, r24
    3704:	61 50       	subi	r22, 0x01	; 1
    3706:	70 40       	sbci	r23, 0x00	; 0
    3708:	01 90       	ld	r0, Z+
    370a:	01 10       	cpse	r0, r1
    370c:	d8 f7       	brcc	.-10     	; 0x3704 <strnlen+0x2>
    370e:	80 95       	com	r24
    3710:	90 95       	com	r25
    3712:	8e 0f       	add	r24, r30
    3714:	9f 1f       	adc	r25, r31
    3716:	08 95       	ret

00003718 <fputc>:
    3718:	0f 93       	push	r16
    371a:	1f 93       	push	r17
    371c:	cf 93       	push	r28
    371e:	df 93       	push	r29
    3720:	18 2f       	mov	r17, r24
    3722:	09 2f       	mov	r16, r25
    3724:	eb 01       	movw	r28, r22
    3726:	8b 81       	ldd	r24, Y+3	; 0x03
    3728:	81 fd       	sbrc	r24, 1
    372a:	03 c0       	rjmp	.+6      	; 0x3732 <fputc+0x1a>
    372c:	8f ef       	ldi	r24, 0xFF	; 255
    372e:	9f ef       	ldi	r25, 0xFF	; 255
    3730:	20 c0       	rjmp	.+64     	; 0x3772 <fputc+0x5a>
    3732:	82 ff       	sbrs	r24, 2
    3734:	10 c0       	rjmp	.+32     	; 0x3756 <fputc+0x3e>
    3736:	4e 81       	ldd	r20, Y+6	; 0x06
    3738:	5f 81       	ldd	r21, Y+7	; 0x07
    373a:	2c 81       	ldd	r18, Y+4	; 0x04
    373c:	3d 81       	ldd	r19, Y+5	; 0x05
    373e:	42 17       	cp	r20, r18
    3740:	53 07       	cpc	r21, r19
    3742:	7c f4       	brge	.+30     	; 0x3762 <fputc+0x4a>
    3744:	e8 81       	ld	r30, Y
    3746:	f9 81       	ldd	r31, Y+1	; 0x01
    3748:	9f 01       	movw	r18, r30
    374a:	2f 5f       	subi	r18, 0xFF	; 255
    374c:	3f 4f       	sbci	r19, 0xFF	; 255
    374e:	39 83       	std	Y+1, r19	; 0x01
    3750:	28 83       	st	Y, r18
    3752:	10 83       	st	Z, r17
    3754:	06 c0       	rjmp	.+12     	; 0x3762 <fputc+0x4a>
    3756:	e8 85       	ldd	r30, Y+8	; 0x08
    3758:	f9 85       	ldd	r31, Y+9	; 0x09
    375a:	81 2f       	mov	r24, r17
    375c:	09 95       	icall
    375e:	89 2b       	or	r24, r25
    3760:	29 f7       	brne	.-54     	; 0x372c <fputc+0x14>
    3762:	2e 81       	ldd	r18, Y+6	; 0x06
    3764:	3f 81       	ldd	r19, Y+7	; 0x07
    3766:	2f 5f       	subi	r18, 0xFF	; 255
    3768:	3f 4f       	sbci	r19, 0xFF	; 255
    376a:	3f 83       	std	Y+7, r19	; 0x07
    376c:	2e 83       	std	Y+6, r18	; 0x06
    376e:	81 2f       	mov	r24, r17
    3770:	90 2f       	mov	r25, r16
    3772:	df 91       	pop	r29
    3774:	cf 91       	pop	r28
    3776:	1f 91       	pop	r17
    3778:	0f 91       	pop	r16
    377a:	08 95       	ret

0000377c <__ultoa_invert>:
    377c:	fa 01       	movw	r30, r20
    377e:	aa 27       	eor	r26, r26
    3780:	28 30       	cpi	r18, 0x08	; 8
    3782:	51 f1       	breq	.+84     	; 0x37d8 <__ultoa_invert+0x5c>
    3784:	20 31       	cpi	r18, 0x10	; 16
    3786:	81 f1       	breq	.+96     	; 0x37e8 <__ultoa_invert+0x6c>
    3788:	e8 94       	clt
    378a:	6f 93       	push	r22
    378c:	6e 7f       	andi	r22, 0xFE	; 254
    378e:	6e 5f       	subi	r22, 0xFE	; 254
    3790:	7f 4f       	sbci	r23, 0xFF	; 255
    3792:	8f 4f       	sbci	r24, 0xFF	; 255
    3794:	9f 4f       	sbci	r25, 0xFF	; 255
    3796:	af 4f       	sbci	r26, 0xFF	; 255
    3798:	b1 e0       	ldi	r27, 0x01	; 1
    379a:	3e d0       	rcall	.+124    	; 0x3818 <__ultoa_invert+0x9c>
    379c:	b4 e0       	ldi	r27, 0x04	; 4
    379e:	3c d0       	rcall	.+120    	; 0x3818 <__ultoa_invert+0x9c>
    37a0:	67 0f       	add	r22, r23
    37a2:	78 1f       	adc	r23, r24
    37a4:	89 1f       	adc	r24, r25
    37a6:	9a 1f       	adc	r25, r26
    37a8:	a1 1d       	adc	r26, r1
    37aa:	68 0f       	add	r22, r24
    37ac:	79 1f       	adc	r23, r25
    37ae:	8a 1f       	adc	r24, r26
    37b0:	91 1d       	adc	r25, r1
    37b2:	a1 1d       	adc	r26, r1
    37b4:	6a 0f       	add	r22, r26
    37b6:	71 1d       	adc	r23, r1
    37b8:	81 1d       	adc	r24, r1
    37ba:	91 1d       	adc	r25, r1
    37bc:	a1 1d       	adc	r26, r1
    37be:	20 d0       	rcall	.+64     	; 0x3800 <__ultoa_invert+0x84>
    37c0:	09 f4       	brne	.+2      	; 0x37c4 <__ultoa_invert+0x48>
    37c2:	68 94       	set
    37c4:	3f 91       	pop	r19
    37c6:	2a e0       	ldi	r18, 0x0A	; 10
    37c8:	26 9f       	mul	r18, r22
    37ca:	11 24       	eor	r1, r1
    37cc:	30 19       	sub	r19, r0
    37ce:	30 5d       	subi	r19, 0xD0	; 208
    37d0:	31 93       	st	Z+, r19
    37d2:	de f6       	brtc	.-74     	; 0x378a <__ultoa_invert+0xe>
    37d4:	cf 01       	movw	r24, r30
    37d6:	08 95       	ret
    37d8:	46 2f       	mov	r20, r22
    37da:	47 70       	andi	r20, 0x07	; 7
    37dc:	40 5d       	subi	r20, 0xD0	; 208
    37de:	41 93       	st	Z+, r20
    37e0:	b3 e0       	ldi	r27, 0x03	; 3
    37e2:	0f d0       	rcall	.+30     	; 0x3802 <__ultoa_invert+0x86>
    37e4:	c9 f7       	brne	.-14     	; 0x37d8 <__ultoa_invert+0x5c>
    37e6:	f6 cf       	rjmp	.-20     	; 0x37d4 <__ultoa_invert+0x58>
    37e8:	46 2f       	mov	r20, r22
    37ea:	4f 70       	andi	r20, 0x0F	; 15
    37ec:	40 5d       	subi	r20, 0xD0	; 208
    37ee:	4a 33       	cpi	r20, 0x3A	; 58
    37f0:	18 f0       	brcs	.+6      	; 0x37f8 <__ultoa_invert+0x7c>
    37f2:	49 5d       	subi	r20, 0xD9	; 217
    37f4:	31 fd       	sbrc	r19, 1
    37f6:	40 52       	subi	r20, 0x20	; 32
    37f8:	41 93       	st	Z+, r20
    37fa:	02 d0       	rcall	.+4      	; 0x3800 <__ultoa_invert+0x84>
    37fc:	a9 f7       	brne	.-22     	; 0x37e8 <__ultoa_invert+0x6c>
    37fe:	ea cf       	rjmp	.-44     	; 0x37d4 <__ultoa_invert+0x58>
    3800:	b4 e0       	ldi	r27, 0x04	; 4
    3802:	a6 95       	lsr	r26
    3804:	97 95       	ror	r25
    3806:	87 95       	ror	r24
    3808:	77 95       	ror	r23
    380a:	67 95       	ror	r22
    380c:	ba 95       	dec	r27
    380e:	c9 f7       	brne	.-14     	; 0x3802 <__ultoa_invert+0x86>
    3810:	00 97       	sbiw	r24, 0x00	; 0
    3812:	61 05       	cpc	r22, r1
    3814:	71 05       	cpc	r23, r1
    3816:	08 95       	ret
    3818:	9b 01       	movw	r18, r22
    381a:	ac 01       	movw	r20, r24
    381c:	0a 2e       	mov	r0, r26
    381e:	06 94       	lsr	r0
    3820:	57 95       	ror	r21
    3822:	47 95       	ror	r20
    3824:	37 95       	ror	r19
    3826:	27 95       	ror	r18
    3828:	ba 95       	dec	r27
    382a:	c9 f7       	brne	.-14     	; 0x381e <__ultoa_invert+0xa2>
    382c:	62 0f       	add	r22, r18
    382e:	73 1f       	adc	r23, r19
    3830:	84 1f       	adc	r24, r20
    3832:	95 1f       	adc	r25, r21
    3834:	a0 1d       	adc	r26, r0
    3836:	08 95       	ret

00003838 <__udivmodsi4>:
    3838:	a1 e2       	ldi	r26, 0x21	; 33
    383a:	1a 2e       	mov	r1, r26
    383c:	aa 1b       	sub	r26, r26
    383e:	bb 1b       	sub	r27, r27
    3840:	fd 01       	movw	r30, r26
    3842:	0d c0       	rjmp	.+26     	; 0x385e <__udivmodsi4_ep>

00003844 <__udivmodsi4_loop>:
    3844:	aa 1f       	adc	r26, r26
    3846:	bb 1f       	adc	r27, r27
    3848:	ee 1f       	adc	r30, r30
    384a:	ff 1f       	adc	r31, r31
    384c:	a2 17       	cp	r26, r18
    384e:	b3 07       	cpc	r27, r19
    3850:	e4 07       	cpc	r30, r20
    3852:	f5 07       	cpc	r31, r21
    3854:	20 f0       	brcs	.+8      	; 0x385e <__udivmodsi4_ep>
    3856:	a2 1b       	sub	r26, r18
    3858:	b3 0b       	sbc	r27, r19
    385a:	e4 0b       	sbc	r30, r20
    385c:	f5 0b       	sbc	r31, r21

0000385e <__udivmodsi4_ep>:
    385e:	66 1f       	adc	r22, r22
    3860:	77 1f       	adc	r23, r23
    3862:	88 1f       	adc	r24, r24
    3864:	99 1f       	adc	r25, r25
    3866:	1a 94       	dec	r1
    3868:	69 f7       	brne	.-38     	; 0x3844 <__udivmodsi4_loop>
    386a:	60 95       	com	r22
    386c:	70 95       	com	r23
    386e:	80 95       	com	r24
    3870:	90 95       	com	r25
    3872:	9b 01       	movw	r18, r22
    3874:	ac 01       	movw	r20, r24
    3876:	bd 01       	movw	r22, r26
    3878:	cf 01       	movw	r24, r30
    387a:	08 95       	ret

0000387c <__prologue_saves__>:
    387c:	2f 92       	push	r2
    387e:	3f 92       	push	r3
    3880:	4f 92       	push	r4
    3882:	5f 92       	push	r5
    3884:	6f 92       	push	r6
    3886:	7f 92       	push	r7
    3888:	8f 92       	push	r8
    388a:	9f 92       	push	r9
    388c:	af 92       	push	r10
    388e:	bf 92       	push	r11
    3890:	cf 92       	push	r12
    3892:	df 92       	push	r13
    3894:	ef 92       	push	r14
    3896:	ff 92       	push	r15
    3898:	0f 93       	push	r16
    389a:	1f 93       	push	r17
    389c:	cf 93       	push	r28
    389e:	df 93       	push	r29
    38a0:	cd b7       	in	r28, 0x3d	; 61
    38a2:	de b7       	in	r29, 0x3e	; 62
    38a4:	ca 1b       	sub	r28, r26
    38a6:	db 0b       	sbc	r29, r27
    38a8:	0f b6       	in	r0, 0x3f	; 63
    38aa:	f8 94       	cli
    38ac:	de bf       	out	0x3e, r29	; 62
    38ae:	0f be       	out	0x3f, r0	; 63
    38b0:	cd bf       	out	0x3d, r28	; 61
    38b2:	09 94       	ijmp

000038b4 <__epilogue_restores__>:
    38b4:	2a 88       	ldd	r2, Y+18	; 0x12
    38b6:	39 88       	ldd	r3, Y+17	; 0x11
    38b8:	48 88       	ldd	r4, Y+16	; 0x10
    38ba:	5f 84       	ldd	r5, Y+15	; 0x0f
    38bc:	6e 84       	ldd	r6, Y+14	; 0x0e
    38be:	7d 84       	ldd	r7, Y+13	; 0x0d
    38c0:	8c 84       	ldd	r8, Y+12	; 0x0c
    38c2:	9b 84       	ldd	r9, Y+11	; 0x0b
    38c4:	aa 84       	ldd	r10, Y+10	; 0x0a
    38c6:	b9 84       	ldd	r11, Y+9	; 0x09
    38c8:	c8 84       	ldd	r12, Y+8	; 0x08
    38ca:	df 80       	ldd	r13, Y+7	; 0x07
    38cc:	ee 80       	ldd	r14, Y+6	; 0x06
    38ce:	fd 80       	ldd	r15, Y+5	; 0x05
    38d0:	0c 81       	ldd	r16, Y+4	; 0x04
    38d2:	1b 81       	ldd	r17, Y+3	; 0x03
    38d4:	aa 81       	ldd	r26, Y+2	; 0x02
    38d6:	b9 81       	ldd	r27, Y+1	; 0x01
    38d8:	ce 0f       	add	r28, r30
    38da:	d1 1d       	adc	r29, r1
    38dc:	0f b6       	in	r0, 0x3f	; 63
    38de:	f8 94       	cli
    38e0:	de bf       	out	0x3e, r29	; 62
    38e2:	0f be       	out	0x3f, r0	; 63
    38e4:	cd bf       	out	0x3d, r28	; 61
    38e6:	ed 01       	movw	r28, r26
    38e8:	08 95       	ret

000038ea <__tablejump2__>:
    38ea:	ee 0f       	add	r30, r30
    38ec:	ff 1f       	adc	r31, r31

000038ee <__tablejump__>:
    38ee:	05 90       	lpm	r0, Z+
    38f0:	f4 91       	lpm	r31, Z
    38f2:	e0 2d       	mov	r30, r0
    38f4:	09 94       	ijmp

000038f6 <__do_global_dtors>:
    38f6:	12 e0       	ldi	r17, 0x02	; 2
    38f8:	cc e4       	ldi	r28, 0x4C	; 76
    38fa:	d2 e0       	ldi	r29, 0x02	; 2
    38fc:	04 c0       	rjmp	.+8      	; 0x3906 <__do_global_dtors+0x10>
    38fe:	fe 01       	movw	r30, r28
    3900:	0e 94 77 1c 	call	0x38ee	; 0x38ee <__tablejump__>
    3904:	22 96       	adiw	r28, 0x02	; 2
    3906:	ce 34       	cpi	r28, 0x4E	; 78
    3908:	d1 07       	cpc	r29, r17
    390a:	c9 f7       	brne	.-14     	; 0x38fe <__do_global_dtors+0x8>
    390c:	f8 94       	cli

0000390e <__stop_program>:
    390e:	ff cf       	rjmp	.-2      	; 0x390e <__stop_program>
